==== File: accesslist/templates/acl_create_info.html ====
@@ -97,11 +97,11 @@
                     <label class="contact-form__label">
                         <span class="contact-form__text">Отдел/Управление</span>
                         {% if team %}
-                            <input type="text" name="department" value="{{ team.name }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
-                            <input type="hidden" name="teamid" value="{{ team.id }}" class="contact__input">
+                            <input type="text" id="department" name="department" value="{{ team.name }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
+                            <input type="hidden" id="teamid" name="teamid" value="{{ team.id }}" class="contact__input">
                         {% else %}
-                            <input type="text" name="department" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.3 }}{% endif %}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
-                            <input type="hidden" name="teamid" value="0" class="contact__input">
+                            <input type="text" id="department" name="department" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.3 }}{% endif %}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
+                            <input type="hidden" id="teamid" name="teamid" value="0" class="contact__input">
                         {% endif %}
                         <span class="validity"></span>
                         <a href="{% url 'teams' %}" style="position: absolute; left: 50em" class="button_teams">Выбрать</a>
@@ -120,7 +120,7 @@
               <label class="contact-form__label">
                 <span class="contact-form__text" style="margin-right: 74px;">Проект/ИС</span>
                   <select class="contact__input" id="gitlab_proj_upload_dropdown" name="project" required>
-                        <option value="" {% if not LOCAL_STORAGE %} selected {% endif %}>Не выбрано</option>
+                        <option value="" {% if not LOCAL_STORAGE %} selected {% endif %} data-gitlab-url="">Не выбрано</option>
                         {% for acl_from_git in acl_gitlab_store %}
                             <option value="{{ acl_from_git.project }}" data-gitlab-url="{{ acl_from_git.gitlab_url }}"{% if LOCAL_STORAGE.4 == acl_from_git.project %}selected{% endif %}>{{ acl_from_git.project }}</option>
                         {% endfor %}
@@ -292,15 +292,15 @@
                         <span class="contact-form__text">Отдел/Управление</span>
 {#                        <input type="text" name="department" value="{{ user.department }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required disabled>#}
                         {% if team %}
-                            <input type="text" name="department" value="{{ team.name }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
-                            <input type="hidden" name="teamid" value="{{ team.id }}" class="contact__input">
+                            <input type="text" id="department" name="department" value="{{ team.name }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
+                            <input type="hidden" id="teamid" name="teamid" value="{{ team.id }}" class="contact__input">
                         {% else %}
                             {% if LOCAL_STORAGE %}
-                                <input type="text" name="department" value="{{ LOCAL_STORAGE.3 }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
+                                <input type="text" id="department" name="department" value="{{ LOCAL_STORAGE.3 }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
                             {% else %}
-                                <input type="text" name="department" value="{{ user.department }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
+                                <input type="text" id="department" name="department" value="{{ user.department }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
                             {% endif %}
-                            <input type="hidden" name="teamid" value="0" class="contact__input">
+                            <input type="hidden" id="teamid" name="teamid" value="0" class="contact__input">
                         {% endif %}
                         <span class="validity"></span>
                         <a href="{% url 'teams' %}" style="position: absolute; left: 50em" class="button_teams">Выбрать</a>
@@ -317,7 +317,7 @@
               <label class="contact-form__label">
                 <span class="contact-form__text" style="margin-right: 74px;">Проект/ИС</span>
                   <select class="contact__input" id="gitlab_proj_upload_dropdown" name="project" required>
-                        <option value="" selected>Не выбрано</option>
+                        <option value="" data-gitlab-url="" selected >Не выбрано</option>
                         {% for acl_from_git in acl_gitlab_store %}
                             <option value="{{ acl_from_git.project }}" data-gitlab-url="{{ acl_from_git.gitlab_url }}">{{ acl_from_git.project }}</option>
                         {% endfor %}
@@ -710,4 +710,13 @@
         });
     });
 </script>
+<script>
+    window.addEventListener('load', function() {
+        team_name = document.getElementById('department').value;
+        if (team_name != ""){
+            SetTeamIdAndFilterProjects(team_name);
+        }
+    });
+</script>
+
 {% endblock %}


==== File: accesslist/urls.py ====
@@ -73,6 +73,8 @@ urlpatterns = [
     path("git_upload_template/", upload_acl_from_git, name="gitlab_upload_acl"),
     path("git_get_files/", get_gitlab_files, name="git_get_files"),
     path("git_update_projects/", sync_gitlab_projects, name="git_projects_sync"),
+    path("project_filter_by_department/", get_project_filter_by_department, name="get_project_filter"),
+    path("set_teamid/", set_team_id, name="set_team_id"),
     #path("overviewstatus/", OverViewStatus, name="aclcheck_status_urls"),
     path("act/<str:acl_id>/<str:job>/<str:do>/", act),
     path("task/<str:acl_id>/", task, name="aclcheck_status_urls"),


==== File: accesslist/views.py ====
@@ -1287,4 +1287,25 @@ def sync_gitlab_projects(request=None):
         return HttpResponse(json.dumps(new_projects_list), content_type="application/text")
     except Exception as e:
         logger.error(f"[Ошибка при Обновлении списка проектов] {e}")
-        return HttpResponse(json.dumps([]), content_type="application/text")
\ No newline at end of file
+        return HttpResponse(json.dumps([]), content_type="application/text")
+
+def get_project_filter_by_department(request=None):
+
+    try:
+        team_id = request.GET.get('team_id')
+        team_obj = Team.objects.get(id=team_id)
+        git_group_url = team_obj.gitlab_group_url
+        # pattern = r'https://gitlab\.alfastrah\.ru/acl/([^/]+/[^/]+)$'
+        # result = re.search(pattern, git_group_url).group(1)
+        return HttpResponse(json.dumps(git_group_url), content_type="application/text")
+    except Exception as e:
+        logger.error(f'Ошибка при получении фильтра')
+
+def set_team_id(request=None):
+    try:
+        team_name = request.GET.get('team_name')
+        team_obj = Team.objects.get(name=team_name)
+        team_id = team_obj.id
+        return HttpResponse(json.dumps(team_id), content_type="application/text")
+    except Exception as e:
+        logger.error(f'Ошибка при установке teamid')
\ No newline at end of file


==== File: static/js/main.js ====
@@ -805,6 +805,8 @@ $(".modal-teams .btn-submit").click(function(){
         $("p[name='department']").text($(window.team[0]));
         $("input[name='teamid']").val($(window.team[0]).attr('data-store'));
         $(".modal-teams").modal('hide');
+
+        FilterProjectsByDepartment();
     }
 
 });
@@ -959,4 +961,53 @@ function SetGitURL(git_url, git_file)
                 ShowNotify(idx=0, text='Произошла ошибка при отправке данных');
                 return false;
             });
+}
+
+function FilterProjectsByDepartment(){
+    team_id = document.getElementById('teamid').value;
+    var csrfToken = $('input[name="csrfmiddlewaretoken"]').val();
+    $.ajax({
+        url: '/acl/project_filter_by_department/',
+        type: 'GET',
+        data: {
+            'team_id': team_id
+        },
+        headers: {'X-CSRFToken': csrfToken},
+        success: function(response) {
+            const projectsSelect = document.getElementById("gitlab_proj_upload_dropdown");
+
+            gitlab_group_url = JSON.parse(response);
+            Array.from(projectsSelect.options).forEach((option) => {
+                gitlab_project_url = option.getAttribute('data-gitlab-url');
+                if (gitlab_project_url.includes(gitlab_group_url)) {
+                    option.disabled = false;
+                    option.hidden = false;
+                }
+                else {
+                    option.disabled = true;
+                    option.hidden = true;
+                }
+            });
+
+        },
+        error: function(xhr, status, error) {
+            ShowNotify(0, 'Ошибка при Фильтрации');
+        }
+    });
+}
+
+function SetTeamIdAndFilterProjects(team_name){
+    var csrfToken = $('input[name="csrfmiddlewaretoken"]').val();
+    $.ajax({
+        url: '/acl/set_teamid/',
+        type: 'GET',
+        data: {
+            'team_name': team_name
+        },
+        headers: {'X-CSRFToken': csrfToken},
+        success: function(response) {
+            $("input[name='teamid']").val(JSON.parse(response));
+            FilterProjectsByDepartment();
+        }
+    });
 }
\ No newline at end of file


==== File: teams/models.py ====
@@ -6,7 +6,7 @@ class Team(models.Model):
     name = models.CharField(editable=True, max_length=128, unique=True)
     response = models.ManyToManyField(User, related_name='users_as_owners', blank=True)
     architector = models.ForeignKey(User, related_name='user_as_architector', on_delete=models.SET_NULL, null=True, blank=True)
-
+    gitlab_group_url = models.URLField(blank=True)
     def __str__(self):
         return self.name
 


