==== File: accesslist/models.py ====
@@ -1,4 +1,6 @@
 from django.db import models
+from django.db.models.signals import pre_save
+from django.dispatch import receiver
 from ownerlist.models import Owners
 from django.contrib.auth.models import User, Group
 from ownerlist.utils import MakeTemporaryToken
@@ -37,26 +39,33 @@ class ACL(models.Model):
 
     last_status = models.CharField(max_length=20, default='')
     last_status_change_date = models.DateTimeField(blank=True, null=True)
-    status_complete_date = models.DateTimeField(blank=True, null=True)
+    days_in_work = models.IntegerField(blank=True, null=True)
 
     def save(self, *args, **kwargs):
         if self.token is None or self.token == '':
             self.token = MakeTemporaryToken()
-        if self.status != self._state.adding and self.status != self.last_status:
-            if self.status not in ["CMP", "CNL"]:
-                self.last_status = self.status
-                self.last_status_change_date = datetime.now(timezone.utc)
-            else:
-                self.status_complete_date = datetime.now(timezone.utc)
+        if self.status == 'JOB' and self.last_status_change_date:
+            self.days_in_work = (datetime.now().date() - self.last_status_change_date.date()).days
         super().save(*args, **kwargs)
 
     def days_in_job_status(self):
         if self.status == 'JOB' and self.last_status_change_date:
-            return (datetime.now().date() - self.last_status_change_date.date()).days
-        elif self.status in ["CMP", "CNL"] and self.last_status_change_date and self.status_complete_date:
-            return (self.status_complete_date.date() - self.last_status_change_date.date()).days
+            self.days_in_work = (datetime.now().date() - self.last_status_change_date.date()).days
+            self.save()
+            return self.days_in_work
+        elif self.status in ["CMP", "CNL"] and self.last_status_change_date and self.days_in_work != None:
+            return self.days_in_work
         else:
-            return 0
+            return ''
+
+@receiver(pre_save, sender=ACL)
+def update_days_in_work(sender, instance, **kwargs):
+    if instance.status != instance._state.adding and instance.status != instance.last_status:
+        if instance.status not in ["CMP", "CNL"]:
+            instance.last_status = instance.status
+            instance.last_status_change_date = datetime.now(timezone.utc)
+            instance.days_in_work = (datetime.now().date() - instance.last_status_change_date.date()).days
+            instance.days_in_job_status()
 
 class AclHistory(models.Model):
     id = models.BigAutoField(db_index=True, primary_key=True)


