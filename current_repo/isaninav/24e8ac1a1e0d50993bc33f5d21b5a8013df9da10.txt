==== File: accesslist/views.py ====
@@ -664,6 +664,7 @@ def AclStageChange(request,  *args, **kwargs):
                                    return HttpResponse(json.dumps(result), content_type="application/json")
                             else:
                                 messages.info(request, 'Данные изменены')
+                                acl.approve.set([request.user])
                                 if 'pending' in request.META.get('HTTP_REFERER'):
 
                                         #Проверяет что изменения произошли на странице согласования
@@ -869,7 +870,7 @@ def task(request, acl_id)->bool:
                         obj.taskid = str(result_id)
                     #     obj.status = 'JOB'
                         obj.save(update_fields=['taskid'])
-                        send_to_mattermost(f'[owner={obj.owner}, uuid={obj.uuid}] Получен номер SD("{result_id}"). Добавление Номера SD в БД. Проверка записи: obj.taskid={obj.taskid}')
+                        send_to_mattermost(f'[owner={obj.owner}, uuid={obj.id}] Получен номер SD("{result_id}"). Добавление Номера SD в БД. Проверка записи: obj.taskid={obj.taskid}')
                     UpdateCallBackStatus(request, acl_id, 'omni_email_status',
                                          '<p class="text-success">Обращение под номером {} успешно зарегистрировано</p>'.format(
                                              result_id), 2)
@@ -975,7 +976,7 @@ def task(request, acl_id)->bool:
             obj.status = 'APRV' #Фикс баги если сформировать docx то статус будет на исполнении
     if result_id:
         obj.taskid = str(result_id)
-        send_to_mattermost(f"[owner={obj.owner}, uuid={obj.uuid}] Записываю полученный номер SD({result_id}, тип: {type(result_id)}) в obj.taskid.")
+        send_to_mattermost(f"[owner={obj.owner}, uuid={obj.id}] Записываю полученный номер SD({result_id}, тип: {type(result_id)}) в obj.taskid.")
     #else:
     #obj.status = 'FL'
     if is_work_done or obj.status == 'FLY':
@@ -985,7 +986,7 @@ def task(request, acl_id)->bool:
             obj.status = 'APRV' #Фикс баги если сформировать docx то статус будет на исполнении
         with transaction.atomic():
             obj.save(update_fields=['status', 'taskid'])
-            send_to_mattermost(f'[owner={obj.owner}, uuid={obj.uuid}] Сохранение status, taskid в obj. [ obj.status={obj.status}, obj.taskid = {obj.taskid} ]')
+            send_to_mattermost(f'[owner={obj.owner}, uuid={obj.id}] Сохранение status, taskid в obj. [ obj.status={obj.status}, obj.taskid = {obj.taskid} ]')
 
     if settings.DEBUG:
         print("REQUEST FINISH, SAVING DATA: {}: {}".format([job for job in tasklist if job in request.session], JOB))


