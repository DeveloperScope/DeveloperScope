==== File: accesslist/views.py ====
@@ -824,8 +824,10 @@ def check_taskid_and_status(request, *args, **kwargs):
         success_checks_count = 0
         success_send_omni_count = 0
         unsuccessful_make_docx_acl = []
+        unsuccessful_git_push_acl = []
         unsuccess_count = 0
         unsuccessful_make_docx_count = 0
+        unsuccessful_send_git_count  = 0
         if user.is_authenticated and user.is_superuser:
             checked_acl_list = request.POST.getlist('acl_list[]')
             aclObject_list = ACL.objects.filter(id__in=checked_acl_list)
@@ -873,8 +875,49 @@ def check_taskid_and_status(request, *args, **kwargs):
                                             aclObject.taskid = str(result_id)
                                             aclObject.save(update_fields=['taskid'])
                                             success_send_omni_count += 1
-                                            send_to_mattermost(
-                                                f'[acl_pusher][owner={aclObject.owner}, Ссылка на ACL: https://acl.vesta.ru/acl/info/{str(aclObject.id)}] Получен номер SD("{result_id}"). Добавление и проверка записи на портале={aclObject.taskid}')
+                                            send_to_mattermost(f'[acl_pusher][owner={aclObject.owner}, Ссылка на ACL: https://acl.vesta.ru/acl/info/{str(aclObject.id)}] Получен номер SD("{result_id}"). Добавление и проверка записи на портале={aclObject.taskid}')
+
+                                            try:
+                                                file_md = MakeMarkDown(request, json.loads(aclObject.acltext),
+                                                                       'acl_{}'.format(acl_id), acl_id) or 'None'
+                                                if not file_md:
+                                                    send_to_mattermost('[acl_pusher] Ошибка: функция создания md отработала, но файл не сформирован.')
+                                                    raise Exception('[acl_pusher] Ошибка: функция создания md отработала, но файл не сформирован.')
+
+                                                file_md_abs = os.path.join(BASE_DIR, 'static/md/' + 'acl_{}'.format(
+                                                    str(acl_id)) + '.md')
+                                                if '/' in file_md_abs:
+                                                    if 'linux' not in sys.platform:
+                                                        file_md_abs = file_md_abs.replace('/', '\\')
+                                                if not os.path.exists(file_md_abs):
+                                                    file_md_abs = os.path.join(BASE_DIR, 'static/md/' + 'acl_{}'.format(
+                                                        str(acl_id)) + '.md')
+                                                if 'GIT_USERNAME' not in request.session or 'GIT_PASSWORD' not in request.session:
+                                                    logger.error('Невалидные учетные данные для аутентификации')
+                                                    raise Exception('Невалидные учетные данные для аутентификации')
+                                                gitlab_project = aclObject.project
+                                                gitlab_filename = aclObject.git_filename
+                                                gitlab_repo_url = ACLGitlabStore.objects.get(
+                                                    project=gitlab_project).gitlab_url
+                                                g = GitWorker(request, gitlab_repo_url, request.session['GIT_USERNAME'],
+                                                              request.session['GIT_PASSWORD'], None, file_md_abs,
+                                                              taskid=acl_id)
+                                                if g:
+                                                    if g.clone():
+                                                        g.repo.git.checkout('develop')
+                                                        g.pull()
+                                                        f = g.activity(gitlab_filename)
+                                                        if f:
+                                                            if g.addindex(f):
+                                                                if g.push(refspec='develop:develop'):
+                                                                    logger.info(f'[acl_pusher] acl успешно отправлен в git')
+                                                    g.free()
+                                            except Exception as e:
+                                                unsuccessful_git_push_acl.append(f'https://acl.vesta.ru/acl/info/{str(aclObject.id)}')
+                                                unsuccessful_send_git_count += 1
+                                                send_to_mattermost(f'[acl_pusher] Ошибка при отправке в git: {e}')
+                                                logger.error(f'[acl_pusher] Ошибка при отправке в git: {e}')
+                                        if 'ACT_MAKE_GIT' in request.session: del request.session['ACT_MAKE_GIT']
                                         if 'ACT_OMNI' in request.session: del request.session['ACT_OMNI']
                                 except Exception as e:
                                     send_to_mattermost(f"[acl_pusher] Произошла ошибка при формировании заявки: {e}")
@@ -896,11 +939,18 @@ def check_taskid_and_status(request, *args, **kwargs):
                     logger.error(f'[acl_pusher] Ошибка при работе с acl({acl_id}): {e} ')
                     unsuccess_count += 1
                     continue
-        send_to_mattermost(f"[acl_pusher] Результат работы Доталкивателя ACL: ( ACL Проверено: {success_checks_count}; ACL переотправлено: {success_send_omni_count}); Не удалось отправить: {unsuccess_count}; Не удалось создать docx: {unsuccessful_make_docx_count};")
+        send_to_mattermost(f"[acl_pusher] Результат работы Доталкивателя ACL: ( ACL Проверено: {success_checks_count}; ACL переотправлено: {success_send_omni_count}); Не удалось отправить omni: {unsuccess_count}; Не удалось создать docx: {unsuccessful_make_docx_count}; Не удалось отправить в git: {unsuccessful_send_git_count}")
         unsuccessful_make_docx_msg = ''
-        for el in unsuccessful_make_docx_acl:
-            unsuccessful_make_docx_msg += el + ";"
-        send_to_mattermost(f'Не удалось сформировать docx для следующих ACL:{unsuccessful_make_docx_msg}')
+        if len(unsuccessful_make_docx_acl) > 0:
+            for el in unsuccessful_make_docx_acl:
+                unsuccessful_make_docx_msg += el + "; "
+            send_to_mattermost(f'Не удалось сформировать docx для следующих ACL:{unsuccessful_make_docx_msg}')
+        unsuccessful_git_push_msg = ''
+        if len(unsuccessful_git_push_acl) > 0:
+            for el in unsuccessful_git_push_acl:
+                unsuccessful_git_push_msg += el + "; "
+            send_to_mattermost(f'Не удалось сформировать docx для следующих ACL:{unsuccessful_git_push_msg}')
+
         return HttpResponseRedirect(reverse('aclhistory_urls'))
     return HttpResponse(json.dumps("Error method type"), content_type="application/text")
 


