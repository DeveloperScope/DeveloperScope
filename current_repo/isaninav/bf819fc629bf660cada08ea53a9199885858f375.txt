==== File: accesslist/views.py ====
@@ -870,7 +870,7 @@ def task(request, acl_id)->bool:
                         obj.taskid = str(result_id)
                     #     obj.status = 'JOB'
                         obj.save(update_fields=['taskid'])
-                        send_to_mattermost(f'[owner={obj.owner}, uuid={obj.id}] Получен номер SD("{result_id}"). Добавление Номера SD в БД. Проверка записи: obj.taskid={obj.taskid}')
+                        send_to_mattermost(f'[owner={obj.owner}, Ссылка на ACL: https://acl.vesta.ru/acl/info/{str(obj.id)}] Получен номер SD("{result_id}"). Добавление Номера SD в БД. Проверка записи: obj.taskid={obj.taskid}')
                     UpdateCallBackStatus(request, acl_id, 'omni_email_status',
                                          '<p class="text-success">Обращение под номером {} успешно зарегистрировано</p>'.format(
                                              result_id), 2)
@@ -976,7 +976,6 @@ def task(request, acl_id)->bool:
             obj.status = 'APRV' #Фикс баги если сформировать docx то статус будет на исполнении
     if result_id:
         obj.taskid = str(result_id)
-        send_to_mattermost(f"[owner={obj.owner}, uuid={obj.id}] Записываю полученный номер SD({result_id}, тип: {type(result_id)}) в obj.taskid.")
     #else:
     #obj.status = 'FL'
     if is_work_done or obj.status == 'FLY':
@@ -986,8 +985,6 @@ def task(request, acl_id)->bool:
             obj.status = 'APRV' #Фикс баги если сформировать docx то статус будет на исполнении
         with transaction.atomic():
             obj.save(update_fields=['status', 'taskid'])
-            send_to_mattermost(f'[owner={obj.owner}, uuid={obj.id}] Сохранение status, taskid в obj. [ obj.status={obj.status}, obj.taskid = {obj.taskid} ]')
-
     if settings.DEBUG:
         print("REQUEST FINISH, SAVING DATA: {}: {}".format([job for job in tasklist if job in request.session], JOB))
 


==== File: ownerlist/utils.py ====
@@ -1594,7 +1594,7 @@ def GetNumberFromMask(mask=''):
 def send_onmitracker(sender, title, text, attach, proxy=None, fake=None, request=None, uid=None):
     """Функция для отправки обращения напрямую в SD  получения номера зарегистрированного обращения"""
     try:
-        send_to_mattermost(f"Попытка отправки обращения в omnitracker. sender: {sender}; title:{title}; uid:{uid}")
+        send_to_mattermost(f"Попытка отправки обращения в omnitracker. sender: {sender}; title:{title}; Ссылка на ACL :https://acl.vesta.ru/acl/info/{str(uid)}")
     except Exception as e:
         logger.warning(f"[SEND_TO_MATTERMOST EXCEPTION] {e}")
     bodyNotEncoded ="""<?xml version="1.0" encoding="utf-8"?>
@@ -1635,7 +1635,7 @@ def send_onmitracker(sender, title, text, attach, proxy=None, fake=None, request
             if i == 2:
                 send_to_mattermost(f"Попытка подключения номер: {i}.",
                                    f"res: {res.text}",
-                                   f"uid: {uid}",
+                                   f"Ссылка на ACL: https://acl.vesta.ru/acl/info/{str(uid)}",
                 )
             if res and res.status_code == 200:
                         result = res.text
@@ -1653,7 +1653,7 @@ def send_onmitracker(sender, title, text, attach, proxy=None, fake=None, request
                                                          'Сервер omni вернул неправильный ответ', 0)
                                     send_to_mattermost(f"[TRACE] Сервер omni вернул неправильный ответ: {res.text}"
                                                        f"Попытка номер: {i}",
-                                                       f"uid: {uid}"
+                                                       f"Ссылка на ACL :https://acl.vesta.ru/acl/info/{str(uid)}"
                                                        )
                                     if settings.DEBUG:
                                         logger.error('[TRACE] Сервер omni вернул неправильный ответ {} '.format(res.text))
@@ -1679,7 +1679,7 @@ def send_onmitracker(sender, title, text, attach, proxy=None, fake=None, request
                     send_to_mattermost("Подключение не удалось по таймауту (Timeout).",
                                        f"Попытка подключения номер: {i}.",
                                        f"OMNITRACKER_URL: {settings.OMNITRACKER_URL}",
-                                       f"uid: {uid}",
+                                       f"Ссылка на ACL: https://acl.vesta.ru/acl/info/{str(uid)}",
                     )
                     logger.error('[TRACE] Подключение не удалось по таймауту к {}'.format(settings.OMNITRACKER_URL))
                     UpdateCallBackStatus(request, uid, 'omni_email_status', 'Повторная отправка сообщения в SD ({})'.format(i), 1)
@@ -1688,7 +1688,7 @@ def send_onmitracker(sender, title, text, attach, proxy=None, fake=None, request
                 send_to_mattermost("Сервис не отвечает (Connection Error).",
                                f"Попытка подключения номер: {i}.",
                                f"OMNITRACKER_URL: {settings.OMNITRACKER_URL}",
-                               f"uid: {uid}",
+                               f"Ссылка на ACL: https://acl.vesta.ru/acl/info/{str(uid)}",
                 )
                 logger.error('[TRACE] Сервис {} не отвечает'.format(settings.OMNITRACKER_URL))
                 UpdateCallBackStatus(request, uid, 'omni_email_status', 'Повторная отправка сообщения в SD ({})'.format(i), 1)
@@ -1697,7 +1697,7 @@ def send_onmitracker(sender, title, text, attach, proxy=None, fake=None, request
             send_to_mattermost(f"Ошибка Omni request: {e}.",
                                f"Попытка номер: {i}.",
                                f"OMNITRACKER_URL: {settings.OMNITRACKER_URL}",
-                               f"uid: {uid}",
+                               f"Ссылка на ACL: https://acl.vesta.ru/acl/info/ {str(uid)}",
                                )
             UpdateCallBackStatus(request, uid, 'omni_email_status', 'Повторная отправка сообщения в SD ({})'.format(i), 1)
             logger.error('[Omni request] ' + str(e))
@@ -1705,7 +1705,7 @@ def send_onmitracker(sender, title, text, attach, proxy=None, fake=None, request
                 print(e)
     if not result:
         return 0
-    send_to_mattermost(f"Обращение [uid:{uid}] успешно отправлено. Получен ответ: [result:{result}]. Отправитель:{sender}")
+    send_to_mattermost(f"Обращение [https://acl.vesta.ru/acl/info/{str(uid)}] успешно отправлено. Получен ответ: [result:{result}]. Отправитель:{sender}")
     return result
 
 
@@ -1795,12 +1795,20 @@ def SendMessageToApprove(acl_id, acl_owner, user, token=''):
         print("https://acl.vesta.ru/acl/pending/{}/?token={}".format(acl_id, token))
 
 def send_to_mattermost(*messages):
-    text = ''
+    try:
+        text = ''
 
-    for message in messages:
-        text += f"{message}\n"
+        for message in messages:
+            text += f"{message}\n"
 
     payload = {"text": text}
     response = requests.post(settings.MATTERMOST_WEBHOOK_URL, json=payload)
     if response.status_code != 200:
-        logger.warning("[Send to Mattermost] Failed to send message. Error: ", response.status_code)
\ No newline at end of file
+        logger.warning("[Send to Mattermost] Failed to send message. Error: ", response.status_code)
+        payload = {"text": text}
+        response = requests.post(settings.MATTERMOST_WEBHOOK_URL, json=payload)
+        logger.info(f"response = {response}")
+        if response.status_code != 200:
+            logger.warning("[Send to Mattermost] Failed to send message. Error: ", response.status_code)
+    except Exception as e:
+        logger.error(e)


