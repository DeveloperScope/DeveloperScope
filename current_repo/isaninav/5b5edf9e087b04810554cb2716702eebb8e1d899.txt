==== File: accesslist/views.py ====
@@ -813,7 +813,7 @@ def upload_acl_from_git(request):
                     result['LOCAL_STORAGE']['acl_create_info.html'][5] = project_desc
         if request.method == 'POST' and request.is_ajax:
             if len(result['LOCAL_STORAGE']) == 0:
-                data = {"project_desc":project_desc}
+                data = {"project_desc": project_desc}
                 return HttpResponse(json.dumps(data), content_type="application/text")
             return HttpResponse(json.dumps(result), content_type="application/text")
         return HttpResponse(json.dumps("Error method type"), content_type="application/text")
@@ -824,6 +824,9 @@ def check_taskid_and_status(request, *args, **kwargs):
         user = request.user
         success_checks_count = 0
         success_send_omni_count = 0
+        unsuccessful_make_docx_acl = []
+        unsuccess_count = 0
+        unsuccessful_make_docx_count = 0
         if user.is_authenticated and user.is_superuser:
             checked_acl_list = request.POST.getlist('acl_list[]')
             aclObject_list = ACL.objects.filter(id__in=checked_acl_list)
@@ -842,48 +845,63 @@ def check_taskid_and_status(request, *args, **kwargs):
                                 gitlab_project = aclObject.project
                                 gitlab_repo_url = ACLGitlabStore.objects.get(project=gitlab_project).gitlab_url
                                 doc_result = make_doc(request, json.loads(aclObject.acltext), acl_id, gitlab_repo_url=gitlab_repo_url, gitlab_filename=gitlab_filename)
-                            except Exception as e:
-                                logger.error(f'Ошибка при создании docx: {e}')
+                                try:
+                                    if settings.OMNITRACKER_URL:
+                                        try:
+                                            docx_url = f"{request.get_host()}/{doc_result[1:]}"
+                                            logger.debug('URL ОТПРАВКИ В OMNI ' + str(docx_url))
+
+                                            if '://' not in docx_url:
+                                                docx_url = 'https://' + docx_url
+
+                                        except Exception as e:
+                                            docx_url = ''
+                                            logger.error(f'Ошибка при создании ссылки на docx: {e}')
+                                        result_id = send_onmitracker(sender=aclObject.owner.email,
+                                                                     title=f'SH0458 Запрос на предоставление доступа согласован : {str(aclObject.approve.first().get_full_name())}',
+                                                                     text=f'Прошу предоставить сетевой доступ, согласно ACL. Согласование владельца ресурса во вложении. Ссылка на ACL :https://acl.vesta.ru/acl/info/{str(acl_id)}',
+                                                                     attach=docx_url,
+                                                                     fake=False,
+                                                                     request=request,
+                                                                     uid=acl_id
+                                                                     )
+                                    result_id = int(result_id) or 0
+                                    if result_id == 0:
+                                        send_to_mattermost(f"[acl_pusher] Мы не смогли создать обращение через OmniTracker")
+                                        raise Exception('[acl_pusher] Мы не смогли создать обращение через OmniTracker')
+                                    else:
+                                        if aclObject:
+                                            aclObject.taskid = str(result_id)
+                                            aclObject.save(update_fields=['taskid'])
+                                            success_send_omni_count += 1
+                                            send_to_mattermost(
+                                                f'[acl_pusher][owner={aclObject.owner}, Ссылка на ACL: https://acl.vesta.ru/acl/info/{str(aclObject.id)}] Получен номер SD("{result_id}"). Добавление и проверка записи на портале={aclObject.taskid}')
+                                        if 'ACT_OMNI' in request.session: del request.session['ACT_OMNI']
+                                except Exception as e:
+                                    send_to_mattermost(f"[acl_pusher] Произошла ошибка при формировании заявки: {e}")
+                                    logger.error(f'[acl_pusher] Произошла ошибка при формировании заявки: {e}')
+                                    unsuccess_count += 1
 
-                            try:
-                                if settings.OMNITRACKER_URL:
-                                    try:
-                                        docx_url = f"{request.get_host()}/{doc_result[1:]}"
-                                        logger.debug('URL ОТПРАВКИ В OMNI ' + str(docx_url))
-
-                                        if '://' not in docx_url:
-                                            docx_url = 'https://' + docx_url
-
-                                    except Exception as e:
-                                        docx_url = ''
-                                        logger.error(f'Ошибка при создании ссылки на docx: {e}')
-                                    result_id = send_onmitracker(sender=aclObject.owner.email,
-                                                                 title=f'SH0458 Запрос на предоставление доступа согласован : {str(aclObject.approve.first().get_full_name())}',
-                                                                 text=f'Прошу предоставить сетевой доступ, согласно ACL. Согласование владельца ресурса во вложении. Ссылка на ACL :https://acl.vesta.ru/acl/info/{str(acl_id)}',
-                                                                 attach=docx_url,
-                                                                 fake=False,
-                                                                 request=request,
-                                                                 uid=acl_id
-                                                                 )
-                                result_id = int(result_id) or 0
-                                if result_id == 0:
-                                    raise Exception('Мы не смогли создать обращение через OmniTracker')
-                                else:
-                                    if aclObject:
-                                        aclObject.taskid = str(result_id)
-                                        aclObject.save(update_fields=['taskid'])
-                                        success_send_omni_count += 1
-                                        send_to_mattermost(f'[acl_pusher][owner={aclObject.owner}, Ссылка на ACL: https://acl.vesta.ru/acl/info/{str(aclObject.id)}] Получен номер SD("{result_id}"). Добавление и проверка записи на портале={aclObject.taskid}')
-                                    if 'ACT_OMNI' in request.session: del request.session['ACT_OMNI']
                             except Exception as e:
-                                logger.error(f'Произошла ошибка при формировании заявки: {e}')
-
+                                send_to_mattermost(f"[acl_pusher] Ошибка при создании docx:{e}; Ссылка на ACL :https://acl.vesta.ru/acl/info/{str(aclObject.id)}")
+                                logger.error(f'[acl_pusher] Ошибка при создании docx: {e}')
+                                unsuccessful_make_docx_acl.append(f'https://acl.vesta.ru/acl/info/{str(aclObject.id)}')
+                                unsuccess_count += 1
+                                unsuccessful_make_docx_count += 1
                         except Exception as e:
-                            logger.error(f'Ошибка при отправки обращения в SD: {e}')
+                            send_to_mattermost(f"[acl_pusher] Ошибка при отправке обращения в SD:{e}; ")
+                            logger.error(f'[acl_pusher] Ошибка при отправке обращения в SD: {e}')
+                            unsuccess_count += 1
                 except Exception as e:
-                    logger.error(f'Ошибка при работе с acl({acl_id}): {e} ')
+                    send_to_mattermost(f"[acl_pusher] Ошибка при работе с acl({acl_id}): {e}; ")
+                    logger.error(f'[acl_pusher] Ошибка при работе с acl({acl_id}): {e} ')
+                    unsuccess_count += 1
                     continue
-        send_to_mattermost(f"[acl_pusher] Результат работы Доталкивателя ACL: ( ACL Проверено: {success_checks_count}; ACL переотправлено: {success_send_omni_count})")
+        send_to_mattermost(f"[acl_pusher] Результат работы Доталкивателя ACL: ( ACL Проверено: {success_checks_count}; ACL переотправлено: {success_send_omni_count}); Не удалось отправить: {unsuccess_count}; Не удалось создать docx: {unsuccessful_make_docx_count};")
+        unsuccessful_make_docx_msg = ''
+        for el in unsuccessful_make_docx_acl:
+            unsuccessful_make_docx_msg += el + ";"
+        send_to_mattermost(f'Не удалось сформировать docx для следующих ACL:{unsuccessful_make_docx_msg}')
         return HttpResponseRedirect(reverse('aclhistory_urls'))
     return HttpResponse(json.dumps("Error method type"), content_type="application/text")
 
@@ -974,7 +992,7 @@ def task(request, acl_id)->bool:
         is_work_done = False
     finally:
         if doc_ready:
-            if 'ACT_MAKE_DOCX' in request.session :
+            if 'ACT_MAKE_DOCX' in request.session:
                 del request.session['ACT_MAKE_DOCX']
                 UpdateCallBackStatus(request, acl_id, 'docx_download_status', "Файл docx успешно сформирован", 2)
     if 'ACT_OMNI' in request.session:
@@ -1335,5 +1353,5 @@ def makeAndDownloadMdAndDocx(request, acl_id):
                 file_name = os.path.basename(file_path)
                 return FileResponse(open(f'static/{file_type}/{file_name}', 'rb'))
     except Exception as e:
-        logger.error(f'[MAKE FILE] Не удалось сформировать файл:Ошибка:{e};file_type:{file_type}')
-        AclOver()
\ No newline at end of file
+        logger.error(f'[MAKE FILE] Не удалось сформировать файл:Ошибка:{e};')
+        AclOver()


==== File: ownerlist/utils.py ====
@@ -980,7 +980,7 @@ def make_doc(request=None, data_set={}, fileuuid='', gitlab_repo_url='', gitlab_
         APP_FILE = 'static/docx/ACL_' + fileuuid + "_" + gitlab_filename + '.docx'
     except Exception as e:
         APP_FILE = 'static/docx/ACL_' + fileuuid + '.docx'
-        logger.error(e)
+        logger.error(f'Не удалось добавить gitlab_filename в название файла docx:{e}')
 
     doc = Document(TEMPLATE_FILE)
     if is_in_session:
@@ -1232,7 +1232,6 @@ def MakeMarkDown(request, json_data, filename, fileuuid=''):
                 table(records=data[key], fields=fields, headings=standart_column,
                       alignment=[('<', '<'), ('^', '^'), ('<', '<')], file=file)
 
-
             elif key == 'acl_dmz_resources.html':
                 file.write('\n')
                 file.write('##### Список DMZ ресурсов (СГ АльфаСтрахование)')


