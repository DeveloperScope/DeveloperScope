==== File: accesslist/views.py ====
@@ -1217,6 +1217,7 @@ def task(request, acl_id)->bool:
         try:
             file_md = MakeMarkDown(request, local_storage, 'acl_{}'.format(acl_id), acl_id) or 'None'
             if not file_md:
+                send_to_mattermost(f'Не удалось создать md файл. acl_id:{acl_id}')
                 raise Exception('Ошибка при создании md файла')
 
             UpdateCallBackStatus(request, acl_id, 'git_upload_file', "<a href='{}'style='font-size: 16px' " \
@@ -1239,20 +1240,20 @@ def task(request, acl_id)->bool:
             gitlab_project = obj.project
             gitlab_filename = obj.git_filename
             gitlab_repo_url = ACLGitlabStore.objects.get(project=gitlab_project).gitlab_url
+
             g = GitWorker(request, gitlab_repo_url, PATH_OF_GIT_REPO=None, MDFILE=file_md_abs,
                           taskid=acl_id)
             if g:
+                g.pull()
                 if g.clone():
                     g.repo.git.checkout('develop')
-                    g.fetch()
                     f = g.activity(gitlab_filename)
                     if f:
                         if g.addindex(f):
                             UpdateCallBackStatus(request, acl_id, 'git_upload_status',
                                                  "Отправка изменений на сервер")
                             if g.push(refspec='develop:develop'):
-                                UpdateCallBackStatus(request, acl_id, 'git_upload_status',
-                                                     f"Файл {gitlab_filename} успешно загружен в репозиторий", 2)
+                                UpdateCallBackStatus(request, acl_id, 'git_upload_status', f"Файл {gitlab_filename} успешно загружен в репозиторий", 2)
                                 is_work_done = True
                                 send_to_mattermost(f'[Отправка изменений в giltab] acl({acl_id}) успешно отправлен в gitlab')
                                 if settings.DEBUG:


==== File: ownerlist/utils.py ====
@@ -1199,6 +1199,7 @@ def table(records, fields, headings=None, alignment=None, file=None):
 def MakeMarkDown(request, json_data, filename, fileuuid=''):
     """Функция записывает JSON как md файл"""
     #request.session['git_upload_status'] = 'Создание md-файла'
+    print(f'Создание md')
     UpdateCallBackStatus(request, fileuuid, 'git_upload_status', 'Создание md-файла')
     try:
         tmp = os.path.join(BASE_DIR, 'static/md/' + filename + '.md')
@@ -1206,7 +1207,8 @@ def MakeMarkDown(request, json_data, filename, fileuuid=''):
         data = json_data #json.loads(json_data)
         for key in data:
             if key == 'acl_create_info.html':
-                logger.debug(f'[MakeMarkDown] acl_create_info   ')
+                logger.debug(f'[MakeMarkDown] acl_create_info')
+                print(f'[MakeMarkDown] acl_create_info')
                 file.write('## {}'.format(data[key][4]))
                 file.write('\n')
                 file.write('##### Описание доступа к ресурсам')
@@ -1217,6 +1219,7 @@ def MakeMarkDown(request, json_data, filename, fileuuid=''):
 
             elif key == 'acl_internal_resources.html':
                 logger.debug(f'[MakeMarkDown] acl_internal_resources')
+                print(f'[MakeMarkDown] acl_internal_resources')
                 file.write('\n')
                 file.write('##### Список внутренних ресурсов (СГ АльфаСтрахование)')
                 file.write('\n')
@@ -1226,6 +1229,7 @@ def MakeMarkDown(request, json_data, filename, fileuuid=''):
 
             elif key == 'acl_dmz_resources.html':
                 logger.debug(f'[MakeMarkDown] acl_dmz_resources')
+                print(f'[MakeMarkDown] acl_dmz_resources')
                 file.write('\n')
                 file.write('##### Список DMZ ресурсов (СГ АльфаСтрахование)')
                 file.write('\n')
@@ -1235,6 +1239,7 @@ def MakeMarkDown(request, json_data, filename, fileuuid=''):
 
             elif key == 'acl_external_resources.html':
                 logger.debug(f'[MakeMarkDown] acl_external_resources')
+                print(f'[MakeMarkDown] acl_external_resources')
                 file.write('\n')
                 file.write('##### Список внешних ресурсов (Internet)')
                 file.write('\n')
@@ -1244,15 +1249,21 @@ def MakeMarkDown(request, json_data, filename, fileuuid=''):
 
             elif key == 'acl_traffic.html':
                 logger.debug(f'[MakeMarkDown] acl_traffic')
+                print(f'[MakeMarkDown] acl_traffic')
                 file.write('\n')
                 file.write('##### Потоки трафика')
                 file.write('\n')
                 fields = [0, 1, 2, 3, 4, 5, 6]
+                for item_index in range(len(data[key])):
+                    if len(data[key][item_index]) < len(fields):
+                        data[key][item_index].append('.')
                 table(records=data[key], fields=fields, headings=traffic_column,
-                      alignment=[('<', '<'), ('<', '<'), ('<', '<'), ('<', '<'), ('<', '<'), ('<', '<'), ('<', '<'), ], file=file)
+                      alignment=[('<', '<'), ('<', '<'), ('<', '<'), ('<', '<'), ('<', '<'), ('<', '<'), ('<', '<'), ],
+                      file=file)
         if file:
             file.close()
     except Exception as e:
+        print(f'ОШИБКА ПРИ СОЗДАНИИ MD:{e}')
         logger.error('{}'.format(e))
         return False
     UpdateCallBackStatus(request, fileuuid, 'git_upload_status', 'ACL файл cоздан')
@@ -1282,6 +1293,7 @@ class GitWorker:
             tmp = os.path.join(tempfile.gettempdir(), uid)
             try:
                 self.repo = git.Repo.init(tmp, bare=True)  # uid, bare=True os.path.join(tempfile.gettempdir(), uid)
+                print(f'Инициализирован новый репозиторий:{self.repo}')
             except:
                 UpdateCallBackStatus(request, taskid, 'git_upload_status', 'Ошибка при инициализации Repo: {}'.format(tmp), 0)
                 return False
@@ -1396,7 +1408,6 @@ class GitWorker:
                 logger.error(e)
 
     def activity(self, git_filename: str):
-        dfile = ''
         try:
             sfile = self.MDFILE
             dfile = os.path.join(self.PATH_OF_GIT_REPO, git_filename)
@@ -1443,39 +1454,47 @@ class GitWorker:
         if settings.DEBUG:
             logger.debug("Отправка изменений на сервер")
         try:
-            if refspec == '':
-                refspec = 'develop:develop'
-            result = self.repo.remotes.origin.push(refspec=refspec)
+            for remote in self.repo.remotes:
+                if remote.name == 'origin':
+                    if not remote.exists():
+                        error_message = "Репозиторий не существует или нет доступа к нему"
+                        print(error_message)
+                        UpdateCallBackStatus(self.request, self.taskid, 'git_upload_status', error_message, 0)
+                        return False
+                    break
+            for head in self.repo.heads:
+                if head.name == refspec.split(':')[0]:
+                    break
+            else:
+                error_message = f"Ветка {refspec.split(':')[0]} не существует"
+                print(error_message)
+                UpdateCallBackStatus(self.request, self.taskid, 'git_upload_status', error_message, 0)
+                return False
+
+            print(f'repo remotes:{self.repo.remotes}')
+            print(f'refspec:{refspec}')
+            result = self.repo.remotes.origin.push(refspec=refspec, force=True)
             if result:
-                UpdateCallBackStatus(self.request, self.taskid, 'git_upload_status', "Файл acl успешно загружен в репозиторий")
+                print(f"Файл acl успешно загружен в репозиторий:{result}")
+                UpdateCallBackStatus(self.request, self.taskid, 'git_upload_status',"Файл acl успешно загружен в репозиторий")
                 return True
-        except Exception as e:
-            print(f'ПОЛУЧЕНА ОШИБКА ПРИ ВЫПОЛНЕНИИ КОМАНДЫ GIT PUSH:{e}')
-            logger.error(f'ПОЛУЧЕНА ОШИБКА ПРИ ВЫПОЛНЕНИИ КОМАНДЫ GIT PUSH:{e}')
-            send_to_mattermost(f'Получена ошибка при выполнении GIT PUSH:{e}')
-            logger.debug(f'Проверка активной ветки: {self.repo.active_branch}')
-            if hasattr(e, 'status'):
-                if e.status == 128:
-                    UpdateCallBackStatus(self.request, self.taskid, 'git_upload_status', "Ошибка аутентификации для данного репозитория", 0)
-                    send_to_mattermost(f'[ACL PORTAL] Не удалось отправить md файл в git: У пользователя {self.USERNAME.replace("%40","@")} нет доступа.')
-                    if settings.DEBUG:
-                        logger.debug(f'Ошибка аутентификации для данного репозитория. Пользователь: {self.USERNAME.replace("%40","@")}')
-                elif "src refspec master" in e.stderr:
-                    if refspec == 'master:master':
-                        UpdateCallBackStatus(self.request, self.taskid, 'git_upload_status', "Ошибка при отправке в ветку master, пробуем в последний коммит: {}".format(self.repo.active_branch))
-                        time.sleep(3)
-                        self.push("{}:{}".format("HEAD", self.repo.active_branch))
-                    else:
-                        UpdateCallBackStatus(self.request, self.taskid, 'git_upload_status', "Ошибка при отправке в ветку {}".format(refspec), 0)
+        except git.exc.GitCommandError as e:
+            if e.status == 128:
+                error_message = "Ошибка аутентификации для данного репозитория"
+                print(error_message)
+                UpdateCallBackStatus(self.request, self.taskid, 'git_upload_status', error_message, 0)
+                send_to_mattermost(f'[ACL PORTAL] Не удалось отправить md файл в git: У пользователя {self.USERNAME.replace("%40", "@")} нет доступа.')
             else:
-                UpdateCallBackStatus(self.request, self.taskid, 'git_upload_status', "Ошибка при отправке коммита на сервер", 0)
-            return False
-
+                error_message = "Ошибка при отправке коммита на сервер"
+                print(error_message)
+                UpdateCallBackStatus(self.request, self.taskid, 'git_upload_status', error_message, 0)
+                send_to_mattermost(f'[ACL PORTAL] Не удалось отправить md файл в git: {e}')
         finally:
             self.repo.close()
             if settings.DEBUG:
+                print("Очистка временной папки")
                 logger.debug("Очистка временной папки")
-        return True
+        return False
 
 
 def dns_fileHandler(fname, full_buf)->int:


