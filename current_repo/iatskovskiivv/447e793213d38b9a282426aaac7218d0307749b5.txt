==== File: accesslist/views.py ====
@@ -769,13 +769,16 @@ def get_gitlab_files(request):
 
 def upload_acl_from_git(request):
     if request.method == 'POST':
+        logger.info(f'[Загрузка md на портал] Инициализация загрузки md на портал')
         gitlab_project = request.POST.get('project')
         gitlab_repo_url = ACLGitlabStore.objects.get(project=gitlab_project).gitlab_url
         gitlab_file_name = request.POST.get('gitlab_file_selected_option')
+        logger.info(f'[Загрузка md на портал] Получены данные для загрузки: gitlab_project:{gitlab_project}, gitlab_repo_url:{gitlab_repo_url}, gitlab_file_name:{gitlab_file_name}')
         # Проверка прав пользователя
         session = requests.Session()
         session.headers.update({'PRIVATE-TOKEN': settings.GIT_ACCESS_TOKEN})
         project_id = get_gitlab_project_info(session, repo_url=gitlab_repo_url, mode='id')
+        logger.info(f'[Загрузка md на портал] Получен id Проекта:{project_id}')
         get_members_api = f'https://gitlab.alfastrah.ru/api/v4/projects/{project_id}/members/all'
         #
         response = session.get(get_members_api)
@@ -788,16 +791,16 @@ def upload_acl_from_git(request):
             current_username = request.session['GIT_USERNAME']
 
             if current_username.lower() in project_members_list:
-                logger.info(f'Пользователь {current_username} есть в списке участников: {project_members_list}. Начинаю загрузку md на портал')
+                logger.info(f'[Загрузка md на портал] Пользователь {current_username} есть в списке участников: {project_members_list}. Начинаю загрузку md на портал')
                 g = GitWorker(request, gitlab_repo_url, PATH_OF_GIT_REPO=None, MDFILE='', taskid='')
                 if g:
                     g.repo.git.ls_remote('--heads', '--tags', g.GITPRO)
                     g.free()
             else:
-                logger.info(f'Пользователь {current_username} не найден среди участников проекта: {project_members_list}. Отображено сообщение: нет доступа')
+                logger.warning(f'[Загрузка md на портал] Пользователь {current_username} не найден среди участников проекта: {project_members_list}. Отображено сообщение: нет доступа')
                 return HttpResponse(json.dumps({'error': f"Ошибка: У пользователя {current_username} нет доступа"}), content_type="application/json")
         else:
-            logger.info(f" Ошибка во время проверки прав:{response}")
+            logger.error(f"[Загрузка md на портал] Ошибка во время проверки прав:{response}")
             return HttpResponse(json.dumps({'error': f"Ошибка: Во время проверки прав"}), content_type="application/json")
 
         md_content, project_desc = get_acl_from_gitlab(repo_url=gitlab_repo_url, branch_name='develop', file_name=gitlab_file_name)
@@ -868,7 +871,7 @@ def check_taskid_and_status(request, *args, **kwargs):
                                     g = GitWorker(request, gitlab_repo_url, PATH_OF_GIT_REPO=None, MDFILE=file_md_abs,
                                                   taskid=acl_id)
                                     if g:
-                                        g.pull()
+                                        g.fetch()
                                         if g.clone():
                                             g.repo.git.checkout('develop')
                                             f = g.activity(gitlab_filename)
@@ -876,7 +879,10 @@ def check_taskid_and_status(request, *args, **kwargs):
                                                 if g.addindex(f):
                                                     if g.push(refspec='develop:develop'):
                                                         logger.info(f'[acl_pusher] acl успешно отправлен в git')
+                                                        send_to_mattermost('[acl_pusher] acl успешно отправлен в git')
                                                         gitpush_successful = True
+                                                    else:
+                                                        send_to_mattermost('[acl_pusher] acl не удалось отправить в git')
                                         g.free()
                                 except Exception as e:
                                     unsuccessful_git_push_acl.append(
@@ -1194,7 +1200,7 @@ def task(request, acl_id)->bool:
             if g:
                 if g.clone():
                     g.repo.git.checkout('develop')
-                    g.pull()
+                    g.fetch()
                     f = g.activity(gitlab_filename)
                     if f:
                         if g.addindex(f):
@@ -1204,8 +1210,11 @@ def task(request, acl_id)->bool:
                                 UpdateCallBackStatus(request, acl_id, 'git_upload_status',
                                                      f"Файл {gitlab_filename} успешно загружен в репозиторий", 2)
                                 is_work_done = True
+                                send_to_mattermost(f'[Отправка изменений в giltab] acl({acl_id}) успешно отправлен в gitlab')
                                 if settings.DEBUG:
                                     logger.debug('Файл загружен в проект')
+                            else:
+                                send_to_mattermost(f'[Отправка изменений в giltab] Не удалось отправить acl({acl_id}) в gitlab')
                 g.free()
         except Exception as e:
             logger.error(f'Ошибка при отправке в git: {e}')


==== File: ownerlist/utils.py ====
@@ -1380,6 +1380,16 @@ class GitWorker:
             logger.debug("Скачано: {} файлов".format(len(self.repo.index.entries)))
         return True
 
+    def fetch(self):
+        try:
+            self.repo.git.fetch()
+            logger.info(f'Выполнен git fetch')
+            return True
+        except Exception as e:
+            logger.error(f'Ошибка при выполнении git fetch:{e}')
+            return False
+
+
     def pull(self):
         try:
             self.repo.git.pull()


