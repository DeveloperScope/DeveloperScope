==== File: accesslist/views.py ====
@@ -1013,7 +1013,7 @@ def AclRemove(request, *args, **kwargs):
 @csrf_exempt
 def task(request, acl_id)->bool:
     """Функция обработки запросов на выполнение активностей для выполнения обращения"""
-
+    logger.info(f'[Отправка в omni] Начинается выполнение task для (request,acl_id):({request},{acl_id})')
     if 'LOCAL_STORAGE' not in request.session or not is_valid_uuid(acl_id):
         result = {'error': 'Произошла ошибка, вероятно отсутствуют данные для выполнения.'}
         return HttpResponse(json.dumps(result, ensure_ascii=False), content_type="application/json")
@@ -1022,6 +1022,8 @@ def task(request, acl_id)->bool:
     is_work_omni =  False
     try:
         obj = ACL.objects.get(id=acl_id)
+        logger.info(f'[Отправка в omni] Получен obj по acl_id({acl_id})')
+        logger.info(f'[Отправка в omni] Проверка данных этого acl: owner({obj.owner}), project:({obj.project}), git_filename:({obj.git_filename})')
     except obj.DoesNotExist:
         return HttpResponse(json.dumps('Нет такого ACL', ensure_ascii=False), content_type="application/json")
 
@@ -1053,7 +1055,12 @@ def task(request, acl_id)->bool:
         gitlab_filename = obj.git_filename
         gitlab_project = obj.project
         gitlab_repo_url = ACLGitlabStore.objects.get(project=gitlab_project).gitlab_url
-        doc_result = make_doc(request, request.session['LOCAL_STORAGE'], gitlab_repo_url=gitlab_repo_url, gitlab_filename=gitlab_filename)
+        logger.info(f'[Отправка в omni] Проверка данных полученных перед формированием файла: filename:{gitlab_filename}, project:{gitlab_project}, repo_url:{gitlab_repo_url}', )
+        logger.info(f"[Отправка в omni] Проверка LOCAL_STORAGE из request.session: {request.session['LOCAL_STORAGE']}")
+        local_storage = json.loads(obj.acltext)
+        logger.info(f'[Отправка в omni] local_storage после правок:{local_storage}')
+        doc_result = make_doc(request, local_storage, gitlab_repo_url=gitlab_repo_url, gitlab_filename=gitlab_filename)
+        logger.info(f'[Отправка в omni] Сформирован word документ: {doc_result}')
         doc_ready = True
     except Exception as e:
         UpdateCallBackStatus(request, acl_id, 'docx_download_status',


