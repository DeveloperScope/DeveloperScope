==== File: accesslist/templates/acl_traffic.html ====
@@ -2,6 +2,7 @@
 {% load static %}
 {% load random_numbers %}
 {% load get_index %}
+{% load empty_strings %}
 {% block row %}
 <div class="col-11 pt-3">
         <div class="main-block">
@@ -90,7 +91,12 @@
                 <tbody>
                  {% if LOCAL_STORAGE|length > 0 %}
                     {% for item in LOCAL_STORAGE %}
-                     <tr>
+                    <tr {% if item|count_empty_strings > 1 %}style="background-color: yellow;"{% endif %}>
+                      {% if item|count_empty_strings > 1 %}
+                      <script>
+                          ShowNotify(1, "Обратите внимание найдены невалидные строки.");
+                      </script>
+                      {% endif %}
                                 {% for widget in widgets %}
                                     <td>
                                         {% if "input_is_reserve" in widget %}
@@ -326,3 +332,4 @@
       });
     </script>
 {% endblock %}
+


==== File: accesslist/templatetags/empty_strings.py ====
@@ -0,0 +1,8 @@
+from django import template
+
+register = template.Library()
+
+
+@register.filter
+def count_empty_strings(lst):
+    return lst.count(" ")


==== File: acladmin/tasks.py ====
@@ -32,10 +32,8 @@ def send_acl(acl_id, gitlab_repo_url):
             gitlab_filename=acl_object.git_filename,
         )
     except Exception as e:
-        print(f"[acl_portal][Celery send_acl] Не удалось сформировать docx файл:{e}.")
-        send_to_mattermost(
-            f"[acl_portal][Celery send_acl] Не удалось сформировать docx файл:{e}."
-        )
+        print(f'[acl_portal][Celery send_acl][DEBUG:{settings.DEBUG}] Не удалось сформировать docx файл:{e}.')
+        send_to_mattermost(f'[acl_portal][Celery send_acl] Не удалось сформировать docx файл:{e}.')
         return False
 
     docx_url = f"https://acl.vesta.ru/{doc_result[1:]}"


==== File: ownerlist/utils.py ====
@@ -2357,7 +2357,7 @@ def send_onmitracker(
             if res and res.status_code == 200:
                 result = res.text
                 logger.info("OMNITRACKER ANSWER ====" + result)
-                if result and len(result) > 3:
+                if result and len(result) > 3 and 'strResponse' in result:
                     result = result.split('strResponse">')
                     if len(result) > 1:
                         result = result[1].split("</")[0]
@@ -2951,7 +2951,7 @@ def celery_send_omnitracker(sender, title, text, attach, uuid=None):
 
             if res and res.status_code == 200:
                 result = res.text
-                if result and len(result) > 3:
+                if result and len(result) > 3 and 'strResponse' in result:
                     result = result.split('strResponse">')
                     if len(result) > 1:
                         result = result[1].split("</")[0]


