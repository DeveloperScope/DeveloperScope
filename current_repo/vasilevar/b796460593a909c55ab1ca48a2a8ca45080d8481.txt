==== File: accesslist/admin.py ====
@@ -8,6 +8,7 @@ class ACLAdmin(admin.ModelAdmin):
     list_display = ("project", "status", "owner", "id", "taskid", "created")
     list_filter = ("status", "created")
     list_display_links = list_display
+    search_fields = ("id", "taskid")
 
 
 @admin.register(ACLGitlabStore)


==== File: accesslist/management/__init.py ====


==== File: accesslist/management/commands/__init__.py ====


==== File: accesslist/management/commands/split_acl_data.py ====
@@ -0,0 +1,37 @@
+import json
+
+from django.core.management.base import BaseCommand
+
+from accesslist.models import ACL
+
+
+class Command(BaseCommand):
+    def handle(self, *args, **kwargs):
+
+        for acl in ACL.objects.filter(is_migrated=False).iterator():
+            if acl.acltext == []:
+                continue
+            try:
+                data = (
+                    json.loads(acl.acltext)
+                    if isinstance(acl.acltext, str)
+                    else acl.acltext
+                )
+
+                acl.create_info = data.get("acl_create_info.html")
+                acl.traffic_rules = data.get("acl_traffic.html", [])
+                acl.external_resources = data.get("acl_external_resources.html", [])
+                acl.internal_resources = data.get("acl_internal_resources.html", [])
+                acl.dmz_resources = data.get("acl_dmz_resources.html", [])
+                acl.is_migrated = True
+                ACL.objects.filter(id=acl.id).update(
+                    create_info=acl.create_info,
+                    traffic_rules=acl.traffic_rules,
+                    external_resources=acl.external_resources,
+                    internal_resources=acl.internal_resources,
+                    dmz_resources=acl.dmz_resources,
+                    is_migrated=True,
+                )
+            except Exception as e:
+                print(f"Error processing ACL {acl.id}: {e}")
+                continue


==== File: accesslist/management/commands/transform_acl_info.py ====
@@ -0,0 +1,66 @@
+from operator import getitem
+
+from django.core.management.base import BaseCommand
+
+from accesslist.models import ACL
+
+
+def transform_create_info(data: list) -> dict:
+    """Преобразует данные create_info в словарь"""
+
+    def safe_get(index):
+        try:
+            return getitem(data, index)
+        except IndexError:
+            return ""
+
+    if isinstance(data, list):
+        return {
+            "full_name": safe_get(0),
+            "email": safe_get(1),
+            "phone": safe_get(2),
+            "department": safe_get(3),
+            "project": safe_get(4),
+            "description": safe_get(5),
+            "created_at": safe_get(6),
+            "start_date": safe_get(7),
+            "end_date": safe_get(8),
+            "file_name": safe_get(9),
+        }
+
+
+class Command(BaseCommand):
+    help = "Validates ACL infodata structure"
+
+    def handle(self, *args, **options):
+        invalid_records = []
+        total_records = ACL.objects.count()
+        processed = 0
+        total_completed = 0
+        self.stdout.write(f"Начинаем проверку {total_records} записей...")
+
+        for acl in ACL.objects.iterator():
+            processed += 1
+            if processed % 100 == 0:
+                self.stdout.write(f"Обработано {processed}/{total_records} записей...")
+
+            try:
+                if acl.create_info:
+                    create_info = transform_create_info(acl.create_info)
+                    ACL.objects.filter(id=acl.id).update(create_info=create_info)
+                    total_completed += 1
+            except Exception as e:
+                self.stdout.write(f"Ошибка при обработке записи {acl.id}: {str(e)}")
+                invalid_records.append(
+                    {"id": acl.id, "error": f"Ошибка при обработке записи: {str(e)}"}
+                )
+                continue
+
+        self.stdout.write(
+            f"Проверка завершена. Найдено {len(invalid_records)} ошибок. "
+            f"Обработано {total_completed} записей."
+        )
+        if invalid_records:
+            self.stdout.write("Список ошибок:")
+            for record in invalid_records:
+                self.stdout.write(f"ID: {record['id']}, Ошибка: {record['error']}")


==== File: accesslist/management/commands/transform_dmz.py ====
@@ -0,0 +1,52 @@
+from django.core.management.base import BaseCommand
+
+from accesslist.models import ACL
+
+
+def transform_dmz_resources(data: list):
+    """Преобразует список списков в список словарей."""
+    return [
+        {
+            "source_ip": sublist[0] if len(sublist) > 0 else "",
+            "mask": sublist[1] if len(sublist) > 1 else "",
+            "description": sublist[2] if len(sublist) > 2 else "",
+        }
+        for sublist in data
+    ]
+
+
+class Command(BaseCommand):
+    help = "Validates ACL data structure and content"
+
+    def handle(self, *args, **options):
+        invalid_records = []
+        total_records = ACL.objects.count()
+        processed = 0
+        total_completed = 0
+        self.stdout.write(f"Начинаем проверку {total_records} записей...")
+
+        for acl in ACL.objects.iterator():
+            processed += 1
+            if processed % 100 == 0:
+                self.stdout.write(f"Обработано {processed}/{total_records} записей...")
+
+            try:
+                if acl.dmz_resources:
+                    dmz_resources = transform_dmz_resources(acl.dmz_resources)
+                    ACL.objects.filter(id=acl.id).update(dmz_resources=dmz_resources)
+                    total_completed += 1
+            except Exception as e:
+                self.stdout.write(f"Ошибка при обработке записи {acl.id}: {str(e)}")
+                invalid_records.append(
+                    {"id": acl.id, "error": f"Ошибка при обработке записи: {str(e)}"}
+                )
+                continue
+
+        self.stdout.write(
+            f"Проверка завершена. Найдено {len(invalid_records)} ошибок. "
+            f"Обработано {total_completed} записей."
+        )
+        if invalid_records:
+            self.stdout.write("Список ошибок:")
+            for record in invalid_records:
+                self.stdout.write(f"ID: {record['id']}, Ошибка: {record['error']}")


==== File: accesslist/management/commands/transform_external.py ====
@@ -0,0 +1,58 @@
+from django.core.management.base import BaseCommand
+
+from accesslist.models import ACL
+
+
+def transform_external_resources(data: list) -> dict:
+    """Преобразует данные external_resources в словарь"""
+
+    return [
+        {
+            "source_ip": sublist[0] if len(sublist) > 0 else "",
+            "domain": sublist[1] if len(sublist) > 1 else "",
+            "mask": sublist[2] if len(sublist) > 2 else "",
+            "description": sublist[3] if len(sublist) > 3 else "",
+        }
+        for sublist in data
+    ]
+
+
+class Command(BaseCommand):
+    help = "Validates ACL data structure and content"
+
+    def handle(self, *args, **options):
+        invalid_records = []
+        total_records = ACL.objects.count()
+        processed = 0
+        total_completed = 0
+        self.stdout.write(f"Начинаем проверку {total_records} записей...")
+
+        for acl in ACL.objects.iterator():
+            processed += 1
+            if processed % 100 == 0:
+                self.stdout.write(f"Обработано {processed}/{total_records} записей...")
+
+            try:
+                if acl.external_resources:
+                    external_resources = transform_external_resources(
+                        acl.external_resources
+                    )
+                    ACL.objects.filter(id=acl.id).update(
+                        external_resources=external_resources,
+                    )
+                    total_completed += 1
+            except Exception as e:
+                self.stdout.write(f"Ошибка при обработке записи {acl.id}: {str(e)}")
+                invalid_records.append(
+                    {"id": acl.id, "error": f"Ошибка при обработке записи: {str(e)}"}
+                )
+                continue
+
+        self.stdout.write(
+            f"Проверка завершена. Найдено {len(invalid_records)} ошибок. "
+            f"Обработано {total_completed} записей."
+        )
+        if invalid_records:
+            self.stdout.write("Список ошибок:")
+            for record in invalid_records:
+                self.stdout.write(f"ID: {record['id']}, Ошибка: {record['error']}")


==== File: accesslist/management/commands/transform_internal.py ====
@@ -0,0 +1,56 @@
+from django.core.management.base import BaseCommand
+
+from accesslist.models import ACL
+
+
+def transform_internal_resources(data: list):
+    """Преобразует список списков в список словарей."""
+    return [
+        {
+            "source_ip": sublist[0] if len(sublist) > 0 else "",
+            "mask": sublist[1] if len(sublist) > 1 else "",
+            "description": sublist[2] if len(sublist) > 2 else "",
+        }
+        for sublist in data
+    ]
+
+
+class Command(BaseCommand):
+    help = "Validates ACL data structure and content"
+
+    def handle(self, *args, **options):
+        invalid_records = []
+        total_records = ACL.objects.count()
+        processed = 0
+        total_completed = 0
+        self.stdout.write(f"Начинаем проверку {total_records} записей...")
+
+        for acl in ACL.objects.iterator():
+            processed += 1
+            if processed % 100 == 0:
+                self.stdout.write(f"Обработано {processed}/{total_records} записей...")
+
+            try:
+                if acl.internal_resources:
+                    internal_resources = transform_internal_resources(
+                        acl.internal_resources
+                    )
+                    ACL.objects.filter(id=acl.id).update(
+                        internal_resources=internal_resources
+                    )
+                    total_completed += 1
+            except Exception as e:
+                self.stdout.write(f"Ошибка при обработке записи {acl.id}: {str(e)}")
+                invalid_records.append(
+                    {"id": acl.id, "error": f"Ошибка при обработке записи: {str(e)}"}
+                )
+                continue
+
+        self.stdout.write(
+            f"Проверка завершена. Найдено {len(invalid_records)} ошибок. "
+            f"Обработано {total_completed} записей."
+        )
+        if invalid_records:
+            self.stdout.write("Список ошибок:")
+            for record in invalid_records:
+                self.stdout.write(f"ID: {record['id']}, Ошибка: {record['error']}")


==== File: accesslist/management/commands/transform_trafic.py ====
@@ -0,0 +1,70 @@
+from operator import getitem
+
+from django.core.management.base import BaseCommand
+
+from accesslist.models import ACL
+
+
+def transform_traffic_rules(data: list):
+    """Преобразует данные traffic_rules в список словарей"""
+
+    def safe_get(item, index):
+        try:
+            return getitem(item, index)
+        except IndexError:
+            return ""
+
+    result = []
+    for item in data:
+        rule = {
+            "sourse_domain": safe_get(item, 0),
+            "sourse_ip": safe_get(item, 1),
+            "destination_domain": safe_get(item, 2),
+            "destination_ip": safe_get(item, 3),
+            "protocol_port": safe_get(item, 4),
+            "program_name": safe_get(item, 5),
+            "description": safe_get(item, 6),
+            "reserve": False,
+        }
+        if len(item) == 8 and item[7].lower() == "reserve":
+            rule["reserve"] = True
+        result.append(rule)
+    return result
+
+
+class Command(BaseCommand):
+    help = "Validates ACL data structure and content"
+
+    def handle(self, *args, **options):
+        invalid_records = []
+        total_records = ACL.objects.count()
+        processed = 0
+        total_completed = 0
+
+        self.stdout.write(f"Начинаем проверку {total_records} записей...")
+
+        for acl in ACL.objects.iterator():
+            processed += 1
+            if processed % 100 == 0:
+                self.stdout.write(f"Обработано {processed}/{total_records} записей...")
+
+            try:
+                if acl.traffic_rules:
+                    traffic_rules = transform_traffic_rules(acl.traffic_rules)
+                    ACL.objects.filter(id=acl.id).update(traffic_rules=traffic_rules)
+                    total_completed += 1
+            except Exception as e:
+                self.stdout.write(f"Ошибка при обработке записи {acl.id}: {str(e)}")
+                invalid_records.append(
+                    {"id": acl.id, "error": f"Ошибка при обработке записи: {str(e)}"}
+                )
+                continue
+
+        self.stdout.write(
+            f"Проверка завершена. Найдено {len(invalid_records)} ошибок. "
+            f"Обработано {total_completed} записей."
+        )
+        if invalid_records:
+            self.stdout.write("Список ошибок:")
+            for record in invalid_records:
+                self.stdout.write(f"ID: {record['id']}, Ошибка: {record['error']}")


==== File: accesslist/migrations/0041_auto_20241212_1633.py ====
@@ -0,0 +1,43 @@
+# Generated by Django 3.1.6 on 2024-12-12 13:33
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('accesslist', '0040_auto_20231204_1121'),
+    ]
+
+    operations = [
+        migrations.AddField(
+            model_name='acl',
+            name='create_info',
+            field=models.JSONField(blank=True, help_text='Основная информация о создании ACL', null=True),
+        ),
+        migrations.AddField(
+            model_name='acl',
+            name='dmz_resources',
+            field=models.JSONField(blank=True, default=list, help_text='DMZ ресурсы', null=True),
+        ),
+        migrations.AddField(
+            model_name='acl',
+            name='external_resources',
+            field=models.JSONField(blank=True, default=list, help_text='Внешние ресурсы', null=True),
+        ),
+        migrations.AddField(
+            model_name='acl',
+            name='internal_resources',
+            field=models.JSONField(blank=True, default=list, help_text='Внутренние ресурсы', null=True),
+        ),
+        migrations.AddField(
+            model_name='acl',
+            name='is_migrated',
+            field=models.BooleanField(default=False),
+        ),
+        migrations.AddField(
+            model_name='acl',
+            name='traffic_rules',
+            field=models.JSONField(blank=True, default=list, help_text='Правила трафика', null=True),
+        ),
+    ]


==== File: accesslist/models.py ====
@@ -12,7 +12,24 @@ from teams.models import Team
 class ACL(models.Model):
     pkid = models.BigAutoField(primary_key=True, editable=False)
     id = models.UUIDField(db_index=True, editable=False)
-    acltext = models.JSONField(blank=True, null=True, default=list)
+    acltext = models.JSONField(
+        blank=True, null=True, default=list
+    )  # TODO мигрировали и разделили на 4 поля удалить поле не ранее 01.06.25
+    create_info = models.JSONField(
+        blank=True, null=True, help_text="Основная информация о создании ACL"
+    )
+    traffic_rules = models.JSONField(
+        blank=True, null=True, default=list, help_text="Правила трафика"
+    )
+    external_resources = models.JSONField(
+        blank=True, null=True, default=list, help_text="Внешние ресурсы"
+    )
+    internal_resources = models.JSONField(
+        blank=True, null=True, default=list, help_text="Внутренние ресурсы"
+    )
+    dmz_resources = models.JSONField(
+        blank=True, null=True, default=list, help_text="DMZ ресурсы"
+    )
     is_executed = models.BooleanField(null=True, default=False)
     owner = models.ForeignKey(
         User, null=True, on_delete=models.SET_NULL, related_name="ownername"
@@ -53,6 +70,17 @@ class ACL(models.Model):
     last_status = models.CharField(max_length=20, default="")
     last_status_change_date = models.DateTimeField(blank=True, null=True)
     days_in_work = models.IntegerField(blank=True, null=True)
+    is_migrated = models.BooleanField(default=False)
+
+    @property
+    def acl_data(self):
+        return {
+            "acl_create_info.html": self.create_info,
+            "acl_traffic.html": self.traffic_rules,
+            "acl_external_resources.html": self.external_resources,
+            "acl_internal_resources.html": self.internal_resources,
+            "acl_dmz_resources.html": self.dmz_resources,
+        }
 
     def save(self, *args, **kwargs):
         if self.token is None or self.token == "":
@@ -88,7 +116,7 @@ def update_days_in_work(sender, instance, **kwargs):
     ):
         if instance.status not in ["CMP", "CNL"]:
             instance.last_status = instance.status
-            instance.last_status_change_date = datetime.now(timezone.utc)
+            instance.last_status_change_date = datetime.now(timezone.utc)  # noqa: UP017
             instance.days_in_work = (
                 datetime.now().date() - instance.last_status_change_date.date()
             ).days


==== File: accesslist/signals.py ====
@@ -18,5 +18,5 @@ def run_send_acl_task(sender, instance, **kwargs):
                 "gitlab_repo_url": gitlab_repo_url,
             },
             countdown=5,
-            task_id=f"send_acl_task_{instance.id}"
+            task_id=f"send_acl_task_{instance.id}",
         )


==== File: accesslist/templates/acl_approve.html ====
@@ -36,9 +36,6 @@
             {% csrf_token %}
         </div>
     </div>
-
-
-
         {% if STATUS == 'CNL' %}
             <div class="row">
                 <div class="col-sm-3 pl-3">


==== File: accesslist/templates/acl_create_info.html ====
@@ -112,7 +112,7 @@
             <div class="contact-form">
               <label class="contact-form__label">
                 <span class="contact-form__text">ФИО</span>
-                <input type="text" class="contact__input" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.0 }}{% endif %}" placeholder="Иванов Иван" name="name" pattern="[А-Яа-яЁё\s\.]{3,32}"  autofocus required>
+                <input type="text" class="contact__input" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.full_name }}{% endif %}" placeholder="Иванов Иван" name="full_name" pattern="[А-Яа-яЁё\s\.]{3,32}"  autofocus required>
                 <span class="validity"></span>
 
               </label>
@@ -123,7 +123,7 @@
                             <input type="text" id="department" name="department" value="{{ team.name }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
                             <input type="hidden" id="teamid" name="teamid" value="{{ team.id }}" class="contact__input">
                         {% else %}
-                            <input type="text" id="department" name="department" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.3 }}{% endif %}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
+                            <input type="text" id="department" name="department" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.department }}{% endif %}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
                             <input type="hidden" id="teamid" name="teamid" value="0" class="contact__input">
                         {% endif %}
                         <span class="validity"></span>
@@ -136,7 +136,7 @@
 
               <label class="contact-form__label">
                 <span class="contact-form__text">Email</span>
-                <input type="email" name="email" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.1 }}{% endif %}" class="contact__input" placeholder="Norepl@Alfastrah.ru" pattern=".+@alfastrah.ru" required>
+                <input type="email" name="email" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.email }}{% endif %}" class="contact__input" placeholder="Norepl@Alfastrah.ru" pattern=".+@alfastrah.ru" required>
                 <span class="validity"></span>
               </label>
 
@@ -145,7 +145,7 @@
                   <select class="contact__input" id="gitlab_proj_upload_dropdown" name="project" required>
                         <option value="" {% if not LOCAL_STORAGE %} selected {% endif %} data-gitlab-url="">Не выбрано</option>
                         {% for acl_from_git in acl_gitlab_store %}
-                            <option value="{{ acl_from_git.project }}" data-gitlab-url="{{ acl_from_git.gitlab_url }}"{% if LOCAL_STORAGE.4 == acl_from_git.project %}selected{% endif %}>{{ acl_from_git.project }}</option>
+                            <option value="{{ acl_from_git.project }}" data-gitlab-url="{{ acl_from_git.gitlab_url }}"{% if LOCAL_STORAGE.project == acl_from_git.project %}selected{% endif %}>{{ acl_from_git.project }}</option>
                         {% endfor %}
                   </select>
                 <span class="validity"></span>
@@ -153,20 +153,20 @@
 
               <label class="contact-form__label">
                 <span class="contact-form__text">Телефон</span>
-                <input type="tel" name="tel" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.2 }}{% endif %}"  class="contact__input" placeholder="89096971821" pattern="(\+)?[0-9()+\s-]{4,}|(Нет)?">
+                <input type="tel" name="phone" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.phone }}{% endif %}"  class="contact__input" placeholder="89096971821" pattern="^(\+?[0-9]{11}|Нет)$">
                    <span class="validity"></span>
               </label>
 
 
              <label class="contact-form__label">
                 <span class="contact-form__text" style="max-width: 140px">Описание проекта (wiki)</span>
-                <input type="url" name="link" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.5 }}{% endif %}" class="contact__input" placeholder="https://wiki.alfastrah.ru/pages/viewpage.action?pageId=133435707" pattern="^https:\/\/wiki.(alfastrah|aslife).ru(.*)$" title="https://wiki.alfastrah.ru/pages/viewpage.action?pageId=133435707" readonly>
+                <input type="url" name="description" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.description }}{% endif %}" class="contact__input" placeholder="https://wiki.alfastrah.ru/pages/viewpage.action?pageId=133435707" pattern="^https:\/\/wiki.(alfastrah|aslife).ru(.*)$" title="https://wiki.alfastrah.ru/pages/viewpage.action?pageId=133435707" readonly>
                 <span class="validity"></span>
             </label>
 
             <label class="contact-form__label">
                 <span class="contact-form__text" style="max-width: 140px">Имя файла ACL</span>
-                <input type="text" id="acl_filename" name="acl_filename" class="contact__input" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.9 }}{% endif %}" readonly>
+                <input type="text" id="acl_filename" name="file_name" class="contact__input" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.file_name }}{% endif %}" readonly>
                 <span class="validity"></span>
             </label>
 </div>
@@ -178,34 +178,34 @@
 
               <label class="contact-form__label-checkbox">
                 <span class="contact-form__text">Дата ввода в эсплуатацию </span>
-                 <input type="date" class="contact__input" name="d_start" id="contact__input__start" min="2010-01-01" max="2040-01-01" placeholder="21.01.2020" value="{{LOCAL_STORAGE.7}}" required>
+                 <input type="date" class="contact__input" name="start_date" id="contact__input__start" min="2010-01-01" max="2040-01-01" placeholder="21.01.2020" value="{{LOCAL_STORAGE.start_date}}" required>
 
                 <span class="validity"></span>
               </label>
 
               <label class="contact-form__label-checkbox">
                 <span class="contact-form__text">Дата вывода из эксплуатации</span>
-               {% if LOCAL_STORAGE.8 == 'Нет' %}
-				<input type="date" class="contact__input" id="contact__input__term" value="" name="d_complate" placeholder="30.12.2030" min="2020-01-01" max="2040-01-01" required disabled>
+               {% if LOCAL_STORAGE.end_date == 'Нет' %}
+				<input type="date" class="contact__input" id="contact__input__term" value="" name="end_date" placeholder="30.12.2030" min="2020-01-01" max="2040-01-01" required disabled>
 				{% else %}
-				<input type="date" class="contact__input" id="contact__input__term" value="{{ LOCAL_STORAGE.8}}" name="d_complate" placeholder="30.12.2030" min="2020-01-01" max="2040-01-01" required>
+				<input type="date" class="contact__input" id="contact__input__term" value="{{ LOCAL_STORAGE.end_date}}" name="end_date" placeholder="30.12.2030" min="2020-01-01" max="2040-01-01" required>
 				{% endif %}
                 <span class="validity"></span>
                 <div style="white-space:nowrap;padding-top:5px;">
-                    <input type="checkbox" class="checkbox__real" id="checkbox__real__term" name="d_complete" {% if LOCAL_STORAGE.8 == 'Нет' %}checked{% endif %}>
+                    <input type="checkbox" class="checkbox__real" id="checkbox__real__term" name="d_complete" {% if LOCAL_STORAGE.end_date == 'Нет' %}checked{% endif %}>
                     <label for="checkbox__real__term" style="vertical-align: bottom;">Бессрочно</label>
                 </div>
               </label>
 
               <label class="contact-form__label-checkbox">
                 <span class="contact-form__text contact-form__text-active">Дата заполнения</span>
-                <input type="date" class="contact__input" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.6}}{% endif %}" name="d_form" id="contact__input__date" placeholder="21.01.2020" min="2020-01-01" max="2040-01-01" required>
+                <input type="date" class="contact__input" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.created_at }}{% endif %}" name="created_at" id="contact__input__date" placeholder="21.01.2020" min="2020-01-01" max="2040-01-01" required>
                 <span class="validity"></span>
             </label>
             </div>
               {% if LOCAL_STORAGE %}
                 <script>
-                {% if LOCAL_STORAGE.8 == 'Нет' %}
+                {% if LOCAL_STORAGE.end_date == 'Нет' %}
                     $("#checkbox__real__term").attr('checked', true);
                     $("#contact__input__term").attr('disabled', true);
                 {% endif %}
@@ -304,7 +304,7 @@
             <div class="contact-form">
               <label class="contact-form__label">
                 <span class="contact-form__text">ФИО</span>
-                <input type="text" class="contact__input" value="{{ user.last_name}} {{user.first_name }}" placeholder="Иванов Иван" name="name" pattern="[А-Яа-яЁё\s\.]{3,32}" autofocus required>
+                <input type="text" class="contact__input" value="{{ user.last_name}} {{user.first_name }}" placeholder="Иванов Иван" name="full_name" pattern="[А-Яа-яЁё\s\.]{3,32}" autofocus required>
                 <span class="validity"></span>
 
               </label>
@@ -316,7 +316,7 @@
                             <input type="hidden" id="teamid" name="teamid" value="{{ team.id }}" class="contact__input">
                         {% else %}
                             {% if LOCAL_STORAGE %}
-                                <input type="text" id="department" name="department" value="{{ LOCAL_STORAGE.3 }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
+                                <input type="text" id="department" name="department" value="{{ LOCAL_STORAGE.department }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
                             {% else %}
                                 <input type="text" id="department" name="department" value="{{ user.department }}" class="contact__input" placeholder="УИБ" pattern="[А-Яа-яЁёA-Za-z\s]{2,32}" required readonly>
                             {% endif %}
@@ -347,20 +347,20 @@
 
               <label class="contact-form__label">
                 <span class="contact-form__text">Телефон</span>
-                <input type="tel" name="tel" value="{{ user.mphone }}"  class="contact__input" placeholder="89096971821" pattern="(\+)?[0-9()+\s-]{4,}|(Нет)?">
+                <input type="tel" name="phone" value="{{ user.mphone }}"  class="contact__input" placeholder="89096971821" pattern="(\+)?[0-9()+\s-]{4,}|(Нет)?">
                    <span class="validity"></span>
               </label>
 
 
              <label class="contact-form__label">
                 <span class="contact-form__text" style="max-width: 140px">Описание проекта (wiki)</span>
-                <input type="url" name="link" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.5 }}{% endif %}" class="contact__input" placeholder="https://wiki.alfastrah.ru/pages/viewpage.action?pageId=133435707" pattern="^https:\/\/wiki.(alfastrah|aslife).ru(.*)$" title="https://wiki.alfastrah.ru/pages/viewpage.action?pageId=133435707" readonly>
+                <input type="url" name="description" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.description }}{% endif %}" class="contact__input" placeholder="https://wiki.alfastrah.ru/pages/viewpage.action?pageId=133435707" pattern="^https:\/\/wiki.(alfastrah|aslife).ru(.*)$" title="https://wiki.alfastrah.ru/pages/viewpage.action?pageId=133435707" readonly>
                 <span class="validity"></span>
               </label>
 
              <label class="contact-form__label">
                 <span class="contact-form__text" style="max-width: 140px">Имя файла ACL</span>
-                <input type="text" id="acl_filename" name="acl_filename" class="contact__input" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.9 }}{% endif %}" readonly>
+                <input type="text" id="acl_filename" name="file_name" class="contact__input" value="{% if LOCAL_STORAGE %}{{ LOCAL_STORAGE.file_name }}{% endif %}" readonly>
                 <span class="validity"></span>
             </label>
 </div>
@@ -372,13 +372,13 @@
 
               <label class="contact-form__label-checkbox">
                 <span class="contact-form__text">Дата ввода в эсплуатацию </span>
-                 <input type="date" class="contact__input" name="d_start" id="contact__input__start" min="2010-01-01" max="2040-01-01" placeholder="21.01.2020" value="" required>
+                 <input type="date" class="contact__input" name="start_date" id="contact__input__start" min="2010-01-01" max="2040-01-01" placeholder="21.01.2020" value="" required>
                 <span class="validity"></span>
               </label>
 
               <label class="contact-form__label-checkbox">
                 <span class="contact-form__text">Дата вывода из эксплуатации</span>
-                <input type="date" class="contact__input" id="contact__input__term" value="" name="d_complate" placeholder="30.12.2030" min="2010-01-01" max="2040-01-01" required>
+                <input type="date" class="contact__input" id="contact__input__term" value="" name="end_date" placeholder="30.12.2030" min="2010-01-01" max="2040-01-01" required>
                 <span class="validity"></span>
                 <div style="white-space:nowrap;padding-top:5px;">
                     <input type="checkbox" class="checkbox__real" id="checkbox__real__term" name="d_complete">
@@ -388,7 +388,7 @@
 
               <label class="contact-form__label-checkbox">
                 <span class="contact-form__text contact-form__text-active">Дата заполнения </span>
-                <input type="date" class="contact__input" value="" name="d_form" id="contact__input__date" placeholder="21.01.2020" min="2010-01-01" max="2040-01-01" required>
+                <input type="date" class="contact__input" value="" name="created_at" id="contact__input__date" placeholder="21.01.2020" min="2010-01-01" max="2040-01-01" required>
                 <span class="validity"></span>
             </label>
 </div>
@@ -547,6 +547,7 @@
         xhr.onload = function() {
             if (xhr.status === 200) {
                 var response = JSON.parse(xhr.responseText);
+                console.log("response", response)
                 if(response.error){
                     ShowNotify(0, response.error);
                     upload_from_git_btn.disabled = false;


==== File: accesslist/templates/acl_dmz_resources.html ====
@@ -18,8 +18,8 @@
                             <div>
                                 <p class="text-success font-weight-bold"><u>Список DMZ ресурсов (СГ АльфаСтрахование)</u></p>
                             </div>
-                            {% for key in latest_local_storage.items %}
-                               {% if key.0 == 'acl_dmz_resources.html' %}
+                            {% for key, value in latest_local_storage.items %}
+                                {% if key == 'acl_dmz_resources.html' %}
                                     <div>
                                          <table class="border-0 traffic-table table-hover">
                                              <thead class="text-secondary border-bottom small">
@@ -28,11 +28,11 @@
                                                  <th>Описание (цель)</th>
                                              </thead>
                                              <tbody>
-                                             {% for el in key.1 %}
+                                             {% for el in value %}
                                                  <tr>
-                                                     <td>{{ el.0 }}</td>
-                                                     <td>{{ el.1 }}</td>
-                                                     <td>{{ el.2 }}</td>
+                                                     <td>{{ el.source_ip }}</td>
+                                                     <td>{{ el.mask }}</td>
+                                                     <td>{{ el.description }}</td>
                                                  </tr>
                                              {% endfor %}
                                              </tbody>
@@ -69,7 +69,7 @@
                     {% for item in LOCAL_STORAGE %}
                          <tr>
                                     <td class="">
-                                       <input type="text"  class="form-control input__ip__external" value="{{ item.0}}" placeholder="195.239.64.79" name="input__ip_{% random_int 0 100 %}" autofocus minlength="7" maxlength="15" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$" required>
+                                       <input type="text"  class="form-control input__ip__external" value="{{ item.source_ip}}" placeholder="195.239.64.79" name="acl_dmz_resources[{{forloop.counter0}}][source_ip]" autofocus minlength="7" maxlength="15" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$" required>
                                         <span class="validity"></span>
                                     </td>
 
@@ -78,13 +78,13 @@
                                                 <div class="input-group-prepend">
                                                     <div class="input-group-text">/</div>
                                                 </div>
-                                            <input type="number" value="{{ item.1}}" class="form-control" placeholder="32" name="input__mask_{% random_int 0 100 %}"  style="max-width: 110px;" pattern="^([0-9]){1,2}$" min="1" max="32" required>
+                                            <input type="number" value="{{ item.mask}}" class="form-control" placeholder="32" name="acl_dmz_resources[{{forloop.counter0}}][mask]"  style="max-width: 110px;" pattern="^([0-9]){1,2}$" min="1" max="32" required>
                                             <span class="validity"></span>
                                           </div>
 
                                     </td>
                                     <td>
-                                            <textarea class="form-control" placeholder="Доступ до z14-1709-gw.alfastrah.ru" rows="1" cols="40"  name="input_descr_{% random_int 0 100 %}" pattern=".{3,}" required>{{item.2}}</textarea>
+                                            <textarea class="form-control" placeholder="Доступ до z14-1709-gw.alfastrah.ru" rows="1" cols="40"  name="acl_dmz_resources[{{forloop.counter0}}][description]" pattern=".{3,}" required>{{item.description}}</textarea>
                                             <span class="validity"></span>
                                     </td>
                                     <td>
@@ -93,33 +93,31 @@
                                     </td>
                          </tr>
                     {% endfor %}
-                {% else %}
-                                     <tr>
-                                <td class="">
-                                   <input type="text"  class="form-control input__ip__external" placeholder="195.239.64.79" name="input__ip" autofocus minlength="7" maxlength="18" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$" required>
-                                    <span class="validity"></span>
-                                </td>
-
-                                <td class="">
-                                      <div class="input-group mb-2">
-                                            <div class="input-group-prepend">
-                                                <div class="input-group-text">/</div>
-                                            </div>
-                                        <input type="number" class="form-control" placeholder="32" name="input__mask"  style="max-width: 110px;" pattern="^([0-9]){1,2}$" min="1" max="32" required>
-                                        <span class="validity"></span>
-                                      </div>
-
-                                </td>
-                                <td>
-                                        <textarea class="form-control" placeholder="Доступ до z14-1709-gw.alfastrah.ru" rows="1" cols="40"  name="input_descr" pattern=".{3,}" required></textarea>
-                                        <span class="validity"></span>
-                                </td>
-                                <td>
-                                            <button class="btn btn-danger btn-sm btn-action btn-action-rm ml-3" type="button">-</button>
-                                            <button class="btn btn-success btn-sm btn-action btn-action-add ml-1" type="button">+</button>
-                                </td>
-                     </tr>
-                {% endif %}
+                    {% else %}
+                    <tr data-row-index="0">
+                        <td class="">
+                            <input type="text" class="form-control input__ip__external" placeholder="195.239.64.79" name="acl_dmz_resources[0][source_ip]" autofocus minlength="7" maxlength="15" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$" required>
+                            <span class="validity"></span>
+                        </td>
+                        <td class="">
+                            <div class="input-group mb-2">
+                                <div class="input-group-prepend">
+                                    <div class="input-group-text">/</div>
+                                </div>
+                                <input type="number" class="form-control" placeholder="32" name="acl_dmz_resources[0][mask]" style="max-width: 110px;" pattern="^([0-9]){1,2}$" min="1" max="32" required>
+                                <span class="validity"></span>
+                            </div>
+                        </td>
+                        <td>
+                            <textarea class="form-control" placeholder="Доступ до z14-1709-gw.alfastrah.ru" rows="1" cols="40" name="acl_dmz_resources[0][description]" pattern=".{3,}" required></textarea>
+                            <span class="validity"></span>
+                        </td>
+                        <td>
+                            <button class="btn btn-danger btn-sm btn-action btn-action-rm ml-3" type="button">-</button>
+                            <button class="btn btn-success btn-sm btn-action btn-action-add ml-1" type="button">+</button>
+                        </td>
+                    </tr>
+                    {% endif %}
                 </tbody>
             </table>
         </div>


==== File: accesslist/templates/acl_external_resources.html ====
@@ -18,8 +18,8 @@
                             <div>
                                 <p class="text-success font-weight-bold"><u>Список внешних ресурсов (Internet)</u></p>
                             </div>
-                            {% for key in latest_local_storage.items %}
-                               {% if key.0 == 'acl_external_resources.html' %}
+                            {% for key, value in latest_local_storage.items %}
+                                {% if key == 'acl_external_resources.html' %}
                                     <div>
                                          <table class="border-0 traffic-table table-hover">
                                              <thead class="text-secondary border-bottom small">
@@ -29,12 +29,12 @@
                                                  <th>Описание (цель)</th>
                                              </thead>
                                              <tbody>
-                                             {% for el in key.1 %}
+                                             {% for el in value %}
                                                  <tr>
-                                                     <td>{{ el.0 }}</td>
-                                                     <td>{{ el.1 }}</td>
-                                                     <td>{{ el.2 }}</td>
-                                                     <td>{{ el.3 }}</td>
+                                                     <td>{{ el.source_ip }}</td>
+                                                     <td>{{ el.domain }}</td>
+                                                     <td>{{ el.mask }}</td>
+                                                     <td>{{ el.description }}</td>
                                                  </tr>
                                              {% endfor %}
                                              </tbody>
@@ -72,11 +72,11 @@
                 {% for item in LOCAL_STORAGE %}
                      <tr>
                          <td class="">
-                             <input type="text" value="{{item.0}}" class="form-control input__ip__external" name="input__ip_{% random_int 0 100 %}" autofocus minlength="4" maxlength="128" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])|([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$" required>
+                             <input type="text" value="{{item.source_ip}}" class="form-control input__ip__external" name="acl_external_resources[{{forloop.counter0}}][source_ip]" autofocus minlength="4" maxlength="128" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])|([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$" required>
                              <span class="validity"></span>
                          </td>
                          <td class="">
-                            <input type="text" value="{{item.1}}" class="form-control input_fqnd" placeholder="myserver.example.com" title="myserver.example.com" name="input_fqnd_{% random_int 0 100 %}">
+                            <input type="text" value="{{item.domain}}" class="form-control input_fqnd" placeholder="myserver.example.com" title="myserver.example.com" name="acl_external_resources[{{forloop.counter0}}][domain]">
                             <span class="validity"></span>
                         </td>
                          <td class="">
@@ -84,12 +84,12 @@
                                  <div class="input-group-prepend">
                                      <div class="input-group-text">/</div>
                                  </div>
-                                 <input type="number" value="{{item.2}}" class="form-control" min="1" max="32" name="input__mask_{% random_int 0 100 %}"  style="max-width: 110px;" pattern="^([0-9]){1,2}$" required>
+                                 <input type="number" value="{{item.mask}}" class="form-control" min="1" max="32" name="acl_external_resources[{{forloop.counter0}}][mask]"  style="max-width: 110px;" pattern="^([0-9]){1,2}$" required>
                                  <span class="validity"></span>
                              </div>
                          </td>
                          <td>
-                             <textarea class="form-control" rows="1" cols="40"  name="input_descr_{% random_int 0 100 %}" pattern=".{3,}" required>{{item.3}}</textarea>
+                             <textarea class="form-control" rows="1" cols="40"  name="acl_external_resources[{{forloop.counter0}}][description]" pattern=".{3,}" required>{{item.description}}</textarea>
                              <span class="validity"></span>
                          </td>
                          <td>
@@ -101,11 +101,11 @@
                 {% else %}
                      <tr>
                          <td class="">
-                             <input type="text" value="{{item.0}}" class="form-control input__ip__external" placeholder="173.194.222.0" name="input__ip" autofocus minlength="4" maxlength="128" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])|([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$" required>
+                             <input type="text" value="{{item.0}}" class="form-control input__ip__external" placeholder="173.194.222.0" name="acl_external_resources[0][source_ip]" autofocus minlength="4" maxlength="128" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])|([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$" required>
                              <span class="validity"></span>
                          </td>
                         <td class="">
-                            <input type="text" value="{{item.1}}" class="form-control input_fqnd" placeholder="myserver.example.com" title="myserver.example.com" name="input_fqnd_{% random_int 0 100 %}">
+                            <input type="text" value="{{item.1}}" class="form-control input_fqnd" placeholder="myserver.example.com" title="myserver.example.com" name="acl_external_resources[0][domain]">
                             <span class="validity"></span>
                         </td>
                          <td class="">
@@ -113,12 +113,12 @@
                                  <div class="input-group-prepend">
                                      <div class="input-group-text">/</div>
                                  </div>
-                                 <input type="number" value="{{item.2}}" class="form-control" placeholder="32" min="1" max="32" name="input__mask"  style="max-width: 110px;" pattern="^([0-9]){1,2}$" required>
+                                 <input type="number" value="{{item.2}}" class="form-control" placeholder="32" min="1" max="32" name="acl_external_resources[0][mask]"  style="max-width: 110px;" pattern="^([0-9]){1,2}$" required>
                                  <span class="validity"></span>
                              </div>
                          </td>
                          <td>
-                             <textarea class="form-control" placeholder="Сервисы google" rows="1" cols="40"  name="input_descr" pattern=".{3,}" required>{{item.3}}</textarea>
+                             <textarea class="form-control" placeholder="Сервисы google" rows="1" cols="40"  name="acl_external_resources[0][description]" pattern=".{3,}" required>{{item.3}}</textarea>
                              <span class="validity"></span>
                          </td>
                          <td>


==== File: accesslist/templates/acl_internal_resources.html ====
@@ -20,8 +20,8 @@
                                 <div>
                                     <p class="text-success font-weight-bold"><u>Список внутренних ресурсов (СГ АльфаСтрахование)</u></p>
                                 </div>
-                                {% for key in latest_local_storage.items %}
-                                   {% if key.0 == 'acl_internal_resources.html' %}
+                                {% for key, value in latest_local_storage.items %}
+                                   {% if key == 'acl_internal_resources.html' %}
                                         <div>
                                              <table class="border-0 traffic-table table-hover">
                                                  <thead class="text-secondary border-bottom small">
@@ -30,11 +30,11 @@
                                                      <th>Описание (цель)</th>
                                                  </thead>
                                                  <tbody>
-                                                 {% for el in key.1 %}
+                                                    {% for el in value %}
                                                      <tr>
-                                                         <td>{{ el.0 }}</td>
-                                                         <td>{{ el.1 }}</td>
-                                                         <td>{{ el.2 }}</td>
+                                                         <td>{{ el.source_ip }}</td>
+                                                         <td>{{ el.mask }}</td>
+                                                         <td>{{ el.description }}</td>
                                                      </tr>
                                                  {% endfor %}
                                                  </tbody>
@@ -72,7 +72,7 @@
                 {% for item in LOCAL_STORAGE %}
                     <tr>
                                 <td class="">
-                                    <input type="text" value="{{item.0}}" class="form-control input__ip__internal"  name="input__ip_{% random_int 0 100 %}" autofocus minlength="7" maxlength="18" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$" required>
+                                    <input type="text" value="{{item.source_ip}}" class="form-control input__ip__internal"  placeholder="195.239.64.79" name="acl_internal_resources[{{forloop.counter0}}][source_ip]" autofocus minlength="7" maxlength="18" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$" required>
                                     <span class="validity"></span>
                                 </td>
 
@@ -81,12 +81,12 @@
                                             <div class="input-group-prepend">
                                                 <div class="input-group-text">/</div>
                                             </div>
-                                        <input type="number" value="{{ item.1}}" class="form-control" name="input__mask_{% random_int 0 100 %}"  style="max-width: 110px;" pattern="^([0-9]){1,2}$" min="1" max="32" required>
+                                        <input type="number" value="{{ item.mask}}" class="form-control" name="acl_internal_resources[{{forloop.counter0}}][mask]" placeholder="32" style="max-width: 110px;" pattern="^([0-9]){1,2}$" min="1" max="32" required>
                                         <span class="validity"></span>
                                       </div>
                                 </td>
                                 <td>
-                                        <textarea class="form-control" rows="1" cols="40"  name="input_descr_{% random_int 0 100 %}" pattern=".{3,}" required>{{ item.2}}</textarea>
+                                        <textarea class="form-control" rows="1" cols="40"  name="acl_internal_resources[{{forloop.counter0}}][description]" pattern=".{3,}" required>{{ item.description}}</textarea>
                                         <span class="validity"></span>
                                 </td>
                                 <td>
@@ -98,7 +98,7 @@
                 {% else %}
                                 <tr>
                                 <td class="">
-                                    <input type="text" class="form-control input__ip__internal" placeholder="172.16.45.75" name="input__ip" autofocus minlength="7" maxlength="18" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$" required>
+                                    <input type="text" class="form-control input__ip__internal" placeholder="172.16.45.75" name="acl_internal_resources[0][source_ip]" autofocus minlength="7" maxlength="18" size="15" pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$" required>
                                     <span class="validity"></span>
                                 </td>
 
@@ -107,12 +107,12 @@
                                             <div class="input-group-prepend">
                                                 <div class="input-group-text">/</div>
                                             </div>
-                                        <input type="number" class="form-control" placeholder="32" name="input__mask"  style="max-width: 110px;" pattern="^([0-9]){1,2}$" min="1" max="32" required>
+                                        <input type="number" class="form-control" placeholder="32" name="acl_internal_resources[0][mask]"  style="max-width: 110px;" pattern="^([0-9]){1,2}$" min="1" max="32" required>
                                         <span class="validity"></span>
                                       </div>
                                 </td>
                                 <td>
-                                        <textarea class="form-control" placeholder="Внутренняя сеть АС" rows="1" cols="40"  name="input_descr" pattern=".{3,}" required></textarea>
+                                        <textarea class="form-control" placeholder="Внутренняя сеть АС" rows="1" cols="40"  name="acl_internal_resources[0][description]" pattern=".{3,}" required></textarea>
                                         <span class="validity"></span>
                                 </td>
                                 <td>


==== File: accesslist/templates/acl_pending.html ====
@@ -119,20 +119,20 @@
                             <p class="text-success font-weight-bold"><u>Контактная информация</u></p>
                         </div>
                          <div class="row">
-                             <dt class="col-sm-3 text-secondary">ФИО</dt><dd class="col-sm-9">{{ key.1.0 }}</dd>
-                             <dt class="col-sm-3 text-secondary">Email</dt><dd class="col-sm-9">{{ key.1.1 }}</dd>
-                             <dt class="col-sm-3 text-secondary">Телефон</dt><dd class="col-sm-9">{{ key.1.2 }}</dd>
+                             <dt class="col-sm-3 text-secondary">ФИО</dt><dd class="col-sm-9">{{ key.1.full_name }}</dd>
+                             <dt class="col-sm-3 text-secondary">Email</dt><dd class="col-sm-9">{{ key.1.email }}</dd>
+                             <dt class="col-sm-3 text-secondary">Телефон</dt><dd class="col-sm-9">{{ key.1.phone }}</dd>
 
-                             <dt class="col-sm-3 text-secondary">Отдел/Управление</dt><dd class="col-sm-9">{{ key.1.3 }}</dd>
-                             <dt class="col-sm-3 text-secondary">Проект/ИС</dt><dd class="col-sm-9">{{ key.1.4 }}</dd>
-                             <dt class="col-sm-3 text-secondary">Описание проекта*</dt><dd class="col-sm-9">{{ key.1.5 }}</dd>
+                             <dt class="col-sm-3 text-secondary">Отдел/Управление</dt><dd class="col-sm-9">{{ key.1.department }}</dd>
+                             <dt class="col-sm-3 text-secondary">Проект/ИС</dt><dd class="col-sm-9">{{ key.1.project }}</dd>
+                             <dt class="col-sm-3 text-secondary">Описание проекта*</dt><dd class="col-sm-9">{{ key.1.description }}</dd>
 
-                             <dt class="col-sm-3 text-secondary">Дата ввода в эсплуатацию</dt><dd class="col-sm-9">{{ key.1.6 }}</dd>
-                             <dt class="col-sm-3 text-secondary">Дата вывода из эксплуатации</dt><dd class="col-sm-9">{{ key.1.8 }}</dd>
-                             <dt class="col-sm-3 text-secondary">Дата заполнения</dt><dd class="col-sm-9">{{ key.1.7 }}</dd>
+                             <dt class="col-sm-3 text-secondary">Дата ввода в эсплуатацию</dt><dd class="col-sm-9">{{ key.1.start_date }}</dd>
+                             <dt class="col-sm-3 text-secondary">Дата вывода из эксплуатации</dt><dd class="col-sm-9">{{ key.1.end_date }}</dd>
+                             <dt class="col-sm-3 text-secondary">Дата заполнения</dt><dd class="col-sm-9">{{ key.1.created_at }}</dd>
                          </div>
                     </div>
-                  {% elif key.0 == 'acl_internal_resources.html' %}
+                  {% elif key.0 == 'acl_internal_resources.html' and key.1 %}
                  <div class="col-12 mt-5">
                     <div>
                         <p class="text-success font-weight-bold"><u>Список внутренних ресурсов (СГ АльфаСтрахование)</u></p>
@@ -147,10 +147,10 @@
                              <tbody>
                              {% for el in key.1 %}
                              <tr>
-                                 <td style="width: 40%">{{ el.0 }}</td>
-                                 <td>{{ el.1 }}</td>
-                                 <td>{{ el.2 }}</td>
-                                {% if not el.0|check_internal %}
+                                 <td style="width: 40%">{{ el.source_ip }}</td>
+                                 <td>{{ el.mask }}</td>
+                                 <td>{{ el.description }}</td>
+                                {% if not el.source_ip|check_internal %}
                                     <td class="text-danger">*Вероятно неправильный IP-адрес</td>
                                 {% endif %}
                              </tr>
@@ -159,7 +159,7 @@
                          </table>
                      </div>
                  </div>
-                 {% elif key.0 == 'acl_dmz_resources.html' %}
+                 {% elif key.0 == 'acl_dmz_resources.html' and key.1%}
                  <div class="col-12 mt-5">
                     <div>
                         <p class="text-success font-weight-bold"><u>Список DMZ ресурсов (СГ АльфаСтрахование)</u></p>
@@ -174,10 +174,10 @@
                              <tbody>
                              {% for el in key.1 %}
                              <tr>
-                                 <td style="width: 40%">{{ el.0 }}</td>
-                                 <td>{{ el.1 }}</td>
-                                 <td>{{ el.2 }}</td>
-                                {% if not el.0|check_dmz %}
+                                 <td style="width: 40%">{{ el.source_ip }}</td>
+                                 <td>{{ el.mask }}</td>
+                                 <td>{{ el.description }}</td>
+                                {% if not el.source_ip|check_dmz %}
                                     <td class="text-danger">*Вероятно неправильный IP-адрес</td>
                                 {% endif %}
                              </tr>
@@ -186,7 +186,7 @@
                          </table>
                      </div>
                  </div>
-                {% elif key.0 == 'acl_external_resources.html' %}
+                {% elif key.0 == 'acl_external_resources.html' and key.1%}
                  <div class="col-12 mt-5">
                     <div>
                         <p class="text-success font-weight-bold"><u>Список внешних ресурсов (Internet)</u></p>
@@ -202,11 +202,11 @@
                              <tbody>
                              {% for el in key.1 %}
                              <tr>
-                                 <td style="width: 40%">{{ el.0 }}</td>
-                                 <td style="width: 20%">{{ el.1 }}</td>
-                                 <td style="width: 20%">{{ el.2 }}</td>
-                                 <td style="width: 20%">{{ el.3 }}</td>
-                                 {% if not el.0|check_external %}
+                                 <td style="width: 40%">{{ el.source_ip }}</td>
+                                 <td style="width: 20%">{{ el.domain }}</td>
+                                 <td style="width: 20%">{{ el.mask }}</td>
+                                 <td style="width: 20%">{{ el.description }}</td>
+                                 {% if not el.source_ip|check_external %}
                                     <td class="text-danger">*Вероятно неправильный IP-адрес</td>
                                 {% endif %}
                              </tr>
@@ -215,7 +215,7 @@
                          </table>
                      </div>
                  </div>
-            {% elif key.0 == 'acl_traffic.html' %}
+            {% elif key.0 == 'acl_traffic.html' and key.1 %}
                  <div class="col-12 mt-5">
                     <div>
                         <p class="text-success font-weight-bold"><u>Потоки траффика</u></p>
@@ -234,14 +234,14 @@
                              <tbody>
                              {% for el in key.1 %}
                              <tr>
-                                 <td>{{ el.0 }}</td>
-                                 <td style="width: 25%">{{ el.1 }}</td>
-                                 <td>{{ el.2 }}</td>
-                                 <td style="width: 25%">{{ el.3 }}</td>
-                                 <td>{{ el.4 }}</td>
-                                 <td>{{ el.5 }}</td>
-                                 <td>{{ el.6 }}</td>
-                                 {% if el.1 == el.3 %}
+                                 <td>{{ el.sourse_domain }}</td>
+                                 <td style="width: 25%">{{ el.sourse_ip }}</td>
+                                 <td>{{ el.destination_domain }}</td>
+                                 <td style="width: 25%">{{ el.destination_ip }}</td>
+                                 <td>{{ el.protocol_port }}</td>
+                                 <td>{{ el.program_name }}</td>
+                                 <td>{{ el.description }}</td>
+                                 {% if el.sourse_ip == el.destination_ip %}
                                     <td class="text-danger" style="font-size: 11px">*Источник и назначение не должны быть одинаковыми</td>
                                 {% endif %}
                              </tr>


==== File: accesslist/templates/acl_traffic.html ====
@@ -20,8 +20,8 @@
                             <div>
                                 <p class="text-success font-weight-bold"><u>Потоки траффика</u></p>
                             </div>
-                            {% for key in latest_local_storage.items %}
-                               {% if key.0 == 'acl_traffic.html' %}
+                            {% for key, value in latest_local_storage.items %}
+                               {% if key == 'acl_traffic.html' %}
                                     <div>
                                          <table class="border-0 traffic-table table-hover">
                                              <thead class="text-secondary border-bottom small">
@@ -35,16 +35,16 @@
                                                  <th>Этот доступ Резервный? | </th>
                                              </thead>
                                              <tbody>
-                                             {% for el in key.1 %}
+                                             {% for el in value %}
                                                  <tr>
-                                                     <td>{{ el.0 }}</td>
-                                                     <td>{{ el.1 }}</td>
-                                                     <td>{{ el.2 }}</td>
-                                                     <td>{{ el.3 }}</td>
-                                                     <td>{{ el.4 }}</td>
-                                                     <td>{{ el.5 }}</td>
-                                                     <td>{{ el.6 }}</td>
-                                                     <td>{{ el.7 }}</td>
+                                                     <td>{{ el.sourse_domain }}</td>
+                                                     <td>{{ el.sourse_ip }}</td>
+                                                     <td>{{ el.destination_domain }}</td>
+                                                     <td>{{ el.destination_ip }}</td>
+                                                     <td>{{ el.protocol_port }}</td>
+                                                     <td>{{ el.program_name }}</td>
+                                                     <td>{{ el.description }}</td>
+                                                     <td>{{ el.reserve }}</td>
                                                  </tr>
                                              {% endfor %}
                                              </tbody>
@@ -100,29 +100,76 @@
                                 {% for widget in widgets %}
                                     <td>
                                         {% if "input_is_reserve" in widget %}
-                                             <input class="form-control"
-                                                   style="width: 20px; height: 20px;"
-                                                   type="checkbox"
-                                                   name="{{widget}}_{% random_int %}"
-                                                   value="reserve"
-                                                   title="Этот доступ резервный?"
-                                                   {% if item|get_index:forloop.counter0 == "reserve" %}checked{% endif %}>
-                                        {% elif "input__ip" in widget or widget == "input__host_port"%}
-                                            <input type="text" class="form-control" value="{{item|get_index:forloop.counter0}}" name="{{widget}}_{% random_int %}" {% if widget == "input__host_port" %} pattern="^[a-zA-Z]+/+(?:\d+|\d+-\d+)(?:,\s*(?:\d+|\d+-\d+))*$" placeholder="UDP/100-200" title="UDP/100-200" {% else %} pattern="^(any|((\d{1,2}|1\d\d|2[0-4]\d|25[0-5]).){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])(/\d{1,2})?)$" title="1.1.1.1" {% endif %} autofocus required>
-                                        {% else %}
-                                            {% if "input__domain_source" in widget or "input__domain_dest" in widget %}
+                                            <input class="form-control"
+                                                  style="width: 20px; height: 20px;"
+                                                  type="checkbox"
+                                                  name="acl_traffic[{{forloop.parentloop.counter0}}][reserve]"
+                                                  value="{{item.reserve}}"
+                                                  title="Этот доступ резервный?"
+                                                  {% if item.reserve %}checked{% endif %}
+                                                  onchange="this.value=this.checked">
+                                        {% elif "input__ip_source" in widget %}
+                                            <input type="text" class="form-control" 
+                                                   value="{{item.sourse_ip}}" 
+                                                   name="acl_traffic[{{forloop.parentloop.counter0}}][sourse_ip]"
+                                                   pattern="^(any|((\d{1,2}|1\d\d|2[0-4]\d|25[0-5]).){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])(/\d{1,2})?)$"
+                                                   title="1.1.1.1"
+                                                   autofocus required>
+                                        {% elif "input__ip__external" in widget %}
+                                            <input type="text" class="form-control" 
+                                                   value="{{item.destination_ip}}"
+                                                   name="acl_traffic[{{forloop.parentloop.counter0}}][destination_ip]"
+                                                   pattern="^(any|((\d{1,2}|1\d\d|2[0-4]\d|25[0-5]).){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])(/\d{1,2})?)$"
+                                                   title="1.1.1.1"
+                                                   autofocus required>
+                                        {% elif widget == "input__host_port" %}
+                                            <input type="text" class="form-control"
+                                                   value="{{item.protocol_port}}"
+                                                   name="acl_traffic[{{forloop.parentloop.counter0}}][protocol_port]"
+                                                   pattern="^[a-zA-Z]+/+(?:\d+|\d+-\d+)(?:,\s*(?:\d+|\d+-\d+))*$"
+                                                   placeholder="UDP/100-200"
+                                                   title="UDP/100-200"
+                                                   autofocus required>
+                                        {% elif "input__domain_source" in widget %}
                                             <div class="form-group" style="position: relative;">
-                                              <textarea type="text" class="form-control {{widget}}_textarea" rows="1" cols="19" name="{{widget}}_{% random_int %}" autofocus required>{{item|get_index:forloop.counter0}}</textarea>
+                                              <textarea type="text" class="form-control input__domain_source_textarea" 
+                                                        name="acl_traffic[{{forloop.parentloop.counter0}}][sourse_domain]" 
+                                                        autofocus required>{{item.sourse_domain}}</textarea>
                                               <span class="validity"></span>
                                             </div>
                                             <div class="form-group">   
-                                              <select class="{{widget}}_select form-control custom_domain_select" style="width:200px;">
+                                              <select class="input__domain_source_select form-control custom_domain_select" 
+                                                       
+                                                      style="width:200px;">
+                                                    <option value="" selected>Выбрать Хост</option>
+                                                </select>
+                                            </div>
+                                        {% elif "input__domain_dest" in widget %}
+                                            <div class="form-group" style="position: relative;">
+                                              <textarea type="text" class="form-control input__domain_dest_textarea" 
+                                                        name="acl_traffic[{{forloop.parentloop.counter0}}][destination_domain]" 
+                                                        autofocus required>{{item.destination_domain}}</textarea>
+                                              <span class="validity"></span>
+                                            </div>
+                                            <div class="form-group">
+                                              <select class="input__domain_dest_select form-control custom_domain_select" 
+                                                      style="width:200px;"
+                                                      >
                                                     <option value="" selected>Выбрать Хост</option>
                                                 </select>
                                             </div>
-                                            {% else %}
-                                                <textarea type="text" class="form-control" rows="1" cols="19" name="{{widget}}_{% random_int %}" {% if widget == "input__application_port" %} title="grpc, kafka, sqlServer" maxlength="50" {% endif %} autofocus required>{{item|get_index:forloop.counter0}}</textarea>
-                                            {% endif %}
+                                        {% elif "input__application_port" in widget %}
+                                            <textarea class="form-control"
+                                                    rows="1" cols="19"
+                                                    name="acl_traffic[{{forloop.parentloop.counter0}}][program_name]"
+                                                    title="grpc, kafka, sqlServer"
+                                                    maxlength="50"
+                                                    autofocus required>{{item.program_name}}</textarea>
+                                        {% else %}
+                                            <textarea class="form-control"
+                                                    rows="1" cols="19"
+                                                    name="acl_traffic[{{forloop.parentloop.counter0}}][description]"
+                                                    autofocus required>{{item.description}}</textarea>
                                         {% endif %}
                                         <span class="validity"></span>
                                     </td>
@@ -137,32 +184,78 @@
                      <tr>
                      {% for widget in widgets %}
                                  <td>
-                                     {% if "input_is_reserve" in widget %}
-                                         <input class="form-control"
-                                               style="width: 20px; height: 20px;"
-                                               type="checkbox"
-                                               name="{{widget}}_{% random_int %}"
-                                               value="reserve"
-                                               title="Этот доступ резервный?"
-                                               {% if item|get_index:forloop.counter0 == "reserve" %}checked{% endif %}>
-                                     {% elif widget == "input__ip_source" or widget == "input__ip__external" or widget == "input__host_port" %}
-                                            <input type="text" class="form-control" value="{{item|get_index:forloop.counter0}}" name="{{widget}}_{% random_int %}" {% if widget == "input__ip_source" or widget == "input__ip__external" %} pattern="^(any|((\d{1,2}|1\d\d|2[0-4]\d|25[0-5]).){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])(/\d{1,2})?)$" {% endif %} {% if widget == "input__host_port" %} pattern="^[a-zA-Z]+/+(?:\d+|\d+-\d+)(?:,\s*(?:\d+|\d+-\d+))*$" placeholder="UDP/100-200" title="UDP/100-200"{% endif %} autofocus required>
-                                     {% else %}
-                                            {% if "input__domain_source" in widget or "input__domain_dest" in widget %}
-                                            <div class="form-group" style="position: relative;">
-                                              <textarea type="text" class="form-control {{widget}}_textarea" rows="1" cols="19" name="{{widget}}_{% random_int %}" autofocus required>{{item|get_index:forloop.counter0}}</textarea>
-                                              <span class="validity"></span>
-                                            </div>
-                                            <div class="form-group">
-                                              <select class="{{widget}}_select form-control custom_domain_select" style="width:200px;">
-                                                    <option value="" selected>Выбрать Хост</option>
-                                                </select>
-                                            </div>
-                                            {% else %}
-                                                <textarea type="text" class="form-control" rows="1" cols="19" name="{{widget}}_{% random_int %}" {% if widget == "input__application_port" %} title="grpc, kafka, sqlServer" maxlength="50" {% endif %} autofocus required>{{item|get_index:forloop.counter0}}</textarea>
-                                            {% endif %}
-                                     {% endif %}
-                                     <span class="validity"></span>
+                                  {% if "input_is_reserve" in widget %}
+                                  <input class="form-control"
+                                        style="width: 20px; height: 20px;"
+                                        type="checkbox"
+                                        name="acl_traffic[0][reserve]"
+                                        value="{{item.reserve}}"
+                                        title="Эт��т доступ резервный?"
+                                        {% if item.reserve %}checked{% endif %}
+                                        onchange="this.value=this.checked">
+                              {% elif "input__ip_source" in widget %}
+                                  <input type="text" class="form-control" 
+                                         value="{{item.sourse_ip}}" 
+                                         name="acl_traffic[0][sourse_ip]"
+                                         pattern="^(any|((\d{1,2}|1\d\d|2[0-4]\d|25[0-5]).){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])(/\d{1,2})?)$"
+                                         title="1.1.1.1"
+                                         autofocus required>
+                              {% elif "input__ip__external" in widget %}
+                                  <input type="text" class="form-control" 
+                                         value="{{item.destination_ip}}"
+                                         name="acl_traffic[0][destination_ip]"
+                                         pattern="^(any|((\d{1,2}|1\d\d|2[0-4]\d|25[0-5]).){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])(/\d{1,2})?)$"
+                                         title="1.1.1.1"
+                                         autofocus required>
+                              {% elif widget == "input__host_port" %}
+                                  <input type="text" class="form-control"
+                                         value="{{item.protocol_port}}"
+                                         name="acl_traffic[0][protocol_port]"
+                                         pattern="^[a-zA-Z]+/+(?:\d+|\d+-\d+)(?:,\s*(?:\d+|\d+-\d+))*$"
+                                         placeholder="UDP/100-200"
+                                         title="UDP/100-200"
+                                         autofocus required>
+                              {% elif "input__domain_source" in widget %}
+                                  <div class="form-group" style="position: relative;">
+                                    <textarea type="text" class="form-control input__domain_source_textarea" 
+                                                      name="acl_traffic[0][sourse_domain]" 
+                                                      autofocus required>{{item.sourse_domain}}</textarea>
+                                    <span class="validity"></span>
+                                  </div>
+                                  <div class="form-group">   
+                                    <select class="input__domain_source_select form-control custom_domain_select" 
+                                                      style="width:200px;">
+                                          <option value="" selected>Выбрать Хост</option>
+                                      </select>
+                                  </div>
+                              {% elif "input__domain_dest" in widget %}
+                                  <div class="form-group" style="position: relative;">
+                                    <textarea type="text" class="form-control input__domain_dest_textarea" 
+                                                      name="acl_traffic[0][destination_domain]" 
+                                                      autofocus required>{{item.destination_domain}}</textarea>
+                                    <span class="validity"></span>
+                                  </div>
+                                  <div class="form-group">
+                                    <select class="input__domain_dest_select form-control custom_domain_select" 
+                                                      style="width:200px;"
+                                                      disabled>
+                                          <option value="" selected>Выбрать Хост</option>
+                                      </select>
+                                  </div>
+                              {% elif "input__application_port" in widget %}
+                                  <textarea class="form-control"
+                                          rows="1" cols="19"
+                                          name="acl_traffic[0][program_name]"
+                                          title="grpc, kafka, sqlServer"
+                                          maxlength="50"
+                                          autofocus required>{{item.program_name}}</textarea>
+                              {% else %}
+                                  <textarea class="form-control"
+                                          rows="1" cols="19"
+                                          name="acl_traffic[0][description]"
+                                          autofocus required>{{item.description}}</textarea>
+                              {% endif %}
+                              <span class="validity"></span>
                                  </td>
                       {% endfor %}
                                 <td>
@@ -210,11 +303,9 @@
     {#                ShowNotify(0, message[7]);#}
     {#                $(".input__host_port").focus();#}
     {#                return false;#}
-    {#            }#}
     {##}
     {#        }#}
     {##}
-    {##}
     {#    });#}
     {#});#}
 
@@ -260,7 +351,7 @@
 </div>
 
 <script>
-    {# Просмотр предыдущей заявки #}
+      // Просмотр предыдущей заявки
       $(document).ready(function() {
         $('#arrow-down').on('click', function() {
           var toggleState = $(this).data('toggle-state');
@@ -275,7 +366,7 @@
       });
 </script>
 
-    <script>
+<script>
       $(document).ready(function() {
         document.addEventListener('click', handleSelectClick);
         document.addEventListener('change', handleSelectChange);
@@ -342,6 +433,6 @@
                   ...document.querySelectorAll('textarea.input__domain_dest_textarea')];
         }
       });
-    </script>
+</script>
 {% endblock %}
 


==== File: accesslist/templatetags/empty_strings.py ====
@@ -4,5 +4,8 @@ register = template.Library()
 
 
 @register.filter
-def count_empty_strings(lst):
-    return lst.count(" ") > 1 or len(lst) < 7
+def count_empty_strings(dictionary):
+    empty_values = sum(
+        1 for value in dictionary.values() if not value or str(value).strip() == ""
+    )
+    return empty_values > 1


==== File: accesslist/views.py ====
@@ -126,7 +126,19 @@ class ObjectMixin:
                 # ClearSessionMeta()
                 tmp = get_object_or_404(ACL, id=str(acl_id))
 
-                request.session["LOCAL_STORAGE"] = json.loads(tmp.acltext)
+                request.session["LOCAL_STORAGE"] = {
+                    "acl_create_info.html": tmp.create_info if tmp.create_info else {},
+                    "acl_traffic.html": tmp.traffic_rules if tmp.traffic_rules else {},
+                    "acl_external_resources.html": (
+                        tmp.external_resources if tmp.external_resources else {}
+                    ),
+                    "acl_internal_resources.html": (
+                        tmp.internal_resources if tmp.internal_resources else {}
+                    ),
+                    "acl_dmz_resources.html": (
+                        tmp.dmz_resources if tmp.dmz_resources else {}
+                    ),
+                }
                 request.session["taskid"] = tmp.taskid or ""
 
                 if request.META.get("HTTP_REFERER", "") == "" and tmp.status in [
@@ -177,12 +189,16 @@ class ObjectMixin:
                         #     request.session['GIT_URL'] = ACT
             if "LOCAL_STORAGE" in request.session:
                 if "acl_create_info.html" in request.session["LOCAL_STORAGE"]:
-                    acl_proj = request.session["LOCAL_STORAGE"]["acl_create_info.html"][
-                        4
-                    ]
-                    acl_git_file = request.session["LOCAL_STORAGE"][
-                        "acl_create_info.html"
-                    ][-1]
+                    acl_proj = (
+                        request.session["LOCAL_STORAGE"]
+                        .get("acl_create_info.html", {})
+                        .get("project", "")
+                    )
+                    acl_git_file = (
+                        request.session["LOCAL_STORAGE"]
+                        .get("acl_create_info.html", {})
+                        .get("file_name", "")
+                    )
                     latest_acl_obj = ACL.objects.filter(
                         project=acl_proj,
                         git_filename=acl_git_file,
@@ -190,11 +206,10 @@ class ObjectMixin:
                     )
                     if len(latest_acl_obj) > 0:
                         latest_acl_obj = latest_acl_obj.latest("created")
-                        latest_local_storage = json.loads(latest_acl_obj.acltext)
                         latest_uuid = latest_acl_obj.id
                         latest_project = latest_acl_obj.project
                         latest_git_file = latest_acl_obj.git_filename
-                        context["latest_local_storage"] = latest_local_storage
+                        context["latest_local_storage"] = latest_acl_obj.acl_data
                         context["latest_uuid"] = latest_uuid
                         context["latest_project"] = latest_project
                         context["latest_git_file"] = latest_git_file
@@ -231,6 +246,7 @@ class ObjectMixin:
             NO_MAKE_JOB = request.GET.get("request", "yes")
             if tmp:
                 try:
+                    # Проверка на пустые данные
                     if (
                         len(tmp[self.template]) == 0
                         or len(tmp[self.template][0]) == 0
@@ -239,6 +255,7 @@ class ObjectMixin:
                         if self.template in request.session["LOCAL_STORAGE"]:
                             del request.session["LOCAL_STORAGE"][self.template]
                     else:
+                        # Обновление данных в сессии с учетом ключей
                         if self.template in request.session["LOCAL_STORAGE"]:
                             request.session["LOCAL_STORAGE"].update(
                                 {self.template: tmp[self.template]}
@@ -247,11 +264,12 @@ class ObjectMixin:
                             request.session["LOCAL_STORAGE"][self.template] = tmp[
                                 self.template
                             ]
-                except:
+                except Exception:
                     request.session["LOCAL_STORAGE"][self.template] = tmp[self.template]
 
                 request.session.modified = True
 
+                # Существующая логика проверки и сохранения
                 if "/new/" in request.path:
                     if "uuid" not in request.session or request.session["uuid"] != str(
                         acl_id
@@ -264,11 +282,10 @@ class ObjectMixin:
                         )
                     # else:
                     #    return HttpResponseRedirect(reverse(FORM_URLS[0]))
-                if FORM_APPLICATION_KEYS[0] in request.session["LOCAL_STORAGE"]:
-                    owner_form = request.session["LOCAL_STORAGE"][
-                        FORM_APPLICATION_KEYS[0]
-                    ]
-                else:
+                owner_form = request.session["LOCAL_STORAGE"].get(
+                    "acl_create_info.html", {}
+                )
+                if not owner_form:
                     messages.warning(
                         request,
                         "Для продолжения, необходимо заполнить контактные данные.",
@@ -281,7 +298,6 @@ class ObjectMixin:
                     messages.info(request, "Данные сохранены")
                     return redirect(f"{reverse(FORM_URLS[current_page])}{acl_id}/")
                 return redirect(f"{reverse(FORM_URLS[current_page + 1])}{acl_id}/")
-
         messages.warning(request, "Не все поля заполнены")
         return render(request, self.template, context={"acl_id": acl_id})
 
@@ -417,15 +433,13 @@ class Acl_approve(BaseView, LoginRequiredMixin, View):
         if tmp.team is not None:
             context.update({"team": tmp.team.name})
         else:
-            d_tmp = json.loads(tmp.acltext)["acl_create_info.html"]
-            if len(d_tmp) > 0:
-                d_tmp = d_tmp[3]
-            context.update({"team": d_tmp})
+            team = tmp.create_info.get("department")
+            context.update({"team": team})
 
         context.update(
             {
                 "acl_id": str(acl_id),
-                "FULL_STORAGE": json.loads(tmp.acltext),
+                "FULL_STORAGE": tmp.acl_data,
                 "FORM_APPLICATION_KEYS": FORM_APPLICATION_KEYS,
                 "APPROVE_LIST": APPROVE_LIST,
                 "APPROVE_OWNER": APPROVE_OWNER,
@@ -584,7 +598,7 @@ class Acl_pending(BaseView, View):
                 }
             )
 
-            context.update({"LOCAL_STORAGE": json.loads(tmp.acltext)})
+            context.update({"LOCAL_STORAGE": tmp.acl_data})
         else:
             if "LOCAL_STORAGE" in request.session:
                 context.update({"LOCAL_STORAGE": request.session["LOCAL_STORAGE"]})
@@ -613,28 +627,32 @@ def ACldefault(request):
     return HttpResponseRedirect(reverse("acldemo_urls"))
 
 
-def save__form(request, owner_form: None, acl_id) -> None:
+@transaction.atomic
+def save__form(request, owner_form, acl_id) -> None:
     """Сохранение данныех из сесии в БД"""
+
     if owner_form is None:
         logger.error("[save__form] owner_form is None")
         return
 
-    if owner_form[1] != request.user.email:
+    owner_email = owner_form.get("email")
+    if owner_email and owner_email != request.user.email:
         email = request.user.email
     else:
-        email = owner_form[1]
+        email = owner_email
 
     user = Owners.objects.filter(email=email).first()
+
     if not user:
         user = Owners.objects.create(
             email=email,
-            username=owner_form[0],
-            phone=owner_form[2],
+            username=owner_form.get("full_name"),
+            phone=owner_form.get("phone"),
             active=True,
-            department=owner_form[3],
+            department=owner_form.get("department"),
         )
     try:
-        ip, created_ip = Iplist.objects.get_or_create(ipv4=get_client_ip(request))
+        ip, _ = Iplist.objects.get_or_create(ipv4=get_client_ip(request))
         ip.owner = user
         ip.save()
         activity = []
@@ -658,7 +676,6 @@ def save__form(request, owner_form: None, acl_id) -> None:
             # if obj.status in ['WTE', 'APRV']:
             #    messages.warning(request, 'Вы не можете изменить ACL лист находяшийся на согласовании')
             #    return redirect(reverse('aclcreate_urls'),  kwargs=({"acl_id": acl_id}))
-            old = obj.acltext
             team_obj = int(request.POST.get("teamid", 0))
             if team_obj > 0:
                 team = Team.objects.get(id=team_obj)
@@ -671,13 +688,17 @@ def save__form(request, owner_form: None, acl_id) -> None:
             else:
                 if obj.owner is None:
                     if request.user is not None:
-                        if len(owner_form) > 1 and request.user.email == owner_form[1]:
+                        if len(owner_form) > 1 and request.user.email == owner_form.get(
+                            "email"
+                        ):
                             obj.owner = request.user
                         else:
                             if request.user.is_staff:
                                 try:
                                     tmp_owner = request.user
-                                    tmp_owner = User.objects.get(email=owner_form[1])
+                                    tmp_owner = User.objects.get(
+                                        email=owner_form.get("email")
+                                    )
                                     obj.owner = tmp_owner
                                 except tmp_owner.DoesNotExist:
                                     obj.owner = request.user
@@ -690,52 +711,73 @@ def save__form(request, owner_form: None, acl_id) -> None:
                     obj.status = "FL"
                     obj.save(update_fields=["status"])
 
-            # Fix bug hash empty old acl list
-            if list(obj.acltext) != []:
-                old = hash(obj.acltext)
-            new = hash(json.dumps(request.session["LOCAL_STORAGE"]))
-            if old != new:
-                if obj.status in ["CMP"]:  #'WTE', 'APRV'
-                    print(type(obj.approve))
-                    obj.approve.add([])
-                    obj.status = "FL"
-                    messages.info(
-                        request,
-                        "Вы изменили согласованные данные, для формирования обращения, необходимо заново согласовать ACL лист",
+            hash_mappings = {
+                "create_info": "acl_create_info.html",
+                "traffic_rules": "acl_traffic.html",
+                "external_resources": "acl_external_resources.html",
+                "internal_resources": "acl_internal_resources.html",
+                "dmz_resources": "acl_dmz_resources.html",
+            }
+
+            old_hashes = {}
+            for attr in hash_mappings:
+                if hasattr(obj, attr) and getattr(obj, attr):
+                    value = getattr(obj, attr)
+                    old_hashes[attr] = hash(json.dumps(value, sort_keys=True))
+            new_hashes = {}
+            for attr, key in hash_mappings.items():
+                if key in request.session["LOCAL_STORAGE"]:
+                    new_hashes[attr] = hash(
+                        json.dumps(
+                            request.session["LOCAL_STORAGE"].get(key, {}),
+                            sort_keys=True,
+                        )
                     )
-                else:
-                    if obj.status in ["WTE"]:
+            fields_to_update = []
+            for attr, new_hash in new_hashes.items():
+                if new_hash != old_hashes.get(attr):
+                    if obj.status in ["CMP"]:
+                        obj.approve.add([])
+                        obj.status = "FL"
+                        messages.info(
+                            request,
+                            "Вы изменили согласованные данные, для формирования обращения, необходимо заново согласовать ACL лист",
+                        )
+                        break
+                    elif obj.status in ["WTE"]:
                         messages.warning(
                             request,
                             "Вы не можете изменить ACL лист находяшийся на согласовании",
                         )
-                        response = redirect(
-                            reverse("aclcreate_urls", kwargs=({"acl_id": acl_id}))
+                        return redirect(
+                            reverse("aclcreate_urls", kwargs={"acl_id": acl_id})
                         )
 
-                        # response = redirect(reverse('acl_pending_urls', kwargs=({"acl_id": acl_id})))
-                        # response['Location'] += "?token={}".format(tmp.token)
-                        # return response
-                        return response  # HttpResponseRedirect()
-                #
-                # ('CMP', 'Выполнено'),
-                # ('WTE', 'Ожидает согласования'),
-                # ('APRV', 'Согласованно'),
+                    setattr(
+                        obj,
+                        attr,
+                        request.session["LOCAL_STORAGE"].get(hash_mappings[attr]),
+                    )
+                    fields_to_update.append(attr)
 
-                obj.acltext = json.dumps(request.session["LOCAL_STORAGE"])
             if len(activity) > 0:
                 obj.activity = ";".join(activity)
-            obj.project = owner_form[4]
-            obj.git_filename = owner_form[9]
+                fields_to_update.append("activity")
+
+            obj.project = owner_form.get("project")
+            obj.git_filename = owner_form.get("file_name")
+            fields_to_update.extend(["project", "git_filename", "owner"])
             try:
                 department = request.POST.get("department")
                 if department != "" or department != "Нет":
                     team = Team.objects.get(name=department)
                     if team:
                         obj.team = team
+                        fields_to_update.extend(["team"])
             except Exception as e:
                 logger.warning(f"Не удалось сохранить team в БД: {e}")
-            obj.save()
+            if fields_to_update:
+                obj.save(update_fields=fields_to_update)
 
     except Exception as e:
         messages.error(request, f"Ошибка, мы не смогли записать данные в БД. {e}")
@@ -1055,7 +1097,9 @@ def upload_acl_from_git(request):
             if "LOCAL_STORAGE" in result:
                 request.session["LOCAL_STORAGE"] = result.get("LOCAL_STORAGE")
                 if "acl_create_info.html" in result["LOCAL_STORAGE"]:
-                    result["LOCAL_STORAGE"]["acl_create_info.html"][5] = project_desc
+                    result["LOCAL_STORAGE"]["acl_create_info.html"][
+                        "description"
+                    ] = project_desc
         if request.method == "POST" and request.is_ajax:
             if len(result["LOCAL_STORAGE"]) == 0:
                 data = {"project_desc": project_desc}
@@ -1071,7 +1115,7 @@ def send_acl_to_git(request, acl_object):
         file_md = (
             create_markdown_file(
                 request,
-                json_data=json.loads(acl_object.acltext),
+                json_data=acl_object.acl_data,
                 filename=f"acl_{acl_object.id}",
                 fileuuid=acl_object.id,
             )
@@ -1167,7 +1211,7 @@ def check_taskid_and_status(request, *args, **kwargs):
                             gitlab_repo_url = ACLGitlabStore.objects.get(
                                 project=acl_object.project
                             ).gitlab_url
-                            local_storage = json.loads(acl_object.acltext)
+                            local_storage = acl_object.acl_data
                             doc_result = make_doc(
                                 request,
                                 data_set=local_storage,
@@ -1985,8 +2029,8 @@ def set_team_id(request=None):
 def makeAndDownloadMdAndDocx(request, acl_id):
     file_path = None
     acl_obj = ACL.objects.get(id=acl_id)
-    local_storage = json.loads(acl_obj.acltext)
-    gitlab_filename = local_storage["acl_create_info.html"][9]
+    local_storage = acl_obj.acl_data
+    gitlab_filename = local_storage.get("acl_create_info.html", {}).get("file_name", "")
 
     file_type = request.GET.get("file_type") or None
     try:
@@ -1994,7 +2038,9 @@ def makeAndDownloadMdAndDocx(request, acl_id):
             logger.info(f"[MAKE FILE] Получен file_type:{file_type}")
             if file_type == "docx":
                 logger.info("[MAKE FILE] Создание docx файла")
-                acl_project = local_storage["acl_create_info.html"][4]
+                acl_project = local_storage.get("acl_create_info.html", {}).get(
+                    "project", ""
+                )
                 gitlab_repo_url = ACLGitlabStore.objects.get(
                     project=acl_project
                 ).gitlab_url
@@ -2074,15 +2120,14 @@ class APIACLInfoView(APIView):
         port = serializer.get("port").replace(" ", "")
 
         if ip_source and ip_destination and port:
-            queryset = ACL.objects.values_list("id", "acltext", "taskid").exclude(
-                taskid=""
-            )
+            queryset = ACL.objects.all().exclude(taskid="")
             for acl in queryset:
-                acltext_dict = json.loads(acl[1])
-                if "acl_traffic.html" in acltext_dict:
-                    for item in acltext_dict["acl_traffic.html"]:
-                        if ip_source in item[1] and ip_destination in item[3]:
-                            row_port = item[4].split("/")[1].replace(" ", "")
+                if acl.traffic_rules:
+                    for item in acl.traffic_rules:
+                        if ip_source == item.get(
+                            "sourse_ip"
+                        ) and ip_destination == item.get("destination_ip"):
+                            row_port = item.get("protocol_port").split("/")[1].replace(" ", "")
                             if re.match(r"^\d+$", row_port):
                                 if row_port == port:
                                     result = True


==== File: acladmin/tasks.py ====
@@ -1,4 +1,3 @@
-import json
 import os
 
 from celery import shared_task
@@ -27,7 +26,7 @@ def send_acl(acl_id, gitlab_repo_url):
     if acl_object.taskid:
         return
 
-    acl_data_set = json.loads(acl_object.acltext)
+    acl_data_set = acl_object.acl_data
 
     try:
         doc_result = make_doc(


==== File: ownerlist/templates/search.html ====
@@ -28,7 +28,7 @@
                 {% endfor %}
             {% endif %}
            {% for el in Data %}
-{% if el.acltext|length > 0 %}
+{% if el.create_info|length > 0 %}
 <div class="post text-wrap" style="overflow-wrap: break-word;  word-break: break-word"><div class="post-header"><div class="post-header__row-top">
 <div class="col"><div class="post-header__block" style="background-color: #007bff;">ACL</div></div><div class="col-5"><div class="post-header__block-id"><div class="post-header__block-IP">Содержит: <span>{{SearchFor }}</span></div>
 <div class="post-header__block-name">ACL: <span>{{el.id}}</span></div></div></div><div class="col-6"><div class="post-header__block-owners">


==== File: ownerlist/utils.py ====
@@ -14,8 +14,8 @@ import tempfile
 import time
 import urllib
 import uuid
-from inspect import stack
 from itertools import chain
+from operator import getitem
 from pathlib import Path
 from shutil import copyfile
 from time import sleep
@@ -135,7 +135,7 @@ OMNI_HTTP_STATUS = {
     "Closed": "Закрыто",
     "Assigned": "На исполнении",
     "Registered": "Новое",
-    "RejectedByUser": "Отклолено",
+    "RejectedByUser": "Отклонено",
     "UNK": "Статус не известен",
     "": "Статус не известен",
 }
@@ -237,25 +237,44 @@ def ip_status(ip=None) -> dict:
     return data
 
 
+def _process_form_entries(data, prefix):
+
+    entries = {}
+    for key, value in data.items():
+        if key.startswith(prefix):
+            try:
+                index = int(key.split("[")[1].split("]")[0])
+                field = key.split("[")[2].split("]")[0]
+
+                if index not in entries:
+                    entries[index] = {}
+                entries[index][field] = value[0] if isinstance(value, list) else value
+            except (IndexError, ValueError):
+                continue
+    return entries
+
+
 def request_handler(request, namespace=""):
     """Функция для заполнения глобального массива LOCAL_STORAGE из POST параметров файлов acl*"""
     INFINITY = "Нет"
     LOCAL_STORAGE = {}
-    cnt_key = 0
-    empty_key = 0
 
-    if namespace == FORM_APPLICATION_KEYS[0]:  # first
-        LOCAL_STORAGE[namespace] = []
-        for idx, post_key in enumerate(POST_FORM_KEYS):
-            if idx == len(POST_FORM_KEYS) - 1:
-                if request.POST.get(post_key) in POST_FORM_EMPTY:
-                    LOCAL_STORAGE[namespace].append(INFINITY)
-                    continue
-
-            if request.POST.get(post_key) not in POST_FORM_EMPTY:
-                LOCAL_STORAGE[namespace].append(request.POST.get(post_key))
-            else:
-                LOCAL_STORAGE[namespace].append(INFINITY)
+    # Обработка контактной информации
+    if namespace == FORM_APPLICATION_KEYS[0]:
+        contact_data = request.POST
+
+        LOCAL_STORAGE[namespace] = {
+            "full_name": contact_data.get("full_name", INFINITY),
+            "email": contact_data.get("email", INFINITY),
+            "phone": contact_data.get("phone", INFINITY),
+            "department": contact_data.get("department", INFINITY),
+            "project": contact_data.get("project", INFINITY),
+            "description": contact_data.get("description", INFINITY),
+            "created_at": contact_data.get("created_at", INFINITY),
+            "start_date": contact_data.get("start_date", INFINITY),
+            "end_date": contact_data.get("end_date", INFINITY),
+            "file_name": contact_data.get("file_name", INFINITY),
+        }
 
         if namespace == FORM_APPLICATION_KEYS[0]:
             if request.POST.get("action_make_docx", "") == "on":
@@ -271,41 +290,42 @@ def request_handler(request, namespace=""):
             elif "ACT_OMNI" in request.session:
                 del request.session["ACT_OMNI"]
 
-            # request.session.modified = True
-
     else:
-        if namespace == FORM_APPLICATION_KEYS[-2]:  # Traffic page
-            str_pattern = "input__domain_source"
-        else:
-            str_pattern = "input__ip"
-
-        for k, v in request.POST.items():
-            if "input_" in str(k):
-                if len(v) > 0:
-                    try:
-                        v = "\n".join(v.splitlines())
-                        v = v.replace("\n\n", "\n")
-                    except Exception as e:
-                        if settings.DEBUG:
-                            logger.error(f"{stack()[0][3]} {e}")
-                if str_pattern in str(k):
-                    if namespace in LOCAL_STORAGE:
-                        LOCAL_STORAGE[namespace].append([v])
-                        cnt_key += 1
-                    else:
-                        LOCAL_STORAGE[namespace] = [[v]]
-                else:
-                    if v != "":
-                        LOCAL_STORAGE[namespace][cnt_key].append(v)
-                    else:
-                        if k == "d_complate":
-                            LOCAL_STORAGE[namespace][cnt_key].append(INFINITY)
-                        else:
-                            empty_key += 1
+        # Общая обработка для traffic и resource страниц
+        prefix = (
+            "acl_traffic"
+            if namespace == FORM_APPLICATION_KEYS[-2]
+            else namespace.replace(".html", "")
+        )
+        entries = _process_form_entries(request.POST, prefix)
+        LOCAL_STORAGE[namespace] = []
+        for entry in entries.values():
+            if namespace == FORM_APPLICATION_KEYS[-2]:  # Traffic page
+                row = {
+                    "sourse_domain": entry.get("sourse_domain", "-"),
+                    "sourse_ip": entry.get("sourse_ip", ""),
+                    "destination_domain": entry.get("destination_domain", ""),
+                    "destination_ip": entry.get("destination_ip", ""),
+                    "protocol_port": entry.get("protocol_port", ""),
+                    "program_name": entry.get("program_name", "-"),
+                    "description": entry.get("description", ""),
+                    "reserve": entry.get("reserve", "False") == "true",
+                }
+            elif namespace == "acl_external_resources.html":
+                row = {
+                    "source_ip": entry.get("source_ip", ""),
+                    "domain": entry.get("domain", ""),
+                    "mask": entry.get("mask", "32"),
+                    "description": entry.get("description", ""),
+                }
+            else:  # internal/dmz resources
+                row = {
+                    "source_ip": entry.get("source_ip", ""),
+                    "mask": entry.get("mask", "32"),
+                    "description": entry.get("description", ""),
+                }
+            LOCAL_STORAGE[namespace].append(row)
 
-        # if empty_key >= 2:
-        #         del LOCAL_STORAGE[namespace]
-        # return False
     return LOCAL_STORAGE
 
 
@@ -456,8 +476,17 @@ def DeepSearch(request, string: str = ""):
         tmp = tmp.replace("%", " ").replace("'", " ")
         row_query = Acl.objects.filter(
             id__in=RawSQL(
-                f"select id from accesslist_acl where acltext::text like '%%{tmp}%%' limit 5",
-                tmp,
+                """
+                SELECT id FROM accesslist_acl
+                WHERE
+                    create_info::text LIKE %s OR
+                    traffic_rules::text LIKE %s OR
+                    external_resources::text LIKE %s OR
+                    internal_resources::text LIKE %s OR
+                    dmz_resources::text LIKE %s
+                LIMIT 5
+                """,
+                ["%" + tmp + "%"] * 5,
             )
         )
         if row_query:
@@ -1100,30 +1129,19 @@ def make_doc(
 ) -> str:
     """Функция для генерации docx файла"""
 
-    def normalize_whitespace(data):
-        for key, value in data.items():
-            if key == "acl_traffic.html":
-                value = [row + [" "] if len(row) == 7 else row for row in value]
-            elif key != "acl_create_info.html":
-                value = [
-                    [cell.strip() if cell else " " for cell in row] for row in value
-                ]
-            data[key] = value
-        return data
-
     def get_gitlab_data():
         if gitlab_repo_url and gitlab_filename:
             md_content, _ = get_acl_from_gitlab(
                 repo_url=gitlab_repo_url,
                 file_name=gitlab_filename,
             )
-            return normalize_whitespace(convert_md_to_dict(md_content)["LOCAL_STORAGE"])
+            return convert_md_to_dict(md_content)["LOCAL_STORAGE"]
         print("Не удалось получить gitlab_data_set")
         return data_set
 
     def prepare_file_name():
         try:
-            name = data_set["acl_create_info.html"][4] or ""
+            name = data_set.get("acl_create_info.html", {}).get("project", "")
             if len(name) > 10:
                 name = "_".join(name.split()[:2])
             return (
@@ -1132,7 +1150,7 @@ def make_doc(
                 .replace(".", "")
                 .replace("/", "_")
             )
-        except:
+        except Exception:
             return str(uuid.uuid4())
 
     def highlight_changes(cell, is_new, is_deleted):
@@ -1150,23 +1168,36 @@ def make_doc(
 
     def process_contact_table(table, data, gitlab_data):
         not_found_count = 0
-        for row_idx, row_data in enumerate(data):
+
+        contact_fields = [
+            "full_name",
+            "email",
+            "phone",
+            "department",
+            "project",
+            "description",
+            "created_at",
+            "start_date",
+            "end_date",
+            "file_name",
+        ]
+
+        for row_idx, field in enumerate(contact_fields):
             if row_idx >= len(table.rows) - 1:
                 table.add_row()
             cell = table.cell(row_idx, 1)
+            row_data = data.get(field, "")
 
             if row_idx == 5 and row_data not in ("Нет", ""):
                 try:
                     for paragraph in cell.paragraphs:
                         add_hyperlink(paragraph, row_data, row_data, "0000EE", True)
                 except Exception:
-                    cell.text = row_data
+                    cell.text = str(row_data)
             else:
-                cell.text = row_data
+                cell.text = str(row_data)
 
-            gitlab_row_data = (
-                gitlab_data[row_idx] if row_idx < len(gitlab_data) else None
-            )
+            gitlab_row_data = gitlab_data.get(field)
             if str(row_data) != str(gitlab_row_data):
                 highlight_changes(cell, True, False)
                 if gitlab_row_data:
@@ -1182,51 +1213,174 @@ def make_doc(
             )
 
     def process_data_table(table, data_set, gitlab_data):
-        def compare_rows(row1, row2):
-            return all(
-                str(cell1).strip() == str(cell2).strip()
-                for cell1, cell2 in zip(row1, row2)  # noqa: B905
-            )
 
-        # Очистка таблицы
         for row in table.rows[1:]:
             table._tbl.remove(row._tr)
 
-        # Обработка данных из data_set
-        for row_idx, row_data in enumerate(data_set, start=1):
+        # Определяем тип таблицы по заголовкам
+        headers = [cell.text.strip().replace("\n", " ") for cell in table.rows[0].cells]
+
+        # Определяем структуру для разных типов таблиц
+        table_structures = {
+            "internal": {
+                "headers": ["IP-адрес", "Маска подсети/Префикс", "Описание"],
+                "fields": ["source_ip", "mask", "description"],
+            },
+            "dmz": {
+                "headers": ["IP-адрес", "Маска подсети/Префикс", "Описание"],
+                "fields": ["source_ip", "mask", "description"],
+            },
+            "external": {
+                "headers": [
+                    "IP-адрес/domain name",
+                    "Полное доменное имя источника",
+                    "Маска подсети/Префикс",
+                    "Описание",
+                ],
+                "fields": ["source_ip", "domain", "mask", "description"],
+            },
+            "traffic": {
+                "headers": [
+                    "Hostname (Источник)",
+                    "IP Address (Источник)",
+                    "Hostname (Назначение)",
+                    "IP Address (Назначение)",
+                    "Protocol/Port (Назначение)",
+                    "ПО использующее нестандартный порт",
+                    "Описание (цель)",
+                    "Этот доступ резервный?",
+                ],
+                "fields": [
+                    "sourse_domain",
+                    "sourse_ip",
+                    "destination_domain",
+                    "destination_ip",
+                    "protocol_port",
+                    "program_name",
+                    "description",
+                    "reserve",
+                ],
+            },
+        }
+
+        # Определяем тип таблицы
+        table_type = None
+        for type_key, structure in table_structures.items():
+            if headers == structure["headers"]:
+                table_type = type_key
+                break
+
+        def get_row_values(row_data):
+            """Получаем значения из строки данных в правильном порядке"""
+            if not row_data:
+                return None
+
+            if isinstance(row_data, dict):
+                fields = table_structures[table_type]["fields"]
+                values = []
+                for field in fields:
+                    value = row_data.get(field)
+                    if value is None:
+                        values.append("")
+                    elif isinstance(value, bool):
+                        values.append("Да" if value else "Нет")
+                    else:
+                        values.append(str(value).strip())
+
+                if table_type == "external":
+                    source_ip = row_data.get("source_ip", " ")
+                    domain = row_data.get("domain", " ")
+                    mask = row_data.get("mask", " ")
+                    description = row_data.get("description", " ")
+                    values = [
+                        source_ip if source_ip else "",
+                        domain if domain else "",
+                        mask,
+                        description,
+                    ]
+                return tuple(values)
+            elif isinstance(row_data, (list, tuple)):
+                return tuple(
+                    str(val).strip() if val is not None else "" for val in row_data
+                )
+            return None
+
+        def compare_rows(row1, row2):
+            """Сравнивает две строки, игнорируя порядок значений внутри полей"""
+            if not row1 or not row2:
+                return False
+            return sorted(str(x).lower() for x in row1) == sorted(
+                str(x).lower() for x in row2
+            )
+
+        # Преобразуем данные для сравнения
+        current_rows = [get_row_values(row) for row in data_set if row]
+        gitlab_rows = [get_row_values(row) for row in gitlab_data if row]
+
+        # Удаляем None значения
+        current_rows = [row for row in current_rows if row]
+        gitlab_rows = [row for row in gitlab_rows if row]
+
+        # Находим новые и удаленные строки
+        new_rows = []
+        deleted_rows = []
+        unchanged_rows = []
+
+        # Находим неизмененные и новые строки
+        used_gitlab_indices = set()
+        for curr_row in current_rows:
+            found = False
+            for i, git_row in enumerate(gitlab_rows):
+                if i not in used_gitlab_indices and compare_rows(curr_row, git_row):
+                    unchanged_rows.append(curr_row)
+                    used_gitlab_indices.add(i)
+                    found = True
+                    break
+            if not found:
+                new_rows.append(curr_row)
+        # Находим удаленные строки
+        for i, git_row in enumerate(gitlab_rows):
+            if i not in used_gitlab_indices:
+                deleted_rows.append(git_row)
+
+        # Сначала добавляем неизмененные строки
+        for row_values in unchanged_rows:
+            row_idx = len(table.rows)
             table.add_row()
-            for cell_idx, cell_val in enumerate(row_data):
+            for cell_idx, cell_val in enumerate(row_values):
                 if cell_idx >= len(table.columns):
                     continue
                 cell = table.cell(row_idx, cell_idx)
                 cell.text = str(cell_val)
 
-                # Проверяем, есть ли эта строка в gitlab_data
-                if not any(
-                    compare_rows(row_data, gitlab_row) for gitlab_row in gitlab_data
-                ):
-                    highlight_changes(cell, True, False)  # Новая строка
+        # Затем добавляем удаленные строки
+        for row_values in deleted_rows:
+            row_idx = len(table.rows)
+            table.add_row()
+            for cell_idx, cell_val in enumerate(row_values):
+                if cell_idx >= len(table.columns):
+                    continue
+                cell = table.cell(row_idx, cell_idx)
+                cell.text = str(cell_val)
+                highlight_changes(cell, False, True)
 
-        # Добавление удаленных строк из gitlab_data
-        for gitlab_row in gitlab_data:
-            if not any(compare_rows(gitlab_row, data_row) for data_row in data_set):
-                row_idx = len(table.rows)
-                table.add_row()
-                for cell_idx, cell_val in enumerate(gitlab_row):
-                    if cell_idx >= len(table.columns):
-                        continue
-                    cell = table.cell(row_idx, cell_idx)
-                    cell.text = str(cell_val)
-                    highlight_changes(cell, False, True)  # Удаленная строка
+        # В конце добавляем новые строки
+        for row_values in new_rows:
+            row_idx = len(table.rows)
+            table.add_row()
+            for cell_idx, cell_val in enumerate(row_values):
+                if cell_idx >= len(table.columns):
+                    continue
+                cell = table.cell(row_idx, cell_idx)
+                cell.text = str(cell_val)
+                highlight_changes(cell, True, False)
 
         # Очистка пустых строк
         for row in table.rows[::-1]:
             if all(cell.text.strip() == "" for cell in row.cells):
                 table._tbl.remove(row._tr)
 
-    data_set = normalize_whitespace(data_set)
     gitlab_data_set = get_gitlab_data()
-
     is_in_session = request and "ACT_MAKE_DOCX" in request.session
 
     TEMPLATE_FILE = os.path.join(BASE_DIR, "templates//ACL.docx")
@@ -1400,136 +1554,112 @@ def table(records, fields, headings=None, alignment=None, file=None):
 
 def create_markdown_file(request, json_data, filename, fileuuid=""):
     """Создает markdown-файл из JSON-данных"""
-    data_items = json_data.items()
 
     if request:
         update_callback_status(
             request, fileuuid, "git_upload_status", "Создание md файла"
         )
 
-    try:
-        file_path = os.path.join(
-            settings.MEDIA_ROOT, f"{settings.MD_FILE_PATH}/{filename}.md"
+    file_path = os.path.join(
+        settings.MEDIA_ROOT, f"{settings.MD_FILE_PATH}/{filename}.md"
+    )
+    with codecs.open(file_path, "w", encoding="utf-8") as file:
+        acl_info = json_data.get("acl_create_info.html", {})
+        file.write(f"## {acl_info.get('project', '')}\n")
+        file.write("##### Описание доступа к ресурсам\n")
+        file.write(
+            "| Параметр                     | Значение                       |\n"
         )
-        with codecs.open(file_path, "w", encoding="utf-8") as file:
-            func_map = {
-                "acl_create_info.html": md_write_acl_create_info,
-                "acl_internal_resources.html": md_write_acl_internal_resources,
-                "acl_dmz_resources.html": md_write_acl_dmz_resources,
-                "acl_external_resources.html": md_write_acl_external_resources,
-                "acl_traffic.html": md_write_acl_traffic,
-            }
-            for key, data in data_items:
-                if key in func_map:
-                    func_map[key](file, data)
-
-    except Exception as e:
-        md_handle_error(filename, fileuuid, e)
-        return False
-    if request:
-        update_callback_status(
-            request, fileuuid, "git_upload_status", "The md file Created"
+        file.write(
+            "| :--------------------------- | :----------------------------- |\n"
         )
-    return file_path
-
-
-def md_write_acl_create_info(file, data):
-    logger.debug("[MakeMarkDown] acl_create_info")
-    print("[MakeMarkDown] acl_create_info")
-    file.write(f"## {data[4]}\n")
-    file.write("##### Описание доступа к ресурсам\n")
-
-    if data:
-        fields = [0, 1]
-        tmp = zip(contact_table, data)  # noqa: B905
-        table(
-            records=tmp,
-            fields=fields,
-            headings=contact_column,
-            alignment=[("<", "<")] * len(contact_column),
-            file=file,
+        file.write(
+            f"| ФИО                          | {acl_info.get('full_name', '')} |\n"
         )
-
-
-def md_write_acl_internal_resources(file, data):
-    logger.debug(
-        "[write_acl_internal_resources_to_markdown] Запись внутренних ресурсов"
-    )
-    print("[write_acl_internal_resources_to_markdown] Запись внутренних ресурсов")
-
-    file.write("\n##### Список внутренних ресурсов (СГ АльфаСтрахование)\n")
-
-    if data:
-        table(
-            records=data,
-            fields=list(range(len(data[0])) if data else []),
-            headings=standart_column,
-            alignment=[("<", "<")] * len(standart_column),
-            file=file,
+        file.write(f"| E-mail                       | {acl_info.get('email', '')} |\n")
+        file.write(f"| Телефон                      | {acl_info.get('phone', '')} |\n")
+        file.write(
+            f"| Отдел/Управление             | {acl_info.get('department', '')} |\n"
         )
-
-
-def md_write_acl_dmz_resources(file, data):
-    logger.debug("[write_acl_dmz_resources_to_markdown] Запись DMZ ресурсов")
-    print("[write_acl_dmz_resources_to_markdown] Запись DMZ ресурсов")
-
-    file.write("\n##### Список DMZ ресурсов (СГ АльфаСтрахование)\n")
-
-    if data:
-        table(
-            records=data,
-            fields=list(range(len(data[0])) if data else []),
-            headings=standart_column,
-            alignment=[("<", "<")] * len(standart_column),
-            file=file,
+        file.write(
+            f"| Информационная система       | {acl_info.get('project', '')} |\n"
         )
-
-
-def md_write_acl_external_resources(file, data):
-    logger.debug("[write_acl_external_resources_to_markdown] Запись внешних ресурсов")
-    print("[write_acl_external_resources_to_markdown] Запись внешних ресурсов")
-
-    file.write("\n##### Список внешних ресурсов (Internet)\n")
-
-    if data:
-        table(
-            records=data,
-            fields=list(range(len(data[0])) if data else []),
-            headings=external_column,
-            alignment=[("<", "<")] * len(external_column),
-            file=file,
+        file.write(
+            f"| Описание/архитектура проекта | {acl_info.get('description', '')} |\n"
+        )
+        file.write(
+            f"| Дата заполнения              | {acl_info.get('created_at', '')} |\n"
+        )
+        file.write(
+            f"| Дата ввода в эксплуатацию    | {acl_info.get('start_date', '')} |\n"
+        )
+        file.write(
+            f"| Дата вывода из эксплуатации  | {acl_info.get('end_date', '')} |\n"
+        )
+        file.write(
+            f"| Имя файла ACL в gitlab       | {acl_info.get('file_name', '')} |\n\n"
         )
 
+        internal_resources = json_data.get("acl_internal_resources.html", [])
+        if internal_resources:
+            file.write("##### Список внутренних ресурсов (СГ АльфаСтрахование)\n")
+            file.write(
+                "| IP-адрес     | Маска подсети/Префикс | Описание           |\n"
+            )
+            file.write(
+                "| :----------- | :-------------------- | :----------------- |\n"
+            )
+            for resource in internal_resources:
+                file.write(
+                    f"| {resource.get('source_ip', '').ljust(12)} | {str(resource.get('mask', '')).ljust(20)} | {resource.get('description', '').ljust(17)} |\n"
+                )
+            file.write("\n")
 
-def md_write_acl_traffic(file, data):
-    logger.debug("[write_acl_traffic_to_markdown] Запись потоков трафика")
-    print("[write_acl_traffic_to_markdown] Запись потоков трафика")
-
-    file.write("\n##### Потоки трафика\n")
-
-    if data:
-        # TODO временно до момента реструктуризации поля Acltext
-        # max_length = max(len(item) for item in data)
-        max_length = len(traffic_column)
-        data = prepare_data_for_table(data, traffic_column)
+        dmz_resources = json_data.get("acl_dmz_resources.html", [])
+        if dmz_resources:
+            file.write("##### Список DMZ ресурсов (СГ АльфаСтрахование)\n")
+            file.write(
+                "| IP-адрес       | Маска подсети/Префикс | Описание                      |\n"
+            )
+            file.write(
+                "| :------------- | :-------------------- | :---------------------------- |\n"
+            )
+            for resource in dmz_resources:
+                file.write(
+                    f"| {resource.get('source_ip', '').ljust(15)} | {str(resource.get('mask', '')).ljust(20)} | {resource.get('description', '').ljust(28)} |\n"
+                )
+            file.write("\n")
 
-        table(
-            records=data,
-            fields=list(range(max_length)),
-            headings=traffic_column,
-            alignment=[("<", "<")] * max_length,
-            file=file,
-        )
+        external_resources = json_data.get("acl_external_resources.html", [])
+        if external_resources:
+            file.write("##### Список внешних ресурсов (Internet)\n")
+            file.write(
+                "| IP-адрес       | Полное доменное имя источника | Маска подсети/Префикс | Описание                                |\n"
+            )
+            file.write(
+                "| :------------- | :---------------------------- | :-------------------- | :-------------------------------------- |\n"
+            )
+            for resource in external_resources:
+                file.write(
+                    f"| {resource.get('source_ip', '').ljust(15)} | {resource.get('domain', '').ljust(28)} | {str(resource.get('mask', '')).ljust(20)} | {resource.get('description', '').ljust(38)} |\n"
+                )
+            file.write("\n")
 
+        traffic_flows = json_data.get("acl_traffic.html", [])
+        if traffic_flows:
+            file.write("##### Потоки трафика\n")
+            file.write(
+                "| Hostname (Источник) | IP Address (Источник) | Hostname (Назначение) | IP Address (Назначение) | Protocol/Port (Назначение)        | ПО использующее нестандартный порт | Описание (цель)                                                                                  | Этот доступ резервный? |\n"
+            )
+            file.write(
+                "| :------------------ | :-------------------- | :-------------------- | :---------------------- | :-------------------------------- | :--------------------------------- | :----------------------------------------------------------------------------------------------- | :--------------------- |\n"
+            )
+            for flow in traffic_flows:
+                file.write(
+                    f"| {flow.get('sourse_domain', '').ljust(18)} | {flow.get('sourse_ip', '').ljust(20)} | {flow.get('destination_domain', '').ljust(20)} | {flow.get('destination_ip', '').ljust(22)} | {flow.get('protocol_port', '').ljust(32)} | {flow.get('program_name', '').ljust(33)} | {flow.get('description', '').ljust(95)} | {'reserve' if flow.get('reserve', False) else ''.ljust(21)} |\n"
+                )
 
-def prepare_data_for_table(data, fields):
-    max_length = len(fields)
-    prepared_data = []
-    for item in data:
-        prepared_item = item[:max_length]
-        prepared_item.extend([""] * (max_length - len(prepared_item)))
-        prepared_data.append(prepared_item)
-    return prepared_data
+    return file_path
 
 
 def md_handle_error(filename, fileuuid, e):
@@ -2547,6 +2677,8 @@ def SendMessageToApprove(acl_id, acl_owner, user, token=""):
 
 
 def send_to_mattermost(*messages):
+    print("SWND TO MM", messages)
+    return
     try:
         text = ""
         for message in messages:
@@ -2653,6 +2785,12 @@ def get_acl_from_gitlab(
 
 
 def convert_md_to_dict(md_content: str):
+    def safe_get(data, index):
+        try:
+            return getitem(data, index)
+        except IndexError:
+            return ""
+
     try:
         LOCAL_STORAGE = {}
         result = {}
@@ -2663,7 +2801,7 @@ def convert_md_to_dict(md_content: str):
             line = line.strip()
             if line.startswith("##### Описание доступа к ресурсам"):
                 current_section = "acl_create_info.html"
-                LOCAL_STORAGE[current_section] = []
+                LOCAL_STORAGE[current_section] = {}
 
             elif line.startswith("##### Список внутренних ресурсов"):
                 current_section = "acl_internal_resources.html"
@@ -2686,7 +2824,24 @@ def convert_md_to_dict(md_content: str):
                     parts = [p.strip() for p in line.split("|")[1:-1]]
                     if re.match("^:--", parts[0]) or parts == contact_column:
                         continue
-                    LOCAL_STORAGE[current_section].append(parts[1])
+
+                    key_map = {
+                        "ФИО": "full_name",
+                        "E-mail": "email",
+                        "Телефон": "phone",
+                        "Отдел/Управление": "department",
+                        "Информационная система": "project",
+                        "Описание/архитектура проекта": "description",
+                        "Дата заполнения": "created_at",
+                        "Дата ввода в эксплуатацию": "start_date",
+                        "Дата вывода из эксплуатации": "end_date",
+                        "Имя файла ACL в gitlab": "file_name",
+                    }
+
+                    if len(parts) == 2:
+                        key, value = parts
+                        if key in key_map:
+                            LOCAL_STORAGE[current_section][key_map[key]] = value
 
                 elif current_section in [
                     "acl_internal_resources.html",
@@ -2707,8 +2862,42 @@ def convert_md_to_dict(md_content: str):
                         or set(parts).issubset(set(traffic_column))
                     ):
                         continue
-                    LOCAL_STORAGE[current_section].append(parts)
-
+                    if len(parts) == 3 and current_section in [
+                        "acl_internal_resources.html",
+                        "acl_dmz_resources.html",
+                    ]:
+                        LOCAL_STORAGE[current_section].append(
+                            {
+                                "source_ip": safe_get(parts, 0),
+                                "mask": safe_get(parts, 1),
+                                "description": safe_get(parts, 2),
+                            }
+                        )
+                    elif (
+                        len(parts) == 4
+                        and current_section == "acl_external_resources.html"
+                    ):
+                        LOCAL_STORAGE[current_section].append(
+                            {
+                                "source_ip": safe_get(parts, 0),
+                                "domain": safe_get(parts, 1),
+                                "mask": safe_get(parts, 2),
+                                "description": safe_get(parts, 3),
+                            }
+                        )
+                    elif current_section == "acl_traffic.html":
+                        LOCAL_STORAGE[current_section].append(
+                            {
+                                "sourse_domain": safe_get(parts, 0),
+                                "sourse_ip": safe_get(parts, 1),
+                                "destination_domain": safe_get(parts, 2),
+                                "destination_ip": safe_get(parts, 3),
+                                "protocol_port": safe_get(parts, 4),
+                                "program_name": safe_get(parts, 5),
+                                "description": safe_get(parts, 6),
+                                "reserve": safe_get(parts, 7).lower() == "reserve",
+                            }
+                        )
         result["LOCAL_STORAGE"] = LOCAL_STORAGE
         return result
     except Exception as e:


==== File: static/js/main.js ====
@@ -514,27 +514,40 @@ $(document).ready(function(){
 
 
 
-    $(".table-ip-internal").delegate('.btn-action-add','click', function() {
-    let tr    = $(this).closest('tr')[0];
-    let new_name = $('.table-ip-internal tr:first-child').find('.form-control');
-    let idx_input = 0;
-    $(tr).clone().insertAfter(tr).find('.form-control').each(function() {
-        try
-        {   console.log(new_name[idx_input].name);
-
-                $(this).attr('placeholder', '').attr('name',  new_name[idx_input].name+'_'+el_id.toString());
-                if(new_name[idx_input].name.includes("input_descr")){
-                    $(this).val("").attr('placeholder', "").attr('name',  new_name[idx_input].name+'_'+el_id.toString());
+    $(".table-ip-internal").delegate('.btn-action-add', 'click', function() {
+        let tr = $(this).closest('tr');
+        let newRow = tr.clone();
+        
+        // Find the current maximum index
+        let maxIndex = 0;
+        $('.table-ip-internal tbody tr').each(function() {
+            $(this).find('.form-control').each(function() {
+                let name = $(this).attr('name');
+                // Skip elements without name attribute
+                if (name) {
+                    let match = name.match(/\[(\d+)\]/);
+                    if (match && parseInt(match[1]) > maxIndex) {
+                        maxIndex = parseInt(match[1]);
+                    }
                 }
-            idx_input++;
-            el_id++;
-        }catch (e){
-            console.log(e);
-        }
-
-    });
-
-
+            });
+        });
+    
+        // Increment the index for the new row
+        let newIndex = maxIndex + 1;
+    
+        // Update the name attributes in the cloned row
+        newRow.find('.form-control').each(function() {
+            let name = $(this).attr('name');
+            // Only update elements that have a name attribute
+            if (name) {
+                let newName = name.replace(/\[\d+\]/, `[${newIndex}]`);
+                $(this).attr('name', newName);
+            }
+        });
+    
+        // Insert the new row after the current row
+        newRow.insertAfter(tr);
     });
 
     $(".table-ip-internal").on('click', '.btn-action-rm', function() {


