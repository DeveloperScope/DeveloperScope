==== File: accesslist/signals.py ====
@@ -17,5 +17,6 @@ def run_send_acl_task(sender, instance, **kwargs):
                 "acl_id": instance.id,
                 "gitlab_repo_url": gitlab_repo_url,
             },
-            countdown=10,
+            countdown=5,
+            task_id=f"send_acl_task_{instance.id}"
         )


==== File: acladmin/tasks.py ====
@@ -21,7 +21,7 @@ def send_acl(acl_id, gitlab_repo_url):
     send_to_mattermost("[acl_portal][Celery send_acl] Cтарт задачи.")
     # 1 Создаём docx файл
     ACL = apps.get_model("accesslist", "ACL")
-    acl_object = ACL.objects.get(id=acl_id)
+    acl_object = ACL.objects.select_for_update().get(id=acl_id)
     acl_data_set = json.loads(acl_object.acltext)
 
     try:
@@ -45,7 +45,6 @@ def send_acl(acl_id, gitlab_repo_url):
         f"[acl_portal][Celery send_acl] Старт отправки ACL({acl_object.id}) в omnitracker. Сформированный файл : {docx_url}"
     )
     # 2 Отправляем docx файл в omnitracker
-    sleep(5)
     task_id = celery_send_omnitracker(
         sender=acl_object.owner.email,
         title=f"SH0458 Запрос на предоставление доступа согласован: {str(acl_object.approve.first().get_full_name())}",


