==== File: ownerlist/utils.py ====
@@ -1137,7 +1137,7 @@ def make_doc(
             )
             return convert_md_to_dict(md_content)["LOCAL_STORAGE"]
         print("Не удалось получить gitlab_data_set")
-        return data_set
+        return {}
 
     def prepare_file_name():
         try:
@@ -1197,15 +1197,19 @@ def make_doc(
             else:
                 cell.text = str(row_data)
 
-            gitlab_row_data = gitlab_data.get(field)
-            if str(row_data) != str(gitlab_row_data):
+            # Если gitlab_data пустой, помечаем все как новые
+            if not gitlab_data:
                 highlight_changes(cell, True, False)
-                if gitlab_row_data:
-                    strike_paragraph = cell.add_paragraph()
-                    strike_paragraph.add_run(str(gitlab_row_data))
-                    highlight_changes(strike_paragraph, False, True)
-                else:
-                    not_found_count += 1
+            else:
+                gitlab_row_data = gitlab_data.get(field)
+                if str(row_data) != str(gitlab_row_data):
+                    highlight_changes(cell, True, False)
+                    if gitlab_row_data:
+                        strike_paragraph = cell.add_paragraph()
+                        strike_paragraph.add_run(str(gitlab_row_data))
+                        highlight_changes(strike_paragraph, False, True)
+                    else:
+                        not_found_count += 1
 
         if not_found_count > 0:
             logger.info(
@@ -1326,22 +1330,26 @@ def make_doc(
         deleted_rows = []
         unchanged_rows = []
 
-        # Находим неизмененные и новые строки
-        used_gitlab_indices = set()
-        for curr_row in current_rows:
-            found = False
+        # Если gitlab_data пустой, все строки считаем новыми
+        if not gitlab_data:
+            new_rows = current_rows
+        else:
+            # Находим неизмененные и новые строки
+            used_gitlab_indices = set()
+            for curr_row in current_rows:
+                found = False
+                for i, git_row in enumerate(gitlab_rows):
+                    if i not in used_gitlab_indices and compare_rows(curr_row, git_row):
+                        unchanged_rows.append(curr_row)
+                        used_gitlab_indices.add(i)
+                        found = True
+                        break
+                if not found:
+                    new_rows.append(curr_row)
+            # Находим удаленные строки
             for i, git_row in enumerate(gitlab_rows):
-                if i not in used_gitlab_indices and compare_rows(curr_row, git_row):
-                    unchanged_rows.append(curr_row)
-                    used_gitlab_indices.add(i)
-                    found = True
-                    break
-            if not found:
-                new_rows.append(curr_row)
-        # Находим удаленные строки
-        for i, git_row in enumerate(gitlab_rows):
-            if i not in used_gitlab_indices:
-                deleted_rows.append(git_row)
+                if i not in used_gitlab_indices:
+                    deleted_rows.append(git_row)
 
         # Сначала добавляем неизмененные строки
         for row_values in unchanged_rows:
@@ -1555,6 +1563,11 @@ def table(records, fields, headings=None, alignment=None, file=None):
 def create_markdown_file(request, json_data, filename, fileuuid=""):
     """Создает markdown-файл из JSON-данных"""
 
+    def clean_text(text):
+        if not text:
+            return ""
+        return text.replace("\r", "").replace("\n", "")
+
     if request:
         update_callback_status(
             request, fileuuid, "git_upload_status", "Создание md файла"
@@ -1565,7 +1578,7 @@ def create_markdown_file(request, json_data, filename, fileuuid=""):
     )
     with codecs.open(file_path, "w", encoding="utf-8") as file:
         acl_info = json_data.get("acl_create_info.html", {})
-        file.write(f"## {acl_info.get('project', '')}\n")
+        file.write(f"## {clean_text(acl_info.get('project', ''))}\n")
         file.write("##### Описание доступа к ресурсам\n")
         file.write(
             "| Параметр                     | Значение                       |\n"
@@ -1574,30 +1587,34 @@ def create_markdown_file(request, json_data, filename, fileuuid=""):
             "| :--------------------------- | :----------------------------- |\n"
         )
         file.write(
-            f"| ФИО                          | {acl_info.get('full_name', '')} |\n"
+            f"| ФИО                          | {clean_text(acl_info.get('full_name', ''))} |\n"
+        )
+        file.write(
+            f"| E-mail                       | {clean_text(acl_info.get('email', ''))} |\n"
         )
-        file.write(f"| E-mail                       | {acl_info.get('email', '')} |\n")
-        file.write(f"| Телефон                      | {acl_info.get('phone', '')} |\n")
         file.write(
-            f"| Отдел/Управление             | {acl_info.get('department', '')} |\n"
+            f"| Телефон                      | {clean_text(acl_info.get('phone', ''))} |\n"
         )
         file.write(
-            f"| Информационная система       | {acl_info.get('project', '')} |\n"
+            f"| Отдел/Управление             | {clean_text(acl_info.get('department', ''))} |\n"
         )
         file.write(
-            f"| Описание/архитектура проекта | {acl_info.get('description', '')} |\n"
+            f"| Информационная система       | {clean_text(acl_info.get('project', ''))} |\n"
         )
         file.write(
-            f"| Дата заполнения              | {acl_info.get('created_at', '')} |\n"
+            f"| Описание/архитектура проекта | {clean_text(acl_info.get('description', ''))} |\n"
         )
         file.write(
-            f"| Дата ввода в эксплуатацию    | {acl_info.get('start_date', '')} |\n"
+            f"| Дата заполнения              | {clean_text(acl_info.get('created_at', ''))} |\n"
         )
         file.write(
-            f"| Дата вывода из эксплуатации  | {acl_info.get('end_date', '')} |\n"
+            f"| Дата ввода в эксплуатацию    | {clean_text(acl_info.get('start_date', ''))} |\n"
         )
         file.write(
-            f"| Имя файла ACL в gitlab       | {acl_info.get('file_name', '')} |\n\n"
+            f"| Дата вывода из эксплуатации  | {clean_text(acl_info.get('end_date', ''))} |\n"
+        )
+        file.write(
+            f"| Имя файла ACL в gitlab       | {clean_text(acl_info.get('file_name', ''))} |\n\n"
         )
 
         internal_resources = json_data.get("acl_internal_resources.html", [])
@@ -1611,7 +1628,7 @@ def create_markdown_file(request, json_data, filename, fileuuid=""):
             )
             for resource in internal_resources:
                 file.write(
-                    f"| {resource.get('source_ip', '').ljust(12)} | {str(resource.get('mask', '')).ljust(20)} | {resource.get('description', '').ljust(17)} |\n"
+                    f"| {clean_text(resource.get('source_ip', '').ljust(12))} | {clean_text(str(resource.get('mask', ''))).ljust(20)} | {clean_text(resource.get('description', '').ljust(17))} |\n"
                 )
             file.write("\n")
 
@@ -1626,7 +1643,7 @@ def create_markdown_file(request, json_data, filename, fileuuid=""):
             )
             for resource in dmz_resources:
                 file.write(
-                    f"| {resource.get('source_ip', '').ljust(15)} | {str(resource.get('mask', '')).ljust(20)} | {resource.get('description', '').ljust(28)} |\n"
+                    f"| {clean_text(resource.get('source_ip', '').ljust(15))} | {clean_text(str(resource.get('mask', ''))).ljust(20)} | {clean_text(resource.get('description', '').ljust(28))} |\n"
                 )
             file.write("\n")
 
@@ -1641,7 +1658,7 @@ def create_markdown_file(request, json_data, filename, fileuuid=""):
             )
             for resource in external_resources:
                 file.write(
-                    f"| {resource.get('source_ip', '').ljust(15)} | {resource.get('domain', '').ljust(28)} | {str(resource.get('mask', '')).ljust(20)} | {resource.get('description', '').ljust(38)} |\n"
+                    f"| {clean_text(resource.get('source_ip', '').ljust(15))} | {clean_text(resource.get('domain', '').ljust(28))} | {clean_text(str(resource.get('mask', ''))).ljust(20)} | {clean_text(resource.get('description', '').ljust(38))} |\n"
                 )
             file.write("\n")
 
@@ -1656,7 +1673,7 @@ def create_markdown_file(request, json_data, filename, fileuuid=""):
             )
             for flow in traffic_flows:
                 file.write(
-                    f"| {flow.get('sourse_domain', '').ljust(18)} | {flow.get('sourse_ip', '').ljust(20)} | {flow.get('destination_domain', '').ljust(20)} | {flow.get('destination_ip', '').ljust(22)} | {flow.get('protocol_port', '').ljust(32)} | {flow.get('program_name', '').ljust(33)} | {flow.get('description', '').ljust(95)} | {'reserve' if flow.get('reserve', False) else ''.ljust(21)} |\n"
+                    f"| {clean_text(flow.get('sourse_domain', '').ljust(18))} | {clean_text(flow.get('sourse_ip', '').ljust(20))} | {clean_text(flow.get('destination_domain', '').ljust(20))} | {clean_text(flow.get('destination_ip', '').ljust(22))} | {clean_text(flow.get('protocol_port', '').ljust(32))} | {clean_text(flow.get('program_name', '').ljust(33))} | {clean_text(flow.get('description', '').ljust(95))} | {'reserve' if flow.get('reserve', False) else ''.ljust(21)} |\n"
                 )
 
     return file_path
@@ -2789,6 +2806,9 @@ def convert_md_to_dict(md_content: str):
         except IndexError:
             return ""
 
+    if not md_content:
+        return {"LOCAL_STORAGE": {}}
+
     try:
         LOCAL_STORAGE = {}
         result = {}


