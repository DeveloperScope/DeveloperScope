==== File: accesslist/views.py ====
@@ -46,11 +46,9 @@ from ownerlist.utils import (
     BaseView,
     ClearSessionMeta,
     GitWorker,
-    create_markdown_file,
     MakeTemporaryToken,
     ParseDocx,
     SendMessageToApprove,
-    update_callback_status,
     acl_sending_retry_checking,
     convert_md_to_dict,
     get_acl_from_gitlab,
@@ -66,7 +64,8 @@ from ownerlist.utils import (
     send_onmitracker,
     send_to_mattermost,
     sync_acl_portal_projects_list,
-    upload_file_handler,
+    update_callback_status,
+    upload_file_handler, create_markdown_file,
 )
 from teams.models import Block, Team
 
@@ -140,7 +139,7 @@ class ObjectMixin:
                         response = HttpResponseRedirect(
                             reverse("acl_pending_urls", kwargs=({"acl_id": acl_id}))
                         )
-                        response["Location"] += "?token={}".format(tmp.token)
+                        response["Location"] += f"?token={tmp.token}"
                         return response
 
                     if tmp.approve == request.user:
@@ -273,18 +272,14 @@ class ObjectMixin:
                         request,
                         "Для продолжения, необходимо заполнить контактные данные.",
                     )
-                    return redirect("{}{}/".format(reverse(FORM_URLS[1]), acl_id))
+                    return redirect(f"{reverse(FORM_URLS[1])}{acl_id}/")
                 obj = save__form(request, owner_form, acl_id)
                 if obj is not None:
                     return obj
                 if NO_MAKE_JOB == "no":
                     messages.info(request, "Данные сохранены")
-                    return redirect(
-                        "{}{}/".format(reverse(FORM_URLS[current_page]), acl_id)
-                    )
-                return redirect(
-                    "{}{}/".format(reverse(FORM_URLS[current_page + 1]), acl_id)
-                )
+                    return redirect(f"{reverse(FORM_URLS[current_page])}{acl_id}/")
+                return redirect(f"{reverse(FORM_URLS[current_page + 1])}{acl_id}/")
 
         messages.warning(request, "Не все поля заполнены")
         return render(request, self.template, context={"acl_id": acl_id})
@@ -325,15 +320,13 @@ class Aclhistory(BaseView, LoginRequiredMixin, View):
 
         is_paginated = page.has_other_pages()
 
+        prev_url = ""
         if page.has_previous():
-            prev_url = "?page={}".format(page.previous_page_number())
-        else:
-            prev_url = ""
+            prev_url = f"?page={page.previous_page_number()}"
 
+        next_url = ""
         if page.has_next():
-            next_url = "?page={}".format(page.next_page_number())
-        else:
-            next_url = ""
+            next_url = f"?page={page.next_page_number()}"
 
         context = {
             "acl": ACL,
@@ -495,7 +488,7 @@ class Acl_approve(BaseView, LoginRequiredMixin, View):
                             acl_id, tmp.owner, user_obj, token=tmp.token
                         )
                     except Exception as e:
-                        logger.error("Ошибка при отправке email: {}".format(e))
+                        logger.error(f"Ошибка при отправке email: {e}")
 
             tmp.status = "WTE"
             tmp.approve.set(user_list)
@@ -507,9 +500,7 @@ class Acl_approve(BaseView, LoginRequiredMixin, View):
             if len(form.errors.keys()) > 0:
                 messages.error(
                     request,
-                    "Произошла ошибка при изменении данных, вероятно невалидные данные в форме: {}".format(
-                        form.errors.keys()
-                    ),
+                    f"Произошла ошибка при изменении данных, вероятно невалидные данные в форме: {form.errors.keys()}",
                 )
             else:
                 messages.error(request, "Ошибка на стороне сервера")
@@ -746,9 +737,7 @@ def save__form(request, owner_form: None, acl_id) -> None:
             obj.save()
 
     except Exception as e:
-        messages.error(
-            request, "Ошибка, мы не смогли записать данные в БД. {}".format(e)
-        )
+        messages.error(request, f"Ошибка, мы не смогли записать данные в БД. {e}")
         logger.error(
             "{}|{}|{}".format(stack()[0][3], str(e), request.META.get("REMOTE_ADDR"))
         )
@@ -760,7 +749,7 @@ def save__form(request, owner_form: None, acl_id) -> None:
             logger.error(
                 "{}|{}|{}".format(
                     stack()[0][3],
-                    str("Данные в БД не сохранены"),
+                    "Данные в БД не сохранены",
                     request.META.get("REMOTE_ADDR"),
                 )
             )
@@ -1079,7 +1068,7 @@ def upload_acl_from_git(request):
 def send_acl_to_git(request, acl_object):
     try:
         file_md = (
-                create_markdown_file(
+            create_markdown_file(
                 request,
                 json_data=json.loads(acl_object.acltext),
                 filename=f"acl_{acl_object.id}",
@@ -1183,44 +1172,57 @@ def check_taskid_and_status(request, *args, **kwargs):
                                 data_set=local_storage,
                                 fileuuid=acl_object.id,
                                 gitlab_repo_url=gitlab_repo_url,
-                                gitlab_filename=acl_object.git_filename
+                                gitlab_filename=acl_object.git_filename,
                             )
                             if settings.OMNITRACKER_URL:
                                 try:
                                     docx_url = f"{request.get_host()}/{doc_result[1:]}"
-                                    logger.debug('URL ОТПРАВКИ В OMNI ' + str(docx_url))
+                                    logger.debug("URL ОТПРАВКИ В OMNI " + str(docx_url))
 
-                                    if '://' not in docx_url:
-                                        docx_url = 'https://' + docx_url
+                                    if "://" not in docx_url:
+                                        docx_url = "https://" + docx_url
 
                                 except Exception as e:
-                                    docx_url = ''
-                                    logger.error(f'Ошибка при создании ссылки на docx: {e}')
-                                result_id = send_onmitracker(sender=acl_object.owner.email,
-                                                             title=f'SH0458 Запрос на предоставление доступа согласован : {str(acl_object.approve.first().get_full_name())}',
-                                                             text=f'Прошу предоставить сетевой доступ, согласно ACL. Согласование владельца ресурса во вложении. Ссылка на ACL :https://acl.vesta.ru/acl/info/{str(acl_object.id)}',
-                                                             attach=docx_url,
-                                                             fake=False,
-                                                             request=request,
-                                                             uid=acl_object.id
-                                                             )
+                                    docx_url = ""
+                                    logger.error(
+                                        f"Ошибка при создании ссылки на docx: {e}"
+                                    )
+                                result_id = send_onmitracker(
+                                    sender=acl_object.owner.email,
+                                    title=f"SH0458 Запрос на предоставление доступа согласован : {str(acl_object.approve.first().get_full_name())}",
+                                    text=f"Прошу предоставить сетевой доступ, согласно ACL. Согласование владельца ресурса во вложении. Ссылка на ACL :https://acl.vesta.ru/acl/info/{str(acl_object.id)}",
+                                    attach=docx_url,
+                                    fake=False,
+                                    request=request,
+                                    uid=acl_object.id,
+                                )
                                 result_id = int(result_id) or 0
                                 if result_id == 0:
                                     send_to_mattermost(
-                                        f"[acl_pusher] Мы не смогли создать обращение через OmniTracker")
-                                    raise Exception('[acl_pusher] Мы не смогли создать обращение через OmniTracker')
+                                        "[acl_pusher] Мы не смогли создать обращение через OmniTracker"
+                                    )
+                                    raise Exception(
+                                        "[acl_pusher] Мы не смогли создать обращение через OmniTracker"
+                                    )
                                 else:
                                     if acl_object:
                                         acl_object.taskid = str(result_id)
-                                        acl_object.save(update_fields=['taskid'])
+                                        acl_object.save(update_fields=["taskid"])
                                         success_send_omni_count += 1
                                         send_to_mattermost(
-                                            f'[acl_pusher][owner={acl_object.owner}, Ссылка на ACL: https://acl.vesta.ru/acl/info/{str(acl_object.id)}] Получен номер SD("{result_id}"). Добавление и проверка записи на портале={acl_object.taskid}')
-                            if 'ACT_MAKE_GIT' in request.session: del request.session['ACT_MAKE_GIT']
-                            if 'ACT_OMNI' in request.session: del request.session['ACT_OMNI']
+                                            f'[acl_pusher][owner={acl_object.owner}, Ссылка на ACL: https://acl.vesta.ru/acl/info/{str(acl_object.id)}] Получен номер SD("{result_id}"). Добавление и проверка записи на портале={acl_object.taskid}'
+                                        )
+                            if "ACT_MAKE_GIT" in request.session:
+                                del request.session["ACT_MAKE_GIT"]
+                            if "ACT_OMNI" in request.session:
+                                del request.session["ACT_OMNI"]
                         except Exception as e:
-                            send_to_mattermost(f"[acl_pusher] Произошла ошибка при формировании заявки: {e}")
-                            logger.error(f'[acl_pusher] Произошла ошибка при формировании заявки: {e}')
+                            send_to_mattermost(
+                                f"[acl_pusher] Произошла ошибка при формировании заявки: {e}"
+                            )
+                            logger.error(
+                                f"[acl_pusher] Произошла ошибка при формировании заявки: {e}"
+                            )
                             unsuccessful_count += 1
 
                         try:
@@ -1307,7 +1309,7 @@ def UploadTemplate(request):
             result = {"error": "Ошибка загрузки из файла. Формат не определён."}
         else:
             messages.error(request, str(e))
-        logger.error("{} {}".format(stack()[0][3], str(e)))
+        logger.error(f"{stack()[0][3]} {str(e)}")
 
     if request.method == "POST" and request.is_ajax:
         return HttpResponse(json.dumps(result), content_type="application/text")
@@ -1432,7 +1434,9 @@ def task(request, acl_id) -> bool:
     result_id = None
     doc_ready = False
     if "ACT_MAKE_GIT" in request.session:
-        update_callback_status(request, acl_id, "git_upload_status", "Генерация md файла")
+        update_callback_status(
+            request, acl_id, "git_upload_status", "Генерация md файла"
+        )
 
     if "ACT_MAKE_DOCX" in request.session:
         update_callback_status(
@@ -1467,7 +1471,7 @@ def task(request, acl_id) -> bool:
             request,
             acl_id,
             "docx_download_status",
-            "Произошла ошибка при создании docx файла: {}".format(e),
+            f"Произошла ошибка при создании docx файла: {e}",
             0,
         )
         is_work_done = False
@@ -1504,7 +1508,7 @@ def task(request, acl_id) -> bool:
             is_work_omni = True
             omni_job = cache.get(acl_id, {})
             if settings.DEBUG:
-                logger.debug("OMNI CACHE STATUS: {}".format(omni_job))
+                logger.debug(f"OMNI CACHE STATUS: {omni_job}")
 
             if omni_job.keys().__len__() > 0 or (
                 obj.status == "JOB" and len(obj.taskid) >= 3
@@ -1594,13 +1598,11 @@ def task(request, acl_id) -> bool:
                         request,
                         acl_id,
                         "omni_email_status",
-                        '<p class="text-success">Обращение под номером {} успешно зарегистрировано</p>'.format(
-                            result_id
-                        ),
+                        f'<p class="text-success">Обращение под номером {result_id} успешно зарегистрировано</p>',
                         2,
                     )
                     update_callback_status(
-                        request, acl_id, "omni_track_id", "{}".format(result_id)
+                        request, acl_id, "omni_track_id", f"{result_id}"
                     )
                     if "ACT_OMNI" in request.session:
                         del request.session["ACT_OMNI"]
@@ -1612,7 +1614,7 @@ def task(request, acl_id) -> bool:
                     )
                 )
                 update_callback_status(
-                    request, acl_id, "omni_email_status", "{}".format(str(e))
+                    request, acl_id, "omni_email_status", f"{str(e)}"
                 )
                 sleep(3)  # Ждем callback для уведомления пользователю
 
@@ -1659,9 +1661,7 @@ def task(request, acl_id) -> bool:
                         request,
                         acl_id,
                         "omni_email_status",
-                        '<p class="text-success">Обращение под номером {} успешно зарегистрировано</p>'.format(
-                            result_id
-                        ),
+                        f'<p class="text-success">Обращение под номером {result_id} успешно зарегистрировано</p>',
                         2,
                     )
                 else:
@@ -1677,8 +1677,8 @@ def task(request, acl_id) -> bool:
         # UpdateCallBackStatus(request, acl_id, 'git_upload_status', 'Генерация md файла')
         try:
             file_md = (
-                    create_markdown_file(request, local_storage, "acl_{}".format(acl_id), acl_id)
-                    or "None"
+                create_markdown_file(request, local_storage, f"acl_{acl_id}", acl_id)
+                or "None"
             )
             if not file_md:
                 send_to_mattermost(f"Не удалось создать md файл. acl_id:{acl_id}")
@@ -1688,23 +1688,23 @@ def task(request, acl_id) -> bool:
                 request,
                 acl_id,
                 "git_upload_file",
-                "<a href='{}'style='font-size: 16px' "
+                f"<a href='{file_md}'style='font-size: 16px' "
                 "class='card-link card-download-file text-primary' "
                 "target='_blank' download>"
                 "<i class='fab fa-github pr-1'>"
-                "</i> Скачать md-файл</a>".format(file_md),
+                "</i> Скачать md-файл</a>",
                 2,
             )
 
             file_md_abs = os.path.join(
-                BASE_DIR, "static/md/" + "acl_{}".format(str(acl_id)) + ".md"
+                BASE_DIR, "static/md/" + f"acl_{str(acl_id)}" + ".md"
             )
             if "/" in file_md_abs:
                 if "linux" not in sys.platform:
                     file_md_abs = file_md_abs.replace("/", "\\")
             if not os.path.exists(file_md_abs):
                 file_md_abs = os.path.join(
-                    BASE_DIR, "static/md/" + "acl_{}".format(str(acl_id)) + ".md"
+                    BASE_DIR, "static/md/" + f"acl_{str(acl_id)}" + ".md"
                 )
                 logger.error("[Формирование md] Ошибка при формировании пути md файла.")
                 update_callback_status(
@@ -1766,9 +1766,7 @@ def task(request, acl_id) -> bool:
                 g.free()
         except Exception as e:
             logger.error(f"Ошибка при отправке в git: {e}")
-            update_callback_status(
-                request, acl_id, "git_upload_status", "{}".format(e), 0
-            )
+            update_callback_status(request, acl_id, "git_upload_status", f"{e}", 0)
             # is_work_done = False
         finally:
             if "ACT_MAKE_GIT" in request.session:
@@ -1804,9 +1802,7 @@ def task(request, acl_id) -> bool:
             obj.save(update_fields=["status", "taskid"])
     if settings.DEBUG:
         print(
-            "REQUEST FINISH, SAVING DATA: {}: {}".format(
-                [job for job in tasklist if job in request.session], JOB
-            )
+            f"REQUEST FINISH, SAVING DATA: {[job for job in tasklist if job in request.session]}: {JOB}"
         )
 
     return HttpResponse(
@@ -1896,7 +1892,7 @@ def taskstatus(request, taskid=None):
         obj = obj[0]  # first el
         if obj.taskid and re.match(r"^\d{3,}$", obj.taskid):
             omni_acl_status, omni_http_status = omni_check_status(obj.taskid)
-            if None == omni_acl_status:
+            if omni_acl_status is None:
                 result = {
                     "error": "Could not check omni status, omni_check_status[1422] return None"
                 }
@@ -1998,9 +1994,7 @@ def makeAndDownloadMdAndDocx(request, acl_id):
             if file_type == "docx":
                 logger.info("[MAKE FILE] Создание docx файла")
                 acl_project = local_storage["acl_create_info.html"][4]
-                gitlab_repo_url = ACLGitlabStore.objects.get(
-                    project=acl_project
-                ).gitlab_url
+                gitlab_repo_url = ACLGitlabStore.objects.get(project=acl_project).gitlab_url
                 file_path = make_doc(
                     request,
                     local_storage,
@@ -2016,10 +2010,8 @@ def makeAndDownloadMdAndDocx(request, acl_id):
                 )
                 logger.info(f"[MAKE FILE] Файл md успешно сформирован:{file_path}")
 
-            if file_path is not None:
-                logger.info(
-                    "[MAKE FILE] Путь к файлу получен. Подготовка к скачиванию."
-                )
+            if file_path:
+                logger.info("[MAKE FILE] Путь к файлу получен. Подготовка к скачиванию.")
                 file_name = os.path.basename(file_path)
                 logger.info(f"[MAKE FILE] Получено имя файла:{file_name}")
                 file_md_abs = os.path.join(
@@ -2031,12 +2023,9 @@ def makeAndDownloadMdAndDocx(request, acl_id):
                 logger.info(
                     f"[MAKE FILE] Сформирован абсолютный путь для скачивания:{file_md_abs}"
                 )
-
                 file = open(file_md_abs, "rb")
                 file_response = FileResponse(file)
-                file_response["Content-Disposition"] = (
-                    f'attachment; filename="{file_name}"'
-                )
+                file_response["Content-Disposition"] = f'attachment; filename="{file_name}"'
                 return file_response
 
         logger.error(
@@ -2123,4 +2112,4 @@ class APIACLInfoView(APIView):
                 "result": result,
             }
         ).data
-        return Response(data=response, status=status.HTTP_200_OK)
\ No newline at end of file
+        return Response(data=response, status=status.HTTP_200_OK)


==== File: acladmin/tasks.py ====
@@ -123,14 +123,10 @@ def send_acl(acl_id, gitlab_repo_url):
 
 @shared_task
 def check_acl_status():
-    send_to_mattermost("[acl_portal][Celery check_acl_status] Cтарт задачи.")
     ACL = apps.get_model("accesslist", "ACL")
     acl_objects = ACL.objects.filter(status="JOB", taskid__isnull=False).exclude(
         taskid=""
     )
-    send_to_mattermost(
-        f"[acl_portal][Celery check_acl_status] Cтарт проверки статуса заявок. Всего на проверке: {len(acl_objects)}."
-    )
     for acl_object in acl_objects:
         try:
             check_acl_in_omni(acl_object)
@@ -141,9 +137,6 @@ def check_acl_status():
             send_to_mattermost(
                 f"[acl_portal][Celery check_acl_status] Ошибка проверки статуса acl({acl_object.id}). Ошибка:{e}"
             )
-    send_to_mattermost(
-        "[acl_portal][Celery check_acl_status] Задача успешно отработала."
-    )
 
 
 @shared_task


==== File: ownerlist/utils.py ====
@@ -1400,7 +1400,7 @@ def table(records, fields, headings=None, alignment=None, file=None):
     elif len(extended_align) < num_columns:
         extended_align += [("^", "<") for i in range[num_columns - len(extended_align)]]
 
-    heading_align, cell_align = (x for x in zip(*extended_align))
+    heading_align, cell_align = (x for x in zip(*extended_align))  # noqa: B905
 
     field_widths = [
         len(max(column, key=len)) if len(column) > 0 else 0 for column in columns
@@ -1411,19 +1411,19 @@ def table(records, fields, headings=None, alignment=None, file=None):
     else:
         heading_widths = field_widths
 
-    column_widths = [max(x) for x in zip(field_widths, heading_widths)]
+    column_widths = [max(x) for x in zip(field_widths, heading_widths)]  # noqa: B905
 
     _ = " | ".join(
         [
             "{:" + a + str(w) + "}"
-            for a, w in zip(heading_align, column_widths)
+            for a, w in zip(heading_align, column_widths)  # noqa: B905
         ]
     )
     heading_template = "| " + _ + " |"
     _ = " | ".join(
         [
             "{:" + a + str(w) + "}"
-            for a, w in zip(cell_align, column_widths)
+            for a, w in zip(cell_align, column_widths)  # noqa: B905
         ]
     )
 
@@ -1432,7 +1432,7 @@ def table(records, fields, headings=None, alignment=None, file=None):
     _ = " | ".join(
         [
             left_rule[a] + "-" * (w - 2) + right_rule[a]
-            for a, w in zip(cell_align, column_widths)
+            for a, w in zip(cell_align, column_widths)  # noqa: B905
         ]
     )
     ruling = "| " + _ + " |"
@@ -1441,7 +1441,7 @@ def table(records, fields, headings=None, alignment=None, file=None):
         if headings:
             file.write(heading_template.format(*headings).rstrip() + "\n")
         file.write(ruling.rstrip() + "\n")
-        for row in zip(*columns):
+        for row in zip(*columns):  # noqa: B905
             file.write(row_template.format(*row).rstrip() + "\n")
         file.write("\n")
         file.write("\n")
@@ -1449,7 +1449,7 @@ def table(records, fields, headings=None, alignment=None, file=None):
 
 def create_markdown_file(request, json_data, filename, fileuuid=""):
     """Создает markdown-файл из JSON-данных"""
-    print("[create_markdown_file] Create md")
+
     if request:
         update_callback_status(
             request, fileuuid, "git_upload_status", "Создание md файла"
@@ -1487,7 +1487,7 @@ def md_write_acl_create_info(file, data):
 
     if data:
         fields = [0, 1]
-        tmp = zip(contact_table, data)
+        tmp = zip(contact_table, data)  # noqa: B905
         table(
             records=tmp,
             fields=fields,
@@ -1554,7 +1554,9 @@ def md_write_acl_traffic(file, data):
     file.write("\n##### Потоки трафика\n")
 
     if data:
-        max_length = max(len(item) for item in data)
+        # TODO временно до момента реструктуризации поля Acltext
+        # max_length = max(len(item) for item in data)
+        max_length = len(traffic_column)
         data = [item + [" "] * (max_length - len(item)) for item in data]
 
         table(
@@ -2117,7 +2119,7 @@ def compare_first_column(doc1, doc2):
 
 
 def compare_table_headers(doc1, doc2):
-    for table1, table2 in zip(doc1.tables[1:], doc2.tables[1:]):
+    for table1, table2 in zip(doc1.tables[1:], doc2.tables[1:]):  # noqa: B905
         headers1 = [cell.text for cell in table1.rows[0].cells]
         headers2 = [cell.text for cell in table2.rows[0].cells]
         if headers1 != headers2:
@@ -2280,7 +2282,8 @@ def GetNumberFromMask(mask=""):
 def send_onmitracker(
     sender, title, text, attach, proxy=None, fake=None, request=None, uid=None
 ):
-    """Функция для отправки обращения напрямую в SD  получения номера зарегистрированного обращения"""
+    """Функция для отправки обращения напрямую в SD получения номера зарегистрированного обращения"""
+
     try:
         send_to_mattermost(
             f"Попытка отправки обращения в omnitracker. sender: {sender}; title:{title}; Ссылка на ACL :https://acl.vesta.ru/acl/info/{str(uid)}"


